!function (e) { var t = {}; function n(r) { if (t[r]) return t[r].exports; var i = t[r] = { i: r, l: !1, exports: {} }; return e[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports } n.m = e, n.c = t, n.d = function (e, t, r) { n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r }) }, n.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, n.t = function (e, t) { if (1 & t && (e = n(e)), 8 & t) return e; if (4 & t && "object" == typeof e && e && e.__esModule) return e; var r = Object.create(null); if (n.r(r), Object.defineProperty(r, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var i in e) n.d(r, i, function (t) { return e[t] }.bind(null, i)); return r }, n.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return n.d(t, "a", t), t }, n.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, n.p = "", n(n.s = 2) }([function (e, t, n) { "use strict"; var r = { generateIdentifier: function () { return Math.random().toString(36).substr(2, 10) } }; r.localCName = r.generateIdentifier(), r.splitLines = function (e) { return e.trim().split("\n").map((function (e) { return e.trim() })) }, r.splitSections = function (e) { return e.split("\nm=").map((function (e, t) { return (t > 0 ? "m=" + e : e).trim() + "\r\n" })) }, r.getDescription = function (e) { var t = r.splitSections(e); return t && t[0] }, r.getMediaSections = function (e) { var t = r.splitSections(e); return t.shift(), t }, r.matchPrefix = function (e, t) { return r.splitLines(e).filter((function (e) { return 0 === e.indexOf(t) })) }, r.parseCandidate = function (e) { for (var t, n = { foundation: (t = 0 === e.indexOf("a=candidate:") ? e.substring(12).split(" ") : e.substring(10).split(" "))[0], component: parseInt(t[1], 10), protocol: t[2].toLowerCase(), priority: parseInt(t[3], 10), ip: t[4], address: t[4], port: parseInt(t[5], 10), type: t[7] }, r = 8; r < t.length; r += 2)switch (t[r]) { case "raddr": n.relatedAddress = t[r + 1]; break; case "rport": n.relatedPort = parseInt(t[r + 1], 10); break; case "tcptype": n.tcpType = t[r + 1]; break; case "ufrag": n.ufrag = t[r + 1], n.usernameFragment = t[r + 1]; break; default: n[t[r]] = t[r + 1] }return n }, r.writeCandidate = function (e) { var t = []; t.push(e.foundation), t.push(e.component), t.push(e.protocol.toUpperCase()), t.push(e.priority), t.push(e.address || e.ip), t.push(e.port); var n = e.type; return t.push("typ"), t.push(n), "host" !== n && e.relatedAddress && e.relatedPort && (t.push("raddr"), t.push(e.relatedAddress), t.push("rport"), t.push(e.relatedPort)), e.tcpType && "tcp" === e.protocol.toLowerCase() && (t.push("tcptype"), t.push(e.tcpType)), (e.usernameFragment || e.ufrag) && (t.push("ufrag"), t.push(e.usernameFragment || e.ufrag)), "candidate:" + t.join(" ") }, r.parseIceOptions = function (e) { return e.substr(14).split(" ") }, r.parseRtpMap = function (e) { var t = e.substr(9).split(" "), n = { payloadType: parseInt(t.shift(), 10) }; return t = t[0].split("/"), n.name = t[0], n.clockRate = parseInt(t[1], 10), n.channels = 3 === t.length ? parseInt(t[2], 10) : 1, n.numChannels = n.channels, n }, r.writeRtpMap = function (e) { var t = e.payloadType; void 0 !== e.preferredPayloadType && (t = e.preferredPayloadType); var n = e.channels || e.numChannels || 1; return "a=rtpmap:" + t + " " + e.name + "/" + e.clockRate + (1 !== n ? "/" + n : "") + "\r\n" }, r.parseExtmap = function (e) { var t = e.substr(9).split(" "); return { id: parseInt(t[0], 10), direction: t[0].indexOf("/") > 0 ? t[0].split("/")[1] : "sendrecv", uri: t[1] } }, r.writeExtmap = function (e) { return "a=extmap:" + (e.id || e.preferredId) + (e.direction && "sendrecv" !== e.direction ? "/" + e.direction : "") + " " + e.uri + "\r\n" }, r.parseFmtp = function (e) { for (var t, n = {}, r = e.substr(e.indexOf(" ") + 1).split(";"), i = 0; i < r.length; i++)n[(t = r[i].trim().split("="))[0].trim()] = t[1]; return n }, r.writeFmtp = function (e) { var t = "", n = e.payloadType; if (void 0 !== e.preferredPayloadType && (n = e.preferredPayloadType), e.parameters && Object.keys(e.parameters).length) { var r = []; Object.keys(e.parameters).forEach((function (t) { e.parameters[t] ? r.push(t + "=" + e.parameters[t]) : r.push(t) })), t += "a=fmtp:" + n + " " + r.join(";") + "\r\n" } return t }, r.parseRtcpFb = function (e) { var t = e.substr(e.indexOf(" ") + 1).split(" "); return { type: t.shift(), parameter: t.join(" ") } }, r.writeRtcpFb = function (e) { var t = "", n = e.payloadType; return void 0 !== e.preferredPayloadType && (n = e.preferredPayloadType), e.rtcpFeedback && e.rtcpFeedback.length && e.rtcpFeedback.forEach((function (e) { t += "a=rtcp-fb:" + n + " " + e.type + (e.parameter && e.parameter.length ? " " + e.parameter : "") + "\r\n" })), t }, r.parseSsrcMedia = function (e) { var t = e.indexOf(" "), n = { ssrc: parseInt(e.substr(7, t - 7), 10) }, r = e.indexOf(":", t); return r > -1 ? (n.attribute = e.substr(t + 1, r - t - 1), n.value = e.substr(r + 1)) : n.attribute = e.substr(t + 1), n }, r.parseSsrcGroup = function (e) { var t = e.substr(13).split(" "); return { semantics: t.shift(), ssrcs: t.map((function (e) { return parseInt(e, 10) })) } }, r.getMid = function (e) { var t = r.matchPrefix(e, "a=mid:")[0]; if (t) return t.substr(6) }, r.parseFingerprint = function (e) { var t = e.substr(14).split(" "); return { algorithm: t[0].toLowerCase(), value: t[1] } }, r.getDtlsParameters = function (e, t) { return { role: "auto", fingerprints: r.matchPrefix(e + t, "a=fingerprint:").map(r.parseFingerprint) } }, r.writeDtlsParameters = function (e, t) { var n = "a=setup:" + t + "\r\n"; return e.fingerprints.forEach((function (e) { n += "a=fingerprint:" + e.algorithm + " " + e.value + "\r\n" })), n }, r.parseCryptoLine = function (e) { var t = e.substr(9).split(" "); return { tag: parseInt(t[0], 10), cryptoSuite: t[1], keyParams: t[2], sessionParams: t.slice(3) } }, r.writeCryptoLine = function (e) { return "a=crypto:" + e.tag + " " + e.cryptoSuite + " " + ("object" == typeof e.keyParams ? r.writeCryptoKeyParams(e.keyParams) : e.keyParams) + (e.sessionParams ? " " + e.sessionParams.join(" ") : "") + "\r\n" }, r.parseCryptoKeyParams = function (e) { if (0 !== e.indexOf("inline:")) return null; var t = e.substr(7).split("|"); return { keyMethod: "inline", keySalt: t[0], lifeTime: t[1], mkiValue: t[2] ? t[2].split(":")[0] : void 0, mkiLength: t[2] ? t[2].split(":")[1] : void 0 } }, r.writeCryptoKeyParams = function (e) { return e.keyMethod + ":" + e.keySalt + (e.lifeTime ? "|" + e.lifeTime : "") + (e.mkiValue && e.mkiLength ? "|" + e.mkiValue + ":" + e.mkiLength : "") }, r.getCryptoParameters = function (e, t) { return r.matchPrefix(e + t, "a=crypto:").map(r.parseCryptoLine) }, r.getIceParameters = function (e, t) { var n = r.matchPrefix(e + t, "a=ice-ufrag:")[0], i = r.matchPrefix(e + t, "a=ice-pwd:")[0]; return n && i ? { usernameFragment: n.substr(12), password: i.substr(10) } : null }, r.writeIceParameters = function (e) { return "a=ice-ufrag:" + e.usernameFragment + "\r\na=ice-pwd:" + e.password + "\r\n" }, r.parseRtpParameters = function (e) { for (var t = { codecs: [], headerExtensions: [], fecMechanisms: [], rtcp: [] }, n = r.splitLines(e)[0].split(" "), i = 3; i < n.length; i++) { var o = n[i], a = r.matchPrefix(e, "a=rtpmap:" + o + " ")[0]; if (a) { var s = r.parseRtpMap(a), c = r.matchPrefix(e, "a=fmtp:" + o + " "); switch (s.parameters = c.length ? r.parseFmtp(c[0]) : {}, s.rtcpFeedback = r.matchPrefix(e, "a=rtcp-fb:" + o + " ").map(r.parseRtcpFb), t.codecs.push(s), s.name.toUpperCase()) { case "RED": case "ULPFEC": t.fecMechanisms.push(s.name.toUpperCase()) } } } return r.matchPrefix(e, "a=extmap:").forEach((function (e) { t.headerExtensions.push(r.parseExtmap(e)) })), t }, r.writeRtpDescription = function (e, t) { var n = ""; n += "m=" + e + " ", n += t.codecs.length > 0 ? "9" : "0", n += " UDP/TLS/RTP/SAVPF ", n += t.codecs.map((function (e) { return void 0 !== e.preferredPayloadType ? e.preferredPayloadType : e.payloadType })).join(" ") + "\r\n", n += "c=IN IP4 0.0.0.0\r\n", n += "a=rtcp:9 IN IP4 0.0.0.0\r\n", t.codecs.forEach((function (e) { n += r.writeRtpMap(e), n += r.writeFmtp(e), n += r.writeRtcpFb(e) })); var i = 0; return t.codecs.forEach((function (e) { e.maxptime > i && (i = e.maxptime) })), i > 0 && (n += "a=maxptime:" + i + "\r\n"), n += "a=rtcp-mux\r\n", t.headerExtensions && t.headerExtensions.forEach((function (e) { n += r.writeExtmap(e) })), n }, r.parseRtpEncodingParameters = function (e) { var t, n = [], i = r.parseRtpParameters(e), o = -1 !== i.fecMechanisms.indexOf("RED"), a = -1 !== i.fecMechanisms.indexOf("ULPFEC"), s = r.matchPrefix(e, "a=ssrc:").map((function (e) { return r.parseSsrcMedia(e) })).filter((function (e) { return "cname" === e.attribute })), c = s.length > 0 && s[0].ssrc, l = r.matchPrefix(e, "a=ssrc-group:FID").map((function (e) { return e.substr(17).split(" ").map((function (e) { return parseInt(e, 10) })) })); l.length > 0 && l[0].length > 1 && l[0][0] === c && (t = l[0][1]), i.codecs.forEach((function (e) { if ("RTX" === e.name.toUpperCase() && e.parameters.apt) { var r = { ssrc: c, codecPayloadType: parseInt(e.parameters.apt, 10) }; c && t && (r.rtx = { ssrc: t }), n.push(r), o && ((r = JSON.parse(JSON.stringify(r))).fec = { ssrc: c, mechanism: a ? "red+ulpfec" : "red" }, n.push(r)) } })), 0 === n.length && c && n.push({ ssrc: c }); var d = r.matchPrefix(e, "b="); return d.length && (d = 0 === d[0].indexOf("b=TIAS:") ? parseInt(d[0].substr(7), 10) : 0 === d[0].indexOf("b=AS:") ? 1e3 * parseInt(d[0].substr(5), 10) * .95 - 16e3 : void 0, n.forEach((function (e) { e.maxBitrate = d }))), n }, r.parseRtcpParameters = function (e) { var t = {}, n = r.matchPrefix(e, "a=ssrc:").map((function (e) { return r.parseSsrcMedia(e) })).filter((function (e) { return "cname" === e.attribute }))[0]; n && (t.cname = n.value, t.ssrc = n.ssrc); var i = r.matchPrefix(e, "a=rtcp-rsize"); t.reducedSize = i.length > 0, t.compound = 0 === i.length; var o = r.matchPrefix(e, "a=rtcp-mux"); return t.mux = o.length > 0, t }, r.parseMsid = function (e) { var t, n = r.matchPrefix(e, "a=msid:"); if (1 === n.length) return { stream: (t = n[0].substr(7).split(" "))[0], track: t[1] }; var i = r.matchPrefix(e, "a=ssrc:").map((function (e) { return r.parseSsrcMedia(e) })).filter((function (e) { return "msid" === e.attribute })); return i.length > 0 ? { stream: (t = i[0].value.split(" "))[0], track: t[1] } : void 0 }, r.parseSctpDescription = function (e) { var t, n = r.parseMLine(e), i = r.matchPrefix(e, "a=max-message-size:"); i.length > 0 && (t = parseInt(i[0].substr(19), 10)), isNaN(t) && (t = 65536); var o = r.matchPrefix(e, "a=sctp-port:"); if (o.length > 0) return { port: parseInt(o[0].substr(12), 10), protocol: n.fmt, maxMessageSize: t }; if (r.matchPrefix(e, "a=sctpmap:").length > 0) { var a = r.matchPrefix(e, "a=sctpmap:")[0].substr(10).split(" "); return { port: parseInt(a[0], 10), protocol: a[1], maxMessageSize: t } } }, r.writeSctpDescription = function (e, t) { var n = []; return n = "DTLS/SCTP" !== e.protocol ? ["m=" + e.kind + " 9 " + e.protocol + " " + t.protocol + "\r\n", "c=IN IP4 0.0.0.0\r\n", "a=sctp-port:" + t.port + "\r\n"] : ["m=" + e.kind + " 9 " + e.protocol + " " + t.port + "\r\n", "c=IN IP4 0.0.0.0\r\n", "a=sctpmap:" + t.port + " " + t.protocol + " 65535\r\n"], void 0 !== t.maxMessageSize && n.push("a=max-message-size:" + t.maxMessageSize + "\r\n"), n.join("") }, r.generateSessionId = function () { return Math.random().toString().substr(2, 21) }, r.writeSessionBoilerplate = function (e, t, n) { var i = void 0 !== t ? t : 2; return "v=0\r\no=" + (n || "thisisadapterortc") + " " + (e || r.generateSessionId()) + " " + i + " IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n" }, r.writeMediaSection = function (e, t, n, i) { var o = r.writeRtpDescription(e.kind, t); if (o += r.writeIceParameters(e.iceGatherer.getLocalParameters()), o += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), "offer" === n ? "actpass" : "active"), o += "a=mid:" + e.mid + "\r\n", e.direction ? o += "a=" + e.direction + "\r\n" : e.rtpSender && e.rtpReceiver ? o += "a=sendrecv\r\n" : e.rtpSender ? o += "a=sendonly\r\n" : e.rtpReceiver ? o += "a=recvonly\r\n" : o += "a=inactive\r\n", e.rtpSender) { var a = "msid:" + i.id + " " + e.rtpSender.track.id + "\r\n"; o += "a=" + a, o += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " " + a, e.sendEncodingParameters[0].rtx && (o += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " " + a, o += "a=ssrc-group:FID " + e.sendEncodingParameters[0].ssrc + " " + e.sendEncodingParameters[0].rtx.ssrc + "\r\n") } return o += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " cname:" + r.localCName + "\r\n", e.rtpSender && e.sendEncodingParameters[0].rtx && (o += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " cname:" + r.localCName + "\r\n"), o }, r.getDirection = function (e, t) { for (var n = r.splitLines(e), i = 0; i < n.length; i++)switch (n[i]) { case "a=sendrecv": case "a=sendonly": case "a=recvonly": case "a=inactive": return n[i].substr(2) }return t ? r.getDirection(t) : "sendrecv" }, r.getKind = function (e) { return r.splitLines(e)[0].split(" ")[0].substr(2) }, r.isRejected = function (e) { return "0" === e.split(" ", 2)[1] }, r.parseMLine = function (e) { var t = r.splitLines(e)[0].substr(2).split(" "); return { kind: t[0], port: parseInt(t[1], 10), protocol: t[2], fmt: t.slice(3).join(" ") } }, r.parseOLine = function (e) { var t = r.matchPrefix(e, "o=")[0].substr(2).split(" "); return { username: t[0], sessionId: t[1], sessionVersion: parseInt(t[2], 10), netType: t[3], addressType: t[4], address: t[5] } }, r.isValidSDP = function (e) { if ("string" != typeof e || 0 === e.length) return !1; for (var t = r.splitLines(e), n = 0; n < t.length; n++)if (t[n].length < 2 || "=" !== t[n].charAt(1)) return !1; return !0 }, e.exports = r }, function (e, t, n) { "use strict"; var r = n(0); function i(e, t, n, i, o) { var a = r.writeRtpDescription(e.kind, t); if (a += r.writeIceParameters(e.iceGatherer.getLocalParameters()), a += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), "offer" === n ? "actpass" : o || "active"), a += "a=mid:" + e.mid + "\r\n", e.rtpSender && e.rtpReceiver ? a += "a=sendrecv\r\n" : e.rtpSender ? a += "a=sendonly\r\n" : e.rtpReceiver ? a += "a=recvonly\r\n" : a += "a=inactive\r\n", e.rtpSender) { var s = e.rtpSender._initialTrackId || e.rtpSender.track.id; e.rtpSender._initialTrackId = s; var c = "msid:" + (i ? i.id : "-") + " " + s + "\r\n"; a += "a=" + c, a += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " " + c, e.sendEncodingParameters[0].rtx && (a += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " " + c, a += "a=ssrc-group:FID " + e.sendEncodingParameters[0].ssrc + " " + e.sendEncodingParameters[0].rtx.ssrc + "\r\n") } return a += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " cname:" + r.localCName + "\r\n", e.rtpSender && e.sendEncodingParameters[0].rtx && (a += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " cname:" + r.localCName + "\r\n"), a } function o(e, t) { var n = { codecs: [], headerExtensions: [], fecMechanisms: [] }, r = function (e, t) { e = parseInt(e, 10); for (var n = 0; n < t.length; n++)if (t[n].payloadType === e || t[n].preferredPayloadType === e) return t[n] }, i = function (e, t, n, i) { var o = r(e.parameters.apt, n), a = r(t.parameters.apt, i); return o && a && o.name.toLowerCase() === a.name.toLowerCase() }; return e.codecs.forEach((function (r) { for (var o = 0; o < t.codecs.length; o++) { var a = t.codecs[o]; if (r.name.toLowerCase() === a.name.toLowerCase() && r.clockRate === a.clockRate) { if ("rtx" === r.name.toLowerCase() && r.parameters && a.parameters.apt && !i(r, a, e.codecs, t.codecs)) continue; (a = JSON.parse(JSON.stringify(a))).numChannels = Math.min(r.numChannels, a.numChannels), n.codecs.push(a), a.rtcpFeedback = a.rtcpFeedback.filter((function (e) { for (var t = 0; t < r.rtcpFeedback.length; t++)if (r.rtcpFeedback[t].type === e.type && r.rtcpFeedback[t].parameter === e.parameter) return !0; return !1 })); break } } })), e.headerExtensions.forEach((function (e) { for (var r = 0; r < t.headerExtensions.length; r++) { var i = t.headerExtensions[r]; if (e.uri === i.uri) { n.headerExtensions.push(i); break } } })), n } function a(e, t, n) { return -1 !== { offer: { setLocalDescription: ["stable", "have-local-offer"], setRemoteDescription: ["stable", "have-remote-offer"] }, answer: { setLocalDescription: ["have-remote-offer", "have-local-pranswer"], setRemoteDescription: ["have-local-offer", "have-remote-pranswer"] } }[t][e].indexOf(n) } function s(e, t) { var n = e.getRemoteCandidates().find((function (e) { return t.foundation === e.foundation && t.ip === e.ip && t.port === e.port && t.priority === e.priority && t.protocol === e.protocol && t.type === e.type })); return n || e.addRemoteCandidate(t), !n } function c(e, t) { var n = new Error(t); return n.name = e, n.code = { NotSupportedError: 9, InvalidStateError: 11, InvalidAccessError: 15, TypeError: void 0, OperationError: void 0 }[e], n } e.exports = function (e, t) { function n(t, n) { n.addTrack(t), n.dispatchEvent(new e.MediaStreamTrackEvent("addtrack", { track: t })) } function l(t, n, r, i) { var o = new Event("track"); o.track = n, o.receiver = r, o.transceiver = { receiver: r }, o.streams = i, e.setTimeout((function () { t._dispatchEvent("track", o) })) } var d = function (n) { var i = this, o = document.createDocumentFragment(); if (["addEventListener", "removeEventListener", "dispatchEvent"].forEach((function (e) { i[e] = o[e].bind(o) })), this.canTrickleIceCandidates = null, this.needNegotiation = !1, this.localStreams = [], this.remoteStreams = [], this._localDescription = null, this._remoteDescription = null, this.signalingState = "stable", this.iceConnectionState = "new", this.connectionState = "new", this.iceGatheringState = "new", n = JSON.parse(JSON.stringify(n || {})), this.usingBundle = "max-bundle" === n.bundlePolicy, "negotiate" === n.rtcpMuxPolicy) throw c("NotSupportedError", "rtcpMuxPolicy 'negotiate' is not supported"); switch (n.rtcpMuxPolicy || (n.rtcpMuxPolicy = "require"), n.iceTransportPolicy) { case "all": case "relay": break; default: n.iceTransportPolicy = "all" }switch (n.bundlePolicy) { case "balanced": case "max-compat": case "max-bundle": break; default: n.bundlePolicy = "balanced" }if (n.iceServers = function (e, t) { var n = !1; return (e = JSON.parse(JSON.stringify(e))).filter((function (e) { if (e && (e.urls || e.url)) { var r = e.urls || e.url; e.url && !e.urls && console.warn("RTCIceServer.url is deprecated! Use urls instead."); var i = "string" == typeof r; return i && (r = [r]), r = r.filter((function (e) { return 0 === e.indexOf("turn:") && -1 !== e.indexOf("transport=udp") && -1 === e.indexOf("turn:[") && !n ? (n = !0, !0) : 0 === e.indexOf("stun:") && t >= 14393 && -1 === e.indexOf("?transport=udp") })), delete e.url, e.urls = i ? r[0] : r, !!r.length } })) }(n.iceServers || [], t), this._iceGatherers = [], n.iceCandidatePoolSize) for (var a = n.iceCandidatePoolSize; a > 0; a--)this._iceGatherers.push(new e.RTCIceGatherer({ iceServers: n.iceServers, gatherPolicy: n.iceTransportPolicy })); else n.iceCandidatePoolSize = 0; this._config = n, this.transceivers = [], this._sdpSessionId = r.generateSessionId(), this._sdpSessionVersion = 0, this._dtlsRole = void 0, this._isClosed = !1 }; Object.defineProperty(d.prototype, "localDescription", { configurable: !0, get: function () { return this._localDescription } }), Object.defineProperty(d.prototype, "remoteDescription", { configurable: !0, get: function () { return this._remoteDescription } }), d.prototype.onicecandidate = null, d.prototype.onaddstream = null, d.prototype.ontrack = null, d.prototype.onremovestream = null, d.prototype.onsignalingstatechange = null, d.prototype.oniceconnectionstatechange = null, d.prototype.onconnectionstatechange = null, d.prototype.onicegatheringstatechange = null, d.prototype.onnegotiationneeded = null, d.prototype.ondatachannel = null, d.prototype._dispatchEvent = function (e, t) { this._isClosed || (this.dispatchEvent(t), "function" == typeof this["on" + e] && this["on" + e](t)) }, d.prototype._emitGatheringStateChange = function () { var e = new Event("icegatheringstatechange"); this._dispatchEvent("icegatheringstatechange", e) }, d.prototype.getConfiguration = function () { return this._config }, d.prototype.getLocalStreams = function () { return this.localStreams }, d.prototype.getRemoteStreams = function () { return this.remoteStreams }, d.prototype._createTransceiver = function (e, t) { var n = this.transceivers.length > 0, r = { track: null, iceGatherer: null, iceTransport: null, dtlsTransport: null, localCapabilities: null, remoteCapabilities: null, rtpSender: null, rtpReceiver: null, kind: e, mid: null, sendEncodingParameters: null, recvEncodingParameters: null, stream: null, associatedRemoteMediaStreams: [], wantReceive: !0 }; if (this.usingBundle && n) r.iceTransport = this.transceivers[0].iceTransport, r.dtlsTransport = this.transceivers[0].dtlsTransport; else { var i = this._createIceAndDtlsTransports(); r.iceTransport = i.iceTransport, r.dtlsTransport = i.dtlsTransport } return t || this.transceivers.push(r), r }, d.prototype.addTrack = function (t, n) { if (this._isClosed) throw c("InvalidStateError", "Attempted to call addTrack on a closed peerconnection."); var r; if (this.transceivers.find((function (e) { return e.track === t }))) throw c("InvalidAccessError", "Track already exists."); for (var i = 0; i < this.transceivers.length; i++)this.transceivers[i].track || this.transceivers[i].kind !== t.kind || (r = this.transceivers[i]); return r || (r = this._createTransceiver(t.kind)), this._maybeFireNegotiationNeeded(), -1 === this.localStreams.indexOf(n) && this.localStreams.push(n), r.track = t, r.stream = n, r.rtpSender = new e.RTCRtpSender(t, r.dtlsTransport), r.rtpSender }, d.prototype.addStream = function (e) { var n = this; if (t >= 15025) e.getTracks().forEach((function (t) { n.addTrack(t, e) })); else { var r = e.clone(); e.getTracks().forEach((function (e, t) { var n = r.getTracks()[t]; e.addEventListener("enabled", (function (e) { n.enabled = e.enabled })) })), r.getTracks().forEach((function (e) { n.addTrack(e, r) })) } }, d.prototype.removeTrack = function (t) { if (this._isClosed) throw c("InvalidStateError", "Attempted to call removeTrack on a closed peerconnection."); if (!(t instanceof e.RTCRtpSender)) throw new TypeError("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender."); var n = this.transceivers.find((function (e) { return e.rtpSender === t })); if (!n) throw c("InvalidAccessError", "Sender was not created by this connection."); var r = n.stream; n.rtpSender.stop(), n.rtpSender = null, n.track = null, n.stream = null, -1 === this.transceivers.map((function (e) { return e.stream })).indexOf(r) && this.localStreams.indexOf(r) > -1 && this.localStreams.splice(this.localStreams.indexOf(r), 1), this._maybeFireNegotiationNeeded() }, d.prototype.removeStream = function (e) { var t = this; e.getTracks().forEach((function (e) { var n = t.getSenders().find((function (t) { return t.track === e })); n && t.removeTrack(n) })) }, d.prototype.getSenders = function () { return this.transceivers.filter((function (e) { return !!e.rtpSender })).map((function (e) { return e.rtpSender })) }, d.prototype.getReceivers = function () { return this.transceivers.filter((function (e) { return !!e.rtpReceiver })).map((function (e) { return e.rtpReceiver })) }, d.prototype._createIceGatherer = function (t, n) { var r = this; if (n && t > 0) return this.transceivers[0].iceGatherer; if (this._iceGatherers.length) return this._iceGatherers.shift(); var i = new e.RTCIceGatherer({ iceServers: this._config.iceServers, gatherPolicy: this._config.iceTransportPolicy }); return Object.defineProperty(i, "state", { value: "new", writable: !0 }), this.transceivers[t].bufferedCandidateEvents = [], this.transceivers[t].bufferCandidates = function (e) { var n = !e.candidate || 0 === Object.keys(e.candidate).length; i.state = n ? "completed" : "gathering", null !== r.transceivers[t].bufferedCandidateEvents && r.transceivers[t].bufferedCandidateEvents.push(e) }, i.addEventListener("localcandidate", this.transceivers[t].bufferCandidates), i }, d.prototype._gather = function (t, n) { var i = this, o = this.transceivers[n].iceGatherer; if (!o.onlocalcandidate) { var a = this.transceivers[n].bufferedCandidateEvents; this.transceivers[n].bufferedCandidateEvents = null, o.removeEventListener("localcandidate", this.transceivers[n].bufferCandidates), o.onlocalcandidate = function (e) { if (!(i.usingBundle && n > 0)) { var a = new Event("icecandidate"); a.candidate = { sdpMid: t, sdpMLineIndex: n }; var s = e.candidate, c = !s || 0 === Object.keys(s).length; if (c) "new" !== o.state && "gathering" !== o.state || (o.state = "completed"); else { "new" === o.state && (o.state = "gathering"), s.component = 1, s.ufrag = o.getLocalParameters().usernameFragment; var l = r.writeCandidate(s); a.candidate = Object.assign(a.candidate, r.parseCandidate(l)), a.candidate.candidate = l, a.candidate.toJSON = function () { return { candidate: a.candidate.candidate, sdpMid: a.candidate.sdpMid, sdpMLineIndex: a.candidate.sdpMLineIndex, usernameFragment: a.candidate.usernameFragment } } } var d = r.getMediaSections(i._localDescription.sdp); d[a.candidate.sdpMLineIndex] += c ? "a=end-of-candidates\r\n" : "a=" + a.candidate.candidate + "\r\n", i._localDescription.sdp = r.getDescription(i._localDescription.sdp) + d.join(""); var u = i.transceivers.every((function (e) { return e.iceGatherer && "completed" === e.iceGatherer.state })); "gathering" !== i.iceGatheringState && (i.iceGatheringState = "gathering", i._emitGatheringStateChange()), c || i._dispatchEvent("icecandidate", a), u && (i._dispatchEvent("icecandidate", new Event("icecandidate")), i.iceGatheringState = "complete", i._emitGatheringStateChange()) } }, e.setTimeout((function () { a.forEach((function (e) { o.onlocalcandidate(e) })) }), 0) } }, d.prototype._createIceAndDtlsTransports = function () { var t = this, n = new e.RTCIceTransport(null); n.onicestatechange = function () { t._updateIceConnectionState(), t._updateConnectionState() }; var r = new e.RTCDtlsTransport(n); return r.ondtlsstatechange = function () { t._updateConnectionState() }, r.onerror = function () { Object.defineProperty(r, "state", { value: "failed", writable: !0 }), t._updateConnectionState() }, { iceTransport: n, dtlsTransport: r } }, d.prototype._disposeIceAndDtlsTransports = function (e) { var t = this.transceivers[e].iceGatherer; t && (delete t.onlocalcandidate, delete this.transceivers[e].iceGatherer); var n = this.transceivers[e].iceTransport; n && (delete n.onicestatechange, delete this.transceivers[e].iceTransport); var r = this.transceivers[e].dtlsTransport; r && (delete r.ondtlsstatechange, delete r.onerror, delete this.transceivers[e].dtlsTransport) }, d.prototype._transceive = function (e, n, i) { var a = o(e.localCapabilities, e.remoteCapabilities); n && e.rtpSender && (a.encodings = e.sendEncodingParameters, a.rtcp = { cname: r.localCName, compound: e.rtcpParameters.compound }, e.recvEncodingParameters.length && (a.rtcp.ssrc = e.recvEncodingParameters[0].ssrc), e.rtpSender.send(a)), i && e.rtpReceiver && a.codecs.length > 0 && ("video" === e.kind && e.recvEncodingParameters && t < 15019 && e.recvEncodingParameters.forEach((function (e) { delete e.rtx })), e.recvEncodingParameters.length ? a.encodings = e.recvEncodingParameters : a.encodings = [{}], a.rtcp = { compound: e.rtcpParameters.compound }, e.rtcpParameters.cname && (a.rtcp.cname = e.rtcpParameters.cname), e.sendEncodingParameters.length && (a.rtcp.ssrc = e.sendEncodingParameters[0].ssrc), e.rtpReceiver.receive(a)) }, d.prototype.setLocalDescription = function (e) { var t, n, i = this; if (-1 === ["offer", "answer"].indexOf(e.type)) return Promise.reject(c("TypeError", 'Unsupported type "' + e.type + '"')); if (!a("setLocalDescription", e.type, i.signalingState) || i._isClosed) return Promise.reject(c("InvalidStateError", "Can not set local " + e.type + " in state " + i.signalingState)); if ("offer" === e.type) t = r.splitSections(e.sdp), n = t.shift(), t.forEach((function (e, t) { var n = r.parseRtpParameters(e); i.transceivers[t].localCapabilities = n })), i.transceivers.forEach((function (e, t) { i._gather(e.mid, t) })); else if ("answer" === e.type) { t = r.splitSections(i._remoteDescription.sdp), n = t.shift(); var s = r.matchPrefix(n, "a=ice-lite").length > 0; t.forEach((function (e, t) { var a = i.transceivers[t], c = a.iceGatherer, l = a.iceTransport, d = a.dtlsTransport, u = a.localCapabilities, p = a.remoteCapabilities; if (!(r.isRejected(e) && 0 === r.matchPrefix(e, "a=bundle-only").length) && !a.rejected) { var f = r.getIceParameters(e, n), v = r.getDtlsParameters(e, n); s && (v.role = "server"), i.usingBundle && 0 !== t || (i._gather(a.mid, t), "new" === l.state && l.start(c, f, s ? "controlling" : "controlled"), "new" === d.state && d.start(v)); var h = o(u, p); i._transceive(a, h.codecs.length > 0, !1) } })) } return i._localDescription = { type: e.type, sdp: e.sdp }, "offer" === e.type ? i._updateSignalingState("have-local-offer") : i._updateSignalingState("stable"), Promise.resolve() }, d.prototype.setRemoteDescription = function (i) { var d = this; if (-1 === ["offer", "answer"].indexOf(i.type)) return Promise.reject(c("TypeError", 'Unsupported type "' + i.type + '"')); if (!a("setRemoteDescription", i.type, d.signalingState) || d._isClosed) return Promise.reject(c("InvalidStateError", "Can not set remote " + i.type + " in state " + d.signalingState)); var u = {}; d.remoteStreams.forEach((function (e) { u[e.id] = e })); var p = [], f = r.splitSections(i.sdp), v = f.shift(), h = r.matchPrefix(v, "a=ice-lite").length > 0, m = r.matchPrefix(v, "a=group:BUNDLE ").length > 0; d.usingBundle = m; var g = r.matchPrefix(v, "a=ice-options:")[0]; return d.canTrickleIceCandidates = !!g && g.substr(14).split(" ").indexOf("trickle") >= 0, f.forEach((function (a, c) { var l = r.splitLines(a), f = r.getKind(a), g = r.isRejected(a) && 0 === r.matchPrefix(a, "a=bundle-only").length, S = l[0].substr(2).split(" ")[2], C = r.getDirection(a, v), _ = r.parseMsid(a), T = r.getMid(a) || r.generateIdentifier(); if (g || "application" === f && ("DTLS/SCTP" === S || "UDP/DTLS/SCTP" === S)) d.transceivers[c] = { mid: T, kind: f, protocol: S, rejected: !0 }; else { var y, E, R, I, k, O, P, b, A; !g && d.transceivers[c] && d.transceivers[c].rejected && (d.transceivers[c] = d._createTransceiver(f, !0)); var M, w, D = r.parseRtpParameters(a); g || (M = r.getIceParameters(a, v), (w = r.getDtlsParameters(a, v)).role = "client"), P = r.parseRtpEncodingParameters(a); var N = r.parseRtcpParameters(a), L = r.matchPrefix(a, "a=end-of-candidates", v).length > 0, F = r.matchPrefix(a, "a=candidate:").map((function (e) { return r.parseCandidate(e) })).filter((function (e) { return 1 === e.component })); if (("offer" === i.type || "answer" === i.type) && !g && m && c > 0 && d.transceivers[c] && (d._disposeIceAndDtlsTransports(c), d.transceivers[c].iceGatherer = d.transceivers[0].iceGatherer, d.transceivers[c].iceTransport = d.transceivers[0].iceTransport, d.transceivers[c].dtlsTransport = d.transceivers[0].dtlsTransport, d.transceivers[c].rtpSender && d.transceivers[c].rtpSender.setTransport(d.transceivers[0].dtlsTransport), d.transceivers[c].rtpReceiver && d.transceivers[c].rtpReceiver.setTransport(d.transceivers[0].dtlsTransport)), "offer" !== i.type || g) { if ("answer" === i.type && !g) { E = (y = d.transceivers[c]).iceGatherer, R = y.iceTransport, I = y.dtlsTransport, k = y.rtpReceiver, O = y.sendEncodingParameters, b = y.localCapabilities, d.transceivers[c].recvEncodingParameters = P, d.transceivers[c].remoteCapabilities = D, d.transceivers[c].rtcpParameters = N, F.length && "new" === R.state && (!h && !L || m && 0 !== c ? F.forEach((function (e) { s(y.iceTransport, e) })) : R.setRemoteCandidates(F)), m && 0 !== c || ("new" === R.state && R.start(E, M, "controlling"), "new" === I.state && I.start(w)), !o(y.localCapabilities, y.remoteCapabilities).codecs.filter((function (e) { return "rtx" === e.name.toLowerCase() })).length && y.sendEncodingParameters[0].rtx && delete y.sendEncodingParameters[0].rtx, d._transceive(y, "sendrecv" === C || "recvonly" === C, "sendrecv" === C || "sendonly" === C), !k || "sendrecv" !== C && "sendonly" !== C ? delete y.rtpReceiver : (A = k.track, _ ? (u[_.stream] || (u[_.stream] = new e.MediaStream), n(A, u[_.stream]), p.push([A, k, u[_.stream]])) : (u.default || (u.default = new e.MediaStream), n(A, u.default), p.push([A, k, u.default]))) } } else { (y = d.transceivers[c] || d._createTransceiver(f)).mid = T, y.iceGatherer || (y.iceGatherer = d._createIceGatherer(c, m)), F.length && "new" === y.iceTransport.state && (!L || m && 0 !== c ? F.forEach((function (e) { s(y.iceTransport, e) })) : y.iceTransport.setRemoteCandidates(F)), b = e.RTCRtpReceiver.getCapabilities(f), t < 15019 && (b.codecs = b.codecs.filter((function (e) { return "rtx" !== e.name }))), O = y.sendEncodingParameters || [{ ssrc: 1001 * (2 * c + 2) }]; var x, G = !1; if ("sendrecv" === C || "sendonly" === C) { if (G = !y.rtpReceiver, k = y.rtpReceiver || new e.RTCRtpReceiver(y.dtlsTransport, f), G) A = k.track, _ && "-" === _.stream || (_ ? (u[_.stream] || (u[_.stream] = new e.MediaStream, Object.defineProperty(u[_.stream], "id", { get: function () { return _.stream } })), Object.defineProperty(A, "id", { get: function () { return _.track } }), x = u[_.stream]) : (u.default || (u.default = new e.MediaStream), x = u.default)), x && (n(A, x), y.associatedRemoteMediaStreams.push(x)), p.push([A, k, x]) } else y.rtpReceiver && y.rtpReceiver.track && (y.associatedRemoteMediaStreams.forEach((function (t) { var n = t.getTracks().find((function (e) { return e.id === y.rtpReceiver.track.id })); n && function (t, n) { n.removeTrack(t), n.dispatchEvent(new e.MediaStreamTrackEvent("removetrack", { track: t })) }(n, t) })), y.associatedRemoteMediaStreams = []); y.localCapabilities = b, y.remoteCapabilities = D, y.rtpReceiver = k, y.rtcpParameters = N, y.sendEncodingParameters = O, y.recvEncodingParameters = P, d._transceive(d.transceivers[c], !1, G) } } })), void 0 === d._dtlsRole && (d._dtlsRole = "offer" === i.type ? "active" : "passive"), d._remoteDescription = { type: i.type, sdp: i.sdp }, "offer" === i.type ? d._updateSignalingState("have-remote-offer") : d._updateSignalingState("stable"), Object.keys(u).forEach((function (t) { var n = u[t]; if (n.getTracks().length) { if (-1 === d.remoteStreams.indexOf(n)) { d.remoteStreams.push(n); var r = new Event("addstream"); r.stream = n, e.setTimeout((function () { d._dispatchEvent("addstream", r) })) } p.forEach((function (e) { var t = e[0], r = e[1]; n.id === e[2].id && l(d, t, r, [n]) })) } })), p.forEach((function (e) { e[2] || l(d, e[0], e[1], []) })), e.setTimeout((function () { d && d.transceivers && d.transceivers.forEach((function (e) { e.iceTransport && "new" === e.iceTransport.state && e.iceTransport.getRemoteCandidates().length > 0 && (console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification"), e.iceTransport.addRemoteCandidate({})) })) }), 4e3), Promise.resolve() }, d.prototype.close = function () { this.transceivers.forEach((function (e) { e.iceTransport && e.iceTransport.stop(), e.dtlsTransport && e.dtlsTransport.stop(), e.rtpSender && e.rtpSender.stop(), e.rtpReceiver && e.rtpReceiver.stop() })), this._isClosed = !0, this._updateSignalingState("closed") }, d.prototype._updateSignalingState = function (e) { this.signalingState = e; var t = new Event("signalingstatechange"); this._dispatchEvent("signalingstatechange", t) }, d.prototype._maybeFireNegotiationNeeded = function () { var t = this; "stable" === this.signalingState && !0 !== this.needNegotiation && (this.needNegotiation = !0, e.setTimeout((function () { if (t.needNegotiation) { t.needNegotiation = !1; var e = new Event("negotiationneeded"); t._dispatchEvent("negotiationneeded", e) } }), 0)) }, d.prototype._updateIceConnectionState = function () { var e, t = { new: 0, closed: 0, checking: 0, connected: 0, completed: 0, disconnected: 0, failed: 0 }; if (this.transceivers.forEach((function (e) { e.iceTransport && !e.rejected && t[e.iceTransport.state]++ })), e = "new", t.failed > 0 ? e = "failed" : t.checking > 0 ? e = "checking" : t.disconnected > 0 ? e = "disconnected" : t.new > 0 ? e = "new" : t.connected > 0 ? e = "connected" : t.completed > 0 && (e = "completed"), e !== this.iceConnectionState) { this.iceConnectionState = e; var n = new Event("iceconnectionstatechange"); this._dispatchEvent("iceconnectionstatechange", n) } }, d.prototype._updateConnectionState = function () { var e, t = { new: 0, closed: 0, connecting: 0, connected: 0, completed: 0, disconnected: 0, failed: 0 }; if (this.transceivers.forEach((function (e) { e.iceTransport && e.dtlsTransport && !e.rejected && (t[e.iceTransport.state]++, t[e.dtlsTransport.state]++) })), t.connected += t.completed, e = "new", t.failed > 0 ? e = "failed" : t.connecting > 0 ? e = "connecting" : t.disconnected > 0 ? e = "disconnected" : t.new > 0 ? e = "new" : t.connected > 0 && (e = "connected"), e !== this.connectionState) { this.connectionState = e; var n = new Event("connectionstatechange"); this._dispatchEvent("connectionstatechange", n) } }, d.prototype.createOffer = function () { var n = this; if (n._isClosed) return Promise.reject(c("InvalidStateError", "Can not call createOffer after close")); var o = n.transceivers.filter((function (e) { return "audio" === e.kind })).length, a = n.transceivers.filter((function (e) { return "video" === e.kind })).length, s = arguments[0]; if (s) { if (s.mandatory || s.optional) throw new TypeError("Legacy mandatory/optional constraints not supported."); void 0 !== s.offerToReceiveAudio && (o = !0 === s.offerToReceiveAudio ? 1 : !1 === s.offerToReceiveAudio ? 0 : s.offerToReceiveAudio), void 0 !== s.offerToReceiveVideo && (a = !0 === s.offerToReceiveVideo ? 1 : !1 === s.offerToReceiveVideo ? 0 : s.offerToReceiveVideo) } for (n.transceivers.forEach((function (e) { "audio" === e.kind ? --o < 0 && (e.wantReceive = !1) : "video" === e.kind && --a < 0 && (e.wantReceive = !1) })); o > 0 || a > 0;)o > 0 && (n._createTransceiver("audio"), o--), a > 0 && (n._createTransceiver("video"), a--); var l = r.writeSessionBoilerplate(n._sdpSessionId, n._sdpSessionVersion++); n.transceivers.forEach((function (i, o) { var a = i.track, s = i.kind, c = i.mid || r.generateIdentifier(); i.mid = c, i.iceGatherer || (i.iceGatherer = n._createIceGatherer(o, n.usingBundle)); var l = e.RTCRtpSender.getCapabilities(s); t < 15019 && (l.codecs = l.codecs.filter((function (e) { return "rtx" !== e.name }))), l.codecs.forEach((function (e) { "H264" === e.name && void 0 === e.parameters["level-asymmetry-allowed"] && (e.parameters["level-asymmetry-allowed"] = "1"), i.remoteCapabilities && i.remoteCapabilities.codecs && i.remoteCapabilities.codecs.forEach((function (t) { e.name.toLowerCase() === t.name.toLowerCase() && e.clockRate === t.clockRate && (e.preferredPayloadType = t.payloadType) })) })), l.headerExtensions.forEach((function (e) { (i.remoteCapabilities && i.remoteCapabilities.headerExtensions || []).forEach((function (t) { e.uri === t.uri && (e.id = t.id) })) })); var d = i.sendEncodingParameters || [{ ssrc: 1001 * (2 * o + 1) }]; a && t >= 15019 && "video" === s && !d[0].rtx && (d[0].rtx = { ssrc: d[0].ssrc + 1 }), i.wantReceive && (i.rtpReceiver = new e.RTCRtpReceiver(i.dtlsTransport, s)), i.localCapabilities = l, i.sendEncodingParameters = d })), "max-compat" !== n._config.bundlePolicy && (l += "a=group:BUNDLE " + n.transceivers.map((function (e) { return e.mid })).join(" ") + "\r\n"), l += "a=ice-options:trickle\r\n", n.transceivers.forEach((function (e, t) { l += i(e, e.localCapabilities, "offer", e.stream, n._dtlsRole), l += "a=rtcp-rsize\r\n", !e.iceGatherer || "new" === n.iceGatheringState || 0 !== t && n.usingBundle || (e.iceGatherer.getLocalCandidates().forEach((function (e) { e.component = 1, l += "a=" + r.writeCandidate(e) + "\r\n" })), "completed" === e.iceGatherer.state && (l += "a=end-of-candidates\r\n")) })); var d = new e.RTCSessionDescription({ type: "offer", sdp: l }); return Promise.resolve(d) }, d.prototype.createAnswer = function () { var n = this; if (n._isClosed) return Promise.reject(c("InvalidStateError", "Can not call createAnswer after close")); if ("have-remote-offer" !== n.signalingState && "have-local-pranswer" !== n.signalingState) return Promise.reject(c("InvalidStateError", "Can not call createAnswer in signalingState " + n.signalingState)); var a = r.writeSessionBoilerplate(n._sdpSessionId, n._sdpSessionVersion++); n.usingBundle && (a += "a=group:BUNDLE " + n.transceivers.map((function (e) { return e.mid })).join(" ") + "\r\n"), a += "a=ice-options:trickle\r\n"; var s = r.getMediaSections(n._remoteDescription.sdp).length; n.transceivers.forEach((function (e, r) { if (!(r + 1 > s)) { if (e.rejected) return "application" === e.kind ? "DTLS/SCTP" === e.protocol ? a += "m=application 0 DTLS/SCTP 5000\r\n" : a += "m=application 0 " + e.protocol + " webrtc-datachannel\r\n" : "audio" === e.kind ? a += "m=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n" : "video" === e.kind && (a += "m=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n"), void (a += "c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:" + e.mid + "\r\n"); var c; if (e.stream) "audio" === e.kind ? c = e.stream.getAudioTracks()[0] : "video" === e.kind && (c = e.stream.getVideoTracks()[0]), c && t >= 15019 && "video" === e.kind && !e.sendEncodingParameters[0].rtx && (e.sendEncodingParameters[0].rtx = { ssrc: e.sendEncodingParameters[0].ssrc + 1 }); var l = o(e.localCapabilities, e.remoteCapabilities); !l.codecs.filter((function (e) { return "rtx" === e.name.toLowerCase() })).length && e.sendEncodingParameters[0].rtx && delete e.sendEncodingParameters[0].rtx, a += i(e, l, "answer", e.stream, n._dtlsRole), e.rtcpParameters && e.rtcpParameters.reducedSize && (a += "a=rtcp-rsize\r\n") } })); var l = new e.RTCSessionDescription({ type: "answer", sdp: a }); return Promise.resolve(l) }, d.prototype.addIceCandidate = function (e) { var t, n = this; return e && void 0 === e.sdpMLineIndex && !e.sdpMid ? Promise.reject(new TypeError("sdpMLineIndex or sdpMid required")) : new Promise((function (i, o) { if (!n._remoteDescription) return o(c("InvalidStateError", "Can not add ICE candidate without a remote description")); if (e && "" !== e.candidate) { var a = e.sdpMLineIndex; if (e.sdpMid) for (var l = 0; l < n.transceivers.length; l++)if (n.transceivers[l].mid === e.sdpMid) { a = l; break } var d = n.transceivers[a]; if (!d) return o(c("OperationError", "Can not add ICE candidate")); if (d.rejected) return i(); var u = Object.keys(e.candidate).length > 0 ? r.parseCandidate(e.candidate) : {}; if ("tcp" === u.protocol && (0 === u.port || 9 === u.port)) return i(); if (u.component && 1 !== u.component) return i(); if ((0 === a || a > 0 && d.iceTransport !== n.transceivers[0].iceTransport) && !s(d.iceTransport, u)) return o(c("OperationError", "Can not add ICE candidate")); var p = e.candidate.trim(); 0 === p.indexOf("a=") && (p = p.substr(2)), (t = r.getMediaSections(n._remoteDescription.sdp))[a] += "a=" + (u.type ? p : "end-of-candidates") + "\r\n", n._remoteDescription.sdp = r.getDescription(n._remoteDescription.sdp) + t.join("") } else for (var f = 0; f < n.transceivers.length && (n.transceivers[f].rejected || (n.transceivers[f].iceTransport.addRemoteCandidate({}), (t = r.getMediaSections(n._remoteDescription.sdp))[f] += "a=end-of-candidates\r\n", n._remoteDescription.sdp = r.getDescription(n._remoteDescription.sdp) + t.join(""), !n.usingBundle)); f++); i() })) }, d.prototype.getStats = function (t) { if (t && t instanceof e.MediaStreamTrack) { var n = null; if (this.transceivers.forEach((function (e) { e.rtpSender && e.rtpSender.track === t ? n = e.rtpSender : e.rtpReceiver && e.rtpReceiver.track === t && (n = e.rtpReceiver) })), !n) throw c("InvalidAccessError", "Invalid selector."); return n.getStats() } var r = []; return this.transceivers.forEach((function (e) { ["rtpSender", "rtpReceiver", "iceGatherer", "iceTransport", "dtlsTransport"].forEach((function (t) { e[t] && r.push(e[t].getStats()) })) })), Promise.all(r).then((function (e) { var t = new Map; return e.forEach((function (e) { e.forEach((function (e) { t.set(e.id, e) })) })), t })) };["RTCRtpSender", "RTCRtpReceiver", "RTCIceGatherer", "RTCIceTransport", "RTCDtlsTransport"].forEach((function (t) { var n = e[t]; if (n && n.prototype && n.prototype.getStats) { var r = n.prototype.getStats; n.prototype.getStats = function () { return r.apply(this).then((function (e) { var t = new Map; return Object.keys(e).forEach((function (n) { var r; e[n].type = { inboundrtp: "inbound-rtp", outboundrtp: "outbound-rtp", candidatepair: "candidate-pair", localcandidate: "local-candidate", remotecandidate: "remote-candidate" }[(r = e[n]).type] || r.type, t.set(n, e[n]) })), t })) } } })); var u = ["createOffer", "createAnswer"]; return u.forEach((function (e) { var t = d.prototype[e]; d.prototype[e] = function () { var e = arguments; return "function" == typeof e[0] || "function" == typeof e[1] ? t.apply(this, [arguments[2]]).then((function (t) { "function" == typeof e[0] && e[0].apply(null, [t]) }), (function (t) { "function" == typeof e[1] && e[1].apply(null, [t]) })) : t.apply(this, arguments) } })), (u = ["setLocalDescription", "setRemoteDescription", "addIceCandidate"]).forEach((function (e) { var t = d.prototype[e]; d.prototype[e] = function () { var e = arguments; return "function" == typeof e[1] || "function" == typeof e[2] ? t.apply(this, arguments).then((function () { "function" == typeof e[1] && e[1].apply(null) }), (function (t) { "function" == typeof e[2] && e[2].apply(null, [t]) })) : t.apply(this, arguments) } })), ["getStats"].forEach((function (e) { var t = d.prototype[e]; d.prototype[e] = function () { var e = arguments; return "function" == typeof e[1] ? t.apply(this, arguments).then((function () { "function" == typeof e[1] && e[1].apply(null) })) : t.apply(this, arguments) } })), d } }, function (e, t, n) { "use strict"; n.r(t); var r = {}; n.r(r), n.d(r, "shimGetUserMedia", (function () { return P })), n.d(r, "shimGetDisplayMedia", (function () { return b })), n.d(r, "shimMediaStream", (function () { return A })), n.d(r, "shimOnTrack", (function () { return M })), n.d(r, "shimGetSendersWithDtmf", (function () { return w })), n.d(r, "shimGetStats", (function () { return D })), n.d(r, "shimSenderReceiverGetStats", (function () { return N })), n.d(r, "shimAddTrackRemoveTrackWithNative", (function () { return L })), n.d(r, "shimAddTrackRemoveTrack", (function () { return F })), n.d(r, "shimPeerConnection", (function () { return x })), n.d(r, "fixNegotiationNeeded", (function () { return G })); var i = {}; n.r(i), n.d(i, "shimGetUserMedia", (function () { return j })), n.d(i, "shimGetDisplayMedia", (function () { return H })), n.d(i, "shimPeerConnection", (function () { return B })), n.d(i, "shimReplaceTrack", (function () { return q })); var o = {}; n.r(o), n.d(o, "shimGetUserMedia", (function () { return J })), n.d(o, "shimGetDisplayMedia", (function () { return K })), n.d(o, "shimOnTrack", (function () { return W })), n.d(o, "shimPeerConnection", (function () { return z })), n.d(o, "shimSenderGetStats", (function () { return Q })), n.d(o, "shimReceiverGetStats", (function () { return Y })), n.d(o, "shimRemoveStream", (function () { return X })), n.d(o, "shimRTCDataChannel", (function () { return $ })), n.d(o, "shimAddTransceiver", (function () { return Z })), n.d(o, "shimCreateOffer", (function () { return ee })), n.d(o, "shimCreateAnswer", (function () { return te })); var a = {}; n.r(a), n.d(a, "shimLocalStreamsAPI", (function () { return ne })), n.d(a, "shimRemoteStreamsAPI", (function () { return re })), n.d(a, "shimCallbacksAPI", (function () { return ie })), n.d(a, "shimGetUserMedia", (function () { return oe })), n.d(a, "shimConstraints", (function () { return ae })), n.d(a, "shimRTCIceServerUrls", (function () { return se })), n.d(a, "shimTrackEventTransceiver", (function () { return ce })), n.d(a, "shimCreateOfferLegacy", (function () { return le })); var s = {}; n.r(s), n.d(s, "shimRTCIceCandidate", (function () { return pe })), n.d(s, "shimMaxMessageSize", (function () { return fe })), n.d(s, "shimSendThrowTypeError", (function () { return ve })), n.d(s, "shimConnectionState", (function () { return he })), n.d(s, "removeAllowExtmapMixed", (function () { return me })); var c = { PING: 1, AUTHEN: 2, MESSAGE_TYPE_RATING: 14, CALL_START: 26, CALL_SDP_CANDIDATE: 27, CALL_STOP: 28, CALL_SDP_CANDIDATE_FROM_SERVER: 29, CALL_STOP_FROM_SERVER: 30, CALL_STATE: 31, CALL_STATE_FROM_SERVER: 32, CALL_START_FROM_SERVER: 33, CALL_DTMF: 34, CALL_DTMF_FROM_SERVER: 35, CALL_INFO: 36, CALL_INFO_FROM_SERVER: 37, MSG_FROM_OTHER_DEVICE: 38, PUSH_DEVICE_TOKEN_REGISTER: 39, PUSH_DEVICE_TOKEN_UNREGISTER: 40, CHAT_CREATE_CONVERSATION: 41, CHAT_MESSAGE: 42, CHAT_MESSAGE_FROM_SERVER: 45, CHAT_MESSAGE_REPORT: 46, CHAT_MESSAGE_REPORT_FROM_SERVER: 47, CHAT_CONVERSATION_LOAD: 48, CHAT_MESSAGES_LOAD: 50, CHAT_CONVERSATION_CLEAR_HISTORY: 51, CHAT_DELETE_CONVERSATION: 52, CUSTOM_MESSAGE: 54, CUSTOM_MESSAGE_FROM_SERVER: 55, CHAT_GET_USERS_INFO: 56, CHAT_GET_CONVERSATIONS_INFO: 57, CHAT_ADD_PARTICIPANT: 58, CHAT_ADD_PARTICIPANT_FROM_SERVER: 59, CHAT_REMOVE_PARTICIPANT: 60, CHAT_REMOVE_PARTICIPANT_FROM_SERVER: 61, CHAT_DELETE_MESSAGE: 62, CHAT_UPDATE_CONVERSATION: 63, CHAT_ROUTE_TO_AGENT: 64, CHAT_AGENT_RESPONSE: 65, TIMEOUT_ROUTE_TO_AGENT: 66, TIMEOUT_ROUTE_TO_QUEUE: 67, END_CHAT: 68, RATE_CHAT: 69, UPDATE_USER_INFO: 70, SEND_EMAIL_TRANSCRIPT: 71, GET_CHAT_SERVICES: 72, VIEW_CHAT: 73, JOIN_CHAT_CUSTOMER_CARE: 74, CHAT_TRANSFER_TO_ANOTHER_AGENT: 77, CHAT_UNREAD_CONVERSATION_COUNT: 76, CHAT_CONFIRM_TRANSFER_REQUEST: 78, CHAT_TRANSFER_REQUEST_FROM_ANOTHER_AGENT: 79, UPDATE_USER_INFO_NOTIFICATION: 81, CHAT_USER_BEGIN_TYPING: 84, CHAT_USER_END_TYPING: 85, CHAT_USER_BEGIN_TYPING_NOTIFICATION: 86, CHAT_USER_END_TYPING_NOTIFIACTION: 87, CHAT_AGENT_RESOLVE_CONVERSATION: 94, CHAT_LOAD_ALL_MESSAGES_FOR_CONVERSATIONS: 97, HOLD: 100, TRANSFER: 101, SUBSCRIBE_FROM_SERVER: 102, CHANGE_ATTRIBUTE: 103, OTHER_DEVICE_AUTHEN: 104, CHAT_BLOCK_USER: 105, VIDEO_ENDPOINT_SDP: 108, VIDEO_ENDPOINT_CANDIDATE: 109, VIDEO_ENDPOINT_SDP_FROM_SERVER: 110, VIDEO_ENDPOINT_CANDIDATE_FROM_SERVER: 111, VIDEO_ENDPOINT_MAKE_ROOM: 112, VIDEO_ENDPOINT_JOIN_ROOM: 115, VIDEO_LEFT_ROOM: 116, VIDEO_PUBLISH_TRACK: 117, VIDEO_UNPUBLISH_TRACK: 118, VIDEO_SUBSCRIBE_TRACK: 119, VIDEO_UNSUBSCRIBE_TRACK: 120, VIDEO_TRACK_ADDED_FROM_SERVER: 121, VIDEO_TRACK_REMOVED_FROM_SERVER: 122, VIDEO_ROOM_JOINED_FROM_SERVER: 124, VIDEO_ROOM_LEFT_FROM_SERVER: 125, VIDEO_ROOM_SEND_MSG: 126, VIDEO_ROOM_MSG_FROM_SERVER: 127 }; var l = function e() { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e); var t = []; return t.size = function () { return this.length }, t.isEmpty = function () { return 0 === this.length }, t.containsKey = function (e) { e += ""; for (var t = 0; t < this.length; t++)if (this[t].key === e) return t; return -1 }, t.get = function (e) { e += ""; var t = this.containsKey(e); if (t > -1) return this[t].value }, t.put = function (e, t) { if (e += "", -1 !== this.containsKey(e)) return this.get(e); this.push({ key: e, value: t }) }, t.allKeys = function () { for (var e = [], t = 0; t < this.length; t++)e.push(this[t].key); return e }, t.allIntKeys = function () { for (var e = [], t = 0; t < this.length; t++)e.push(parseInt(this[t].key)); return e }, t.remove = function (e) { e += ""; var t = this.containsKey(e); t > -1 && this.splice(t, 1) }, t.clear = function () { for (var e = this.allKeys(), t = 0; t < e.length; t++) { var n = e[t]; this.remove(n) } }, t }, d = 1, u = 2, p = 3, f = 5, v = 6; let h = !0, m = !0; function g(e, t, n) { const r = e.match(t); return r && r.length >= n && parseInt(r[n], 10) } function S(e, t, n) { if (!e.RTCPeerConnection) return; const r = e.RTCPeerConnection.prototype, i = r.addEventListener; r.addEventListener = function (e, r) { if (e !== t) return i.apply(this, arguments); const o = e => { const t = n(e); t && r(t) }; return this._eventMap = this._eventMap || {}, this._eventMap[r] = o, i.apply(this, [e, o]) }; const o = r.removeEventListener; r.removeEventListener = function (e, n) { if (e !== t || !this._eventMap || !this._eventMap[n]) return o.apply(this, arguments); const r = this._eventMap[n]; return delete this._eventMap[n], o.apply(this, [e, r]) }, Object.defineProperty(r, "on" + t, { get() { return this["_on" + t] }, set(e) { this["_on" + t] && (this.removeEventListener(t, this["_on" + t]), delete this["_on" + t]), e && this.addEventListener(t, this["_on" + t] = e) }, enumerable: !0, configurable: !0 }) } function C(e) { return "boolean" != typeof e ? new Error("Argument type: " + typeof e + ". Please use a boolean.") : (h = e, e ? "adapter.js logging disabled" : "adapter.js logging enabled") } function _(e) { return "boolean" != typeof e ? new Error("Argument type: " + typeof e + ". Please use a boolean.") : (m = !e, "adapter.js deprecation warnings " + (e ? "disabled" : "enabled")) } function T() { if ("object" == typeof window) { if (h) return; "undefined" != typeof console && "function" == typeof console.log && console.log.apply(console, arguments) } } function y(e, t) { m && console.warn(e + " is deprecated, please use " + t + " instead.") } function E(e) { const { navigator: t } = e, n = { browser: null, version: null }; if (void 0 === e || !e.navigator) return n.browser = "Not a browser.", n; if (t.mozGetUserMedia) n.browser = "firefox", n.version = g(t.userAgent, /Firefox\/(\d+)\./, 1); else if (t.webkitGetUserMedia || !1 === e.isSecureContext && e.webkitRTCPeerConnection && !e.RTCIceGatherer) n.browser = "chrome", n.version = g(t.userAgent, /Chrom(e|ium)\/(\d+)\./, 2); else if (t.mediaDevices && t.userAgent.match(/Edge\/(\d+).(\d+)$/)) n.browser = "edge", n.version = g(t.userAgent, /Edge\/(\d+).(\d+)$/, 2); else { if (!e.RTCPeerConnection || !t.userAgent.match(/AppleWebKit\/(\d+)\./)) return n.browser = "Not a supported browser.", n; n.browser = "safari", n.version = g(t.userAgent, /AppleWebKit\/(\d+)\./, 1), n.supportsUnifiedPlan = e.RTCRtpTransceiver && "currentDirection" in e.RTCRtpTransceiver.prototype } return n } function R(e) { return "[object Object]" === Object.prototype.toString.call(e) } function I(e) { return R(e) ? Object.keys(e).reduce((function (t, n) { const r = R(e[n]), i = r ? I(e[n]) : e[n], o = r && !Object.keys(i).length; return void 0 === i || o ? t : Object.assign(t, { [n]: i }) }), {}) : e } function k(e, t, n) { const r = n ? "outbound-rtp" : "inbound-rtp", i = new Map; if (null === t) return i; const o = []; return e.forEach(e => { "track" === e.type && e.trackIdentifier === t.id && o.push(e) }), o.forEach(t => { e.forEach(n => { n.type === r && n.trackId === t.id && function e(t, n, r) { n && !r.has(n.id) && (r.set(n.id, n), Object.keys(n).forEach(i => { i.endsWith("Id") ? e(t, t.get(n[i]), r) : i.endsWith("Ids") && n[i].forEach(n => { e(t, t.get(n), r) }) })) }(e, n, i) }) }), i } const O = T; function P(e) { const t = e && e.navigator; if (!t.mediaDevices) return; const n = E(e), r = function (e) { if ("object" != typeof e || e.mandatory || e.optional) return e; const t = {}; return Object.keys(e).forEach(n => { if ("require" === n || "advanced" === n || "mediaSource" === n) return; const r = "object" == typeof e[n] ? e[n] : { ideal: e[n] }; void 0 !== r.exact && "number" == typeof r.exact && (r.min = r.max = r.exact); const i = function (e, t) { return e ? e + t.charAt(0).toUpperCase() + t.slice(1) : "deviceId" === t ? "sourceId" : t }; if (void 0 !== r.ideal) { t.optional = t.optional || []; let e = {}; "number" == typeof r.ideal ? (e[i("min", n)] = r.ideal, t.optional.push(e), e = {}, e[i("max", n)] = r.ideal, t.optional.push(e)) : (e[i("", n)] = r.ideal, t.optional.push(e)) } void 0 !== r.exact && "number" != typeof r.exact ? (t.mandatory = t.mandatory || {}, t.mandatory[i("", n)] = r.exact) : ["min", "max"].forEach(e => { void 0 !== r[e] && (t.mandatory = t.mandatory || {}, t.mandatory[i(e, n)] = r[e]) }) }), e.advanced && (t.optional = (t.optional || []).concat(e.advanced)), t }, i = function (e, i) { if (n.version >= 61) return i(e); if ((e = JSON.parse(JSON.stringify(e))) && "object" == typeof e.audio) { const t = function (e, t, n) { t in e && !(n in e) && (e[n] = e[t], delete e[t]) }; t((e = JSON.parse(JSON.stringify(e))).audio, "autoGainControl", "googAutoGainControl"), t(e.audio, "noiseSuppression", "googNoiseSuppression"), e.audio = r(e.audio) } if (e && "object" == typeof e.video) { let o = e.video.facingMode; o = o && ("object" == typeof o ? o : { ideal: o }); const a = n.version < 66; if (o && ("user" === o.exact || "environment" === o.exact || "user" === o.ideal || "environment" === o.ideal) && (!t.mediaDevices.getSupportedConstraints || !t.mediaDevices.getSupportedConstraints().facingMode || a)) { let n; if (delete e.video.facingMode, "environment" === o.exact || "environment" === o.ideal ? n = ["back", "rear"] : "user" !== o.exact && "user" !== o.ideal || (n = ["front"]), n) return t.mediaDevices.enumerateDevices().then(t => { let a = (t = t.filter(e => "videoinput" === e.kind)).find(e => n.some(t => e.label.toLowerCase().includes(t))); return !a && t.length && n.includes("back") && (a = t[t.length - 1]), a && (e.video.deviceId = o.exact ? { exact: a.deviceId } : { ideal: a.deviceId }), e.video = r(e.video), O("chrome: " + JSON.stringify(e)), i(e) }) } e.video = r(e.video) } return O("chrome: " + JSON.stringify(e)), i(e) }, o = function (e) { return n.version >= 64 ? e : { name: { PermissionDeniedError: "NotAllowedError", PermissionDismissedError: "NotAllowedError", InvalidStateError: "NotAllowedError", DevicesNotFoundError: "NotFoundError", ConstraintNotSatisfiedError: "OverconstrainedError", TrackStartError: "NotReadableError", MediaDeviceFailedDueToShutdown: "NotAllowedError", MediaDeviceKillSwitchOn: "NotAllowedError", TabCaptureError: "AbortError", ScreenCaptureError: "AbortError", DeviceCaptureError: "AbortError" }[e.name] || e.name, message: e.message, constraint: e.constraint || e.constraintName, toString() { return this.name + (this.message && ": ") + this.message } } }; if (t.getUserMedia = function (e, n, r) { i(e, e => { t.webkitGetUserMedia(e, n, e => { r && r(o(e)) }) }) }.bind(t), t.mediaDevices.getUserMedia) { const e = t.mediaDevices.getUserMedia.bind(t.mediaDevices); t.mediaDevices.getUserMedia = function (t) { return i(t, t => e(t).then(e => { if (t.audio && !e.getAudioTracks().length || t.video && !e.getVideoTracks().length) throw e.getTracks().forEach(e => { e.stop() }), new DOMException("", "NotFoundError"); return e }, e => Promise.reject(o(e)))) } } } function b(e, t) { e.navigator.mediaDevices && "getDisplayMedia" in e.navigator.mediaDevices || e.navigator.mediaDevices && ("function" == typeof t ? e.navigator.mediaDevices.getDisplayMedia = function (n) { return t(n).then(t => { const r = n.video && n.video.width, i = n.video && n.video.height, o = n.video && n.video.frameRate; return n.video = { mandatory: { chromeMediaSource: "desktop", chromeMediaSourceId: t, maxFrameRate: o || 3 } }, r && (n.video.mandatory.maxWidth = r), i && (n.video.mandatory.maxHeight = i), e.navigator.mediaDevices.getUserMedia(n) }) } : console.error("shimGetDisplayMedia: getSourceId argument is not a function")) } function A(e) { e.MediaStream = e.MediaStream || e.webkitMediaStream } function M(e) { if ("object" == typeof e && e.RTCPeerConnection && !("ontrack" in e.RTCPeerConnection.prototype)) { Object.defineProperty(e.RTCPeerConnection.prototype, "ontrack", { get() { return this._ontrack }, set(e) { this._ontrack && this.removeEventListener("track", this._ontrack), this.addEventListener("track", this._ontrack = e) }, enumerable: !0, configurable: !0 }); const t = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function () { return this._ontrackpoly || (this._ontrackpoly = t => { t.stream.addEventListener("addtrack", n => { let r; r = e.RTCPeerConnection.prototype.getReceivers ? this.getReceivers().find(e => e.track && e.track.id === n.track.id) : { track: n.track }; const i = new Event("track"); i.track = n.track, i.receiver = r, i.transceiver = { receiver: r }, i.streams = [t.stream], this.dispatchEvent(i) }), t.stream.getTracks().forEach(n => { let r; r = e.RTCPeerConnection.prototype.getReceivers ? this.getReceivers().find(e => e.track && e.track.id === n.id) : { track: n }; const i = new Event("track"); i.track = n, i.receiver = r, i.transceiver = { receiver: r }, i.streams = [t.stream], this.dispatchEvent(i) }) }, this.addEventListener("addstream", this._ontrackpoly)), t.apply(this, arguments) } } else S(e, "track", e => (e.transceiver || Object.defineProperty(e, "transceiver", { value: { receiver: e.receiver } }), e)) } function w(e) { if ("object" == typeof e && e.RTCPeerConnection && !("getSenders" in e.RTCPeerConnection.prototype) && "createDTMFSender" in e.RTCPeerConnection.prototype) { const t = function (e, t) { return { track: t, get dtmf() { return void 0 === this._dtmf && ("audio" === t.kind ? this._dtmf = e.createDTMFSender(t) : this._dtmf = null), this._dtmf }, _pc: e } }; if (!e.RTCPeerConnection.prototype.getSenders) { e.RTCPeerConnection.prototype.getSenders = function () { return this._senders = this._senders || [], this._senders.slice() }; const n = e.RTCPeerConnection.prototype.addTrack; e.RTCPeerConnection.prototype.addTrack = function (e, r) { let i = n.apply(this, arguments); return i || (i = t(this, e), this._senders.push(i)), i }; const r = e.RTCPeerConnection.prototype.removeTrack; e.RTCPeerConnection.prototype.removeTrack = function (e) { r.apply(this, arguments); const t = this._senders.indexOf(e); -1 !== t && this._senders.splice(t, 1) } } const n = e.RTCPeerConnection.prototype.addStream; e.RTCPeerConnection.prototype.addStream = function (e) { this._senders = this._senders || [], n.apply(this, [e]), e.getTracks().forEach(e => { this._senders.push(t(this, e)) }) }; const r = e.RTCPeerConnection.prototype.removeStream; e.RTCPeerConnection.prototype.removeStream = function (e) { this._senders = this._senders || [], r.apply(this, [e]), e.getTracks().forEach(e => { const t = this._senders.find(t => t.track === e); t && this._senders.splice(this._senders.indexOf(t), 1) }) } } else if ("object" == typeof e && e.RTCPeerConnection && "getSenders" in e.RTCPeerConnection.prototype && "createDTMFSender" in e.RTCPeerConnection.prototype && e.RTCRtpSender && !("dtmf" in e.RTCRtpSender.prototype)) { const t = e.RTCPeerConnection.prototype.getSenders; e.RTCPeerConnection.prototype.getSenders = function () { const e = t.apply(this, []); return e.forEach(e => e._pc = this), e }, Object.defineProperty(e.RTCRtpSender.prototype, "dtmf", { get() { return void 0 === this._dtmf && ("audio" === this.track.kind ? this._dtmf = this._pc.createDTMFSender(this.track) : this._dtmf = null), this._dtmf } }) } } function D(e) { if (!e.RTCPeerConnection) return; const t = e.RTCPeerConnection.prototype.getStats; e.RTCPeerConnection.prototype.getStats = function () { const [e, n, r] = arguments; if (arguments.length > 0 && "function" == typeof e) return t.apply(this, arguments); if (0 === t.length && (0 === arguments.length || "function" != typeof e)) return t.apply(this, []); const i = function (e) { const t = {}; return e.result().forEach(e => { const n = { id: e.id, timestamp: e.timestamp, type: { localcandidate: "local-candidate", remotecandidate: "remote-candidate" }[e.type] || e.type }; e.names().forEach(t => { n[t] = e.stat(t) }), t[n.id] = n }), t }, o = function (e) { return new Map(Object.keys(e).map(t => [t, e[t]])) }; if (arguments.length >= 2) { const r = function (e) { n(o(i(e))) }; return t.apply(this, [r, e]) } return new Promise((e, n) => { t.apply(this, [function (t) { e(o(i(t))) }, n]) }).then(n, r) } } function N(e) { if (!("object" == typeof e && e.RTCPeerConnection && e.RTCRtpSender && e.RTCRtpReceiver)) return; if (!("getStats" in e.RTCRtpSender.prototype)) { const t = e.RTCPeerConnection.prototype.getSenders; t && (e.RTCPeerConnection.prototype.getSenders = function () { const e = t.apply(this, []); return e.forEach(e => e._pc = this), e }); const n = e.RTCPeerConnection.prototype.addTrack; n && (e.RTCPeerConnection.prototype.addTrack = function () { const e = n.apply(this, arguments); return e._pc = this, e }), e.RTCRtpSender.prototype.getStats = function () { const e = this; return this._pc.getStats().then(t => k(t, e.track, !0)) } } if (!("getStats" in e.RTCRtpReceiver.prototype)) { const t = e.RTCPeerConnection.prototype.getReceivers; t && (e.RTCPeerConnection.prototype.getReceivers = function () { const e = t.apply(this, []); return e.forEach(e => e._pc = this), e }), S(e, "track", e => (e.receiver._pc = e.srcElement, e)), e.RTCRtpReceiver.prototype.getStats = function () { const e = this; return this._pc.getStats().then(t => k(t, e.track, !1)) } } if (!("getStats" in e.RTCRtpSender.prototype) || !("getStats" in e.RTCRtpReceiver.prototype)) return; const t = e.RTCPeerConnection.prototype.getStats; e.RTCPeerConnection.prototype.getStats = function () { if (arguments.length > 0 && arguments[0] instanceof e.MediaStreamTrack) { const e = arguments[0]; let t, n, r; return this.getSenders().forEach(n => { n.track === e && (t ? r = !0 : t = n) }), this.getReceivers().forEach(t => (t.track === e && (n ? r = !0 : n = t), t.track === e)), r || t && n ? Promise.reject(new DOMException("There are more than one sender or receiver for the track.", "InvalidAccessError")) : t ? t.getStats() : n ? n.getStats() : Promise.reject(new DOMException("There is no sender or receiver for the track.", "InvalidAccessError")) } return t.apply(this, arguments) } } function L(e) { e.RTCPeerConnection.prototype.getLocalStreams = function () { return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, Object.keys(this._shimmedLocalStreams).map(e => this._shimmedLocalStreams[e][0]) }; const t = e.RTCPeerConnection.prototype.addTrack; e.RTCPeerConnection.prototype.addTrack = function (e, n) { if (!n) return t.apply(this, arguments); this._shimmedLocalStreams = this._shimmedLocalStreams || {}; const r = t.apply(this, arguments); return this._shimmedLocalStreams[n.id] ? -1 === this._shimmedLocalStreams[n.id].indexOf(r) && this._shimmedLocalStreams[n.id].push(r) : this._shimmedLocalStreams[n.id] = [n, r], r }; const n = e.RTCPeerConnection.prototype.addStream; e.RTCPeerConnection.prototype.addStream = function (e) { this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e.getTracks().forEach(e => { if (this.getSenders().find(t => t.track === e)) throw new DOMException("Track already exists.", "InvalidAccessError") }); const t = this.getSenders(); n.apply(this, arguments); const r = this.getSenders().filter(e => -1 === t.indexOf(e)); this._shimmedLocalStreams[e.id] = [e].concat(r) }; const r = e.RTCPeerConnection.prototype.removeStream; e.RTCPeerConnection.prototype.removeStream = function (e) { return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, delete this._shimmedLocalStreams[e.id], r.apply(this, arguments) }; const i = e.RTCPeerConnection.prototype.removeTrack; e.RTCPeerConnection.prototype.removeTrack = function (e) { return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e && Object.keys(this._shimmedLocalStreams).forEach(t => { const n = this._shimmedLocalStreams[t].indexOf(e); -1 !== n && this._shimmedLocalStreams[t].splice(n, 1), 1 === this._shimmedLocalStreams[t].length && delete this._shimmedLocalStreams[t] }), i.apply(this, arguments) } } function F(e) { if (!e.RTCPeerConnection) return; const t = E(e); if (e.RTCPeerConnection.prototype.addTrack && t.version >= 65) return L(e); const n = e.RTCPeerConnection.prototype.getLocalStreams; e.RTCPeerConnection.prototype.getLocalStreams = function () { const e = n.apply(this); return this._reverseStreams = this._reverseStreams || {}, e.map(e => this._reverseStreams[e.id]) }; const r = e.RTCPeerConnection.prototype.addStream; e.RTCPeerConnection.prototype.addStream = function (t) { if (this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, t.getTracks().forEach(e => { if (this.getSenders().find(t => t.track === e)) throw new DOMException("Track already exists.", "InvalidAccessError") }), !this._reverseStreams[t.id]) { const n = new e.MediaStream(t.getTracks()); this._streams[t.id] = n, this._reverseStreams[n.id] = t, t = n } r.apply(this, [t]) }; const i = e.RTCPeerConnection.prototype.removeStream; function o(e, t) { let n = t.sdp; return Object.keys(e._reverseStreams || []).forEach(t => { const r = e._reverseStreams[t], i = e._streams[r.id]; n = n.replace(new RegExp(i.id, "g"), r.id) }), new RTCSessionDescription({ type: t.type, sdp: n }) } function a(e, t) { let n = t.sdp; return Object.keys(e._reverseStreams || []).forEach(t => { const r = e._reverseStreams[t], i = e._streams[r.id]; n = n.replace(new RegExp(r.id, "g"), i.id) }), new RTCSessionDescription({ type: t.type, sdp: n }) } e.RTCPeerConnection.prototype.removeStream = function (e) { this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, i.apply(this, [this._streams[e.id] || e]), delete this._reverseStreams[this._streams[e.id] ? this._streams[e.id].id : e.id], delete this._streams[e.id] }, e.RTCPeerConnection.prototype.addTrack = function (t, n) { if ("closed" === this.signalingState) throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", "InvalidStateError"); const r = [].slice.call(arguments, 1); if (1 !== r.length || !r[0].getTracks().find(e => e === t)) throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.", "NotSupportedError"); const i = this.getSenders().find(e => e.track === t); if (i) throw new DOMException("Track already exists.", "InvalidAccessError"); this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}; const o = this._streams[n.id]; if (o) o.addTrack(t), Promise.resolve().then(() => { this.dispatchEvent(new Event("negotiationneeded")) }); else { const r = new e.MediaStream([t]); this._streams[n.id] = r, this._reverseStreams[r.id] = n, this.addStream(r) } return this.getSenders().find(e => e.track === t) }, ["createOffer", "createAnswer"].forEach((function (t) { const n = e.RTCPeerConnection.prototype[t], r = { [t]() { const e = arguments; return arguments.length && "function" == typeof arguments[0] ? n.apply(this, [t => { const n = o(this, t); e[0].apply(null, [n]) }, t => { e[1] && e[1].apply(null, t) }, arguments[2]]) : n.apply(this, arguments).then(e => o(this, e)) } }; e.RTCPeerConnection.prototype[t] = r[t] })); const s = e.RTCPeerConnection.prototype.setLocalDescription; e.RTCPeerConnection.prototype.setLocalDescription = function () { return arguments.length && arguments[0].type ? (arguments[0] = a(this, arguments[0]), s.apply(this, arguments)) : s.apply(this, arguments) }; const c = Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype, "localDescription"); Object.defineProperty(e.RTCPeerConnection.prototype, "localDescription", { get() { const e = c.get.apply(this); return "" === e.type ? e : o(this, e) } }), e.RTCPeerConnection.prototype.removeTrack = function (e) { if ("closed" === this.signalingState) throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", "InvalidStateError"); if (!e._pc) throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.", "TypeError"); if (!(e._pc === this)) throw new DOMException("Sender was not created by this connection.", "InvalidAccessError"); let t; this._streams = this._streams || {}, Object.keys(this._streams).forEach(n => { this._streams[n].getTracks().find(t => e.track === t) && (t = this._streams[n]) }), t && (1 === t.getTracks().length ? this.removeStream(this._reverseStreams[t.id]) : t.removeTrack(e.track), this.dispatchEvent(new Event("negotiationneeded"))) } } function x(e) { const t = E(e); if (!e.RTCPeerConnection && e.webkitRTCPeerConnection && (e.RTCPeerConnection = e.webkitRTCPeerConnection), !e.RTCPeerConnection) return; const n = 0 === e.RTCPeerConnection.prototype.addIceCandidate.length; t.version < 53 && ["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach((function (t) { const n = e.RTCPeerConnection.prototype[t], r = { [t]() { return arguments[0] = new ("addIceCandidate" === t ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]), n.apply(this, arguments) } }; e.RTCPeerConnection.prototype[t] = r[t] })); const r = e.RTCPeerConnection.prototype.addIceCandidate; e.RTCPeerConnection.prototype.addIceCandidate = function () { return n || arguments[0] ? t.version < 78 && arguments[0] && "" === arguments[0].candidate ? Promise.resolve() : r.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve()) } } function G(e) { S(e, "negotiationneeded", e => { if ("stable" === e.target.signalingState) return e }) } var U = n(1), V = n.n(U); function j(e) { const t = e && e.navigator, n = t.mediaDevices.getUserMedia.bind(t.mediaDevices); t.mediaDevices.getUserMedia = function (e) { return n(e).catch(e => Promise.reject(function (e) { return { name: { PermissionDeniedError: "NotAllowedError" }[e.name] || e.name, message: e.message, constraint: e.constraint, toString() { return this.name } } }(e))) } } function H(e) { "getDisplayMedia" in e.navigator && e.navigator.mediaDevices && (e.navigator.mediaDevices && "getDisplayMedia" in e.navigator.mediaDevices || (e.navigator.mediaDevices.getDisplayMedia = e.navigator.getDisplayMedia.bind(e.navigator))) } function B(e) { const t = E(e); if (e.RTCIceGatherer && (e.RTCIceCandidate || (e.RTCIceCandidate = function (e) { return e }), e.RTCSessionDescription || (e.RTCSessionDescription = function (e) { return e }), t.version < 15025)) { const t = Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype, "enabled"); Object.defineProperty(e.MediaStreamTrack.prototype, "enabled", { set(e) { t.set.call(this, e); const n = new Event("enabled"); n.enabled = e, this.dispatchEvent(n) } }) } e.RTCRtpSender && !("dtmf" in e.RTCRtpSender.prototype) && Object.defineProperty(e.RTCRtpSender.prototype, "dtmf", { get() { return void 0 === this._dtmf && ("audio" === this.track.kind ? this._dtmf = new e.RTCDtmfSender(this) : "video" === this.track.kind && (this._dtmf = null)), this._dtmf } }), e.RTCDtmfSender && !e.RTCDTMFSender && (e.RTCDTMFSender = e.RTCDtmfSender); const n = V()(e, t.version); e.RTCPeerConnection = function (e) { return e && e.iceServers && (e.iceServers = function (e, t) { let n = !1; return (e = JSON.parse(JSON.stringify(e))).filter(e => { if (e && (e.urls || e.url)) { var t = e.urls || e.url; e.url && !e.urls && y("RTCIceServer.url", "RTCIceServer.urls"); const r = "string" == typeof t; return r && (t = [t]), t = t.filter(e => { if (0 === e.indexOf("stun:")) return !1; const t = e.startsWith("turn") && !e.startsWith("turn:[") && e.includes("transport=udp"); return t && !n ? (n = !0, !0) : t && !n }), delete e.url, e.urls = r ? t[0] : t, !!t.length } }) }(e.iceServers, t.version), T("ICE servers after filtering:", e.iceServers)), new n(e) }, e.RTCPeerConnection.prototype = n.prototype } function q(e) { e.RTCRtpSender && !("replaceTrack" in e.RTCRtpSender.prototype) && (e.RTCRtpSender.prototype.replaceTrack = e.RTCRtpSender.prototype.setTrack) } function J(e) { const t = E(e), n = e && e.navigator, r = e && e.MediaStreamTrack; if (n.getUserMedia = function (e, t, r) { y("navigator.getUserMedia", "navigator.mediaDevices.getUserMedia"), n.mediaDevices.getUserMedia(e).then(t, r) }, !(t.version > 55 && "autoGainControl" in n.mediaDevices.getSupportedConstraints())) { const e = function (e, t, n) { t in e && !(n in e) && (e[n] = e[t], delete e[t]) }, t = n.mediaDevices.getUserMedia.bind(n.mediaDevices); if (n.mediaDevices.getUserMedia = function (n) { return "object" == typeof n && "object" == typeof n.audio && (n = JSON.parse(JSON.stringify(n)), e(n.audio, "autoGainControl", "mozAutoGainControl"), e(n.audio, "noiseSuppression", "mozNoiseSuppression")), t(n) }, r && r.prototype.getSettings) { const t = r.prototype.getSettings; r.prototype.getSettings = function () { const n = t.apply(this, arguments); return e(n, "mozAutoGainControl", "autoGainControl"), e(n, "mozNoiseSuppression", "noiseSuppression"), n } } if (r && r.prototype.applyConstraints) { const t = r.prototype.applyConstraints; r.prototype.applyConstraints = function (n) { return "audio" === this.kind && "object" == typeof n && (n = JSON.parse(JSON.stringify(n)), e(n, "autoGainControl", "mozAutoGainControl"), e(n, "noiseSuppression", "mozNoiseSuppression")), t.apply(this, [n]) } } } } function K(e, t) { e.navigator.mediaDevices && "getDisplayMedia" in e.navigator.mediaDevices || e.navigator.mediaDevices && (e.navigator.mediaDevices.getDisplayMedia = function (n) { if (!n || !n.video) { const e = new DOMException("getDisplayMedia without video constraints is undefined"); return e.name = "NotFoundError", e.code = 8, Promise.reject(e) } return !0 === n.video ? n.video = { mediaSource: t } : n.video.mediaSource = t, e.navigator.mediaDevices.getUserMedia(n) }) } function W(e) { "object" == typeof e && e.RTCTrackEvent && "receiver" in e.RTCTrackEvent.prototype && !("transceiver" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, "transceiver", { get() { return { receiver: this.receiver } } }) } function z(e) { const t = E(e); if ("object" != typeof e || !e.RTCPeerConnection && !e.mozRTCPeerConnection) return; if (!e.RTCPeerConnection && e.mozRTCPeerConnection && (e.RTCPeerConnection = e.mozRTCPeerConnection), t.version < 53 && ["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach((function (t) { const n = e.RTCPeerConnection.prototype[t], r = { [t]() { return arguments[0] = new ("addIceCandidate" === t ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]), n.apply(this, arguments) } }; e.RTCPeerConnection.prototype[t] = r[t] })), t.version < 68) { const t = e.RTCPeerConnection.prototype.addIceCandidate; e.RTCPeerConnection.prototype.addIceCandidate = function () { return arguments[0] ? arguments[0] && "" === arguments[0].candidate ? Promise.resolve() : t.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve()) } } const n = { inboundrtp: "inbound-rtp", outboundrtp: "outbound-rtp", candidatepair: "candidate-pair", localcandidate: "local-candidate", remotecandidate: "remote-candidate" }, r = e.RTCPeerConnection.prototype.getStats; e.RTCPeerConnection.prototype.getStats = function () { const [e, i, o] = arguments; return r.apply(this, [e || null]).then(e => { if (t.version < 53 && !i) try { e.forEach(e => { e.type = n[e.type] || e.type }) } catch (t) { if ("TypeError" !== t.name) throw t; e.forEach((t, r) => { e.set(r, Object.assign({}, t, { type: n[t.type] || t.type })) }) } return e }).then(i, o) } } function Q(e) { if ("object" != typeof e || !e.RTCPeerConnection || !e.RTCRtpSender) return; if (e.RTCRtpSender && "getStats" in e.RTCRtpSender.prototype) return; const t = e.RTCPeerConnection.prototype.getSenders; t && (e.RTCPeerConnection.prototype.getSenders = function () { const e = t.apply(this, []); return e.forEach(e => e._pc = this), e }); const n = e.RTCPeerConnection.prototype.addTrack; n && (e.RTCPeerConnection.prototype.addTrack = function () { const e = n.apply(this, arguments); return e._pc = this, e }), e.RTCRtpSender.prototype.getStats = function () { return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map) } } function Y(e) { if ("object" != typeof e || !e.RTCPeerConnection || !e.RTCRtpSender) return; if (e.RTCRtpSender && "getStats" in e.RTCRtpReceiver.prototype) return; const t = e.RTCPeerConnection.prototype.getReceivers; t && (e.RTCPeerConnection.prototype.getReceivers = function () { const e = t.apply(this, []); return e.forEach(e => e._pc = this), e }), S(e, "track", e => (e.receiver._pc = e.srcElement, e)), e.RTCRtpReceiver.prototype.getStats = function () { return this._pc.getStats(this.track) } } function X(e) { e.RTCPeerConnection && !("removeStream" in e.RTCPeerConnection.prototype) && (e.RTCPeerConnection.prototype.removeStream = function (e) { y("removeStream", "removeTrack"), this.getSenders().forEach(t => { t.track && e.getTracks().includes(t.track) && this.removeTrack(t) }) }) } function $(e) { e.DataChannel && !e.RTCDataChannel && (e.RTCDataChannel = e.DataChannel) } function Z(e) { if ("object" != typeof e || !e.RTCPeerConnection) return; const t = e.RTCPeerConnection.prototype.addTransceiver; t && (e.RTCPeerConnection.prototype.addTransceiver = function () { this.setParametersPromises = []; const e = arguments[1], n = e && "sendEncodings" in e; n && e.sendEncodings.forEach(e => { if ("rid" in e) { if (!/^[a-z0-9]{0,16}$/i.test(e.rid)) throw new TypeError("Invalid RID value provided.") } if ("scaleResolutionDownBy" in e && !(parseFloat(e.scaleResolutionDownBy) >= 1)) throw new RangeError("scale_resolution_down_by must be >= 1.0"); if ("maxFramerate" in e && !(parseFloat(e.maxFramerate) >= 0)) throw new RangeError("max_framerate must be >= 0.0") }); const r = t.apply(this, arguments); if (n) { const { sender: t } = r, n = t.getParameters(); "encodings" in n || (n.encodings = e.sendEncodings, this.setParametersPromises.push(t.setParameters(n).catch(() => { }))) } return r }) } function ee(e) { if ("object" != typeof e || !e.RTCPeerConnection) return; const t = e.RTCPeerConnection.prototype.createOffer; e.RTCPeerConnection.prototype.createOffer = function () { return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(() => t.apply(this, arguments)).finally(() => { this.setParametersPromises = [] }) : t.apply(this, arguments) } } function te(e) { if ("object" != typeof e || !e.RTCPeerConnection) return; const t = e.RTCPeerConnection.prototype.createAnswer; e.RTCPeerConnection.prototype.createAnswer = function () { return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(() => t.apply(this, arguments)).finally(() => { this.setParametersPromises = [] }) : t.apply(this, arguments) } } function ne(e) { if ("object" == typeof e && e.RTCPeerConnection) { if ("getLocalStreams" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getLocalStreams = function () { return this._localStreams || (this._localStreams = []), this._localStreams }), !("addStream" in e.RTCPeerConnection.prototype)) { const t = e.RTCPeerConnection.prototype.addTrack; e.RTCPeerConnection.prototype.addStream = function (e) { this._localStreams || (this._localStreams = []), this._localStreams.includes(e) || this._localStreams.push(e), e.getAudioTracks().forEach(n => t.call(this, n, e)), e.getVideoTracks().forEach(n => t.call(this, n, e)) }, e.RTCPeerConnection.prototype.addTrack = function (e, ...n) { return n && n.forEach(e => { this._localStreams ? this._localStreams.includes(e) || this._localStreams.push(e) : this._localStreams = [e] }), t.apply(this, arguments) } } "removeStream" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.removeStream = function (e) { this._localStreams || (this._localStreams = []); const t = this._localStreams.indexOf(e); if (-1 === t) return; this._localStreams.splice(t, 1); const n = e.getTracks(); this.getSenders().forEach(e => { n.includes(e.track) && this.removeTrack(e) }) }) } } function re(e) { if ("object" == typeof e && e.RTCPeerConnection && ("getRemoteStreams" in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getRemoteStreams = function () { return this._remoteStreams ? this._remoteStreams : [] }), !("onaddstream" in e.RTCPeerConnection.prototype))) { Object.defineProperty(e.RTCPeerConnection.prototype, "onaddstream", { get() { return this._onaddstream }, set(e) { this._onaddstream && (this.removeEventListener("addstream", this._onaddstream), this.removeEventListener("track", this._onaddstreampoly)), this.addEventListener("addstream", this._onaddstream = e), this.addEventListener("track", this._onaddstreampoly = e => { e.streams.forEach(e => { if (this._remoteStreams || (this._remoteStreams = []), this._remoteStreams.includes(e)) return; this._remoteStreams.push(e); const t = new Event("addstream"); t.stream = e, this.dispatchEvent(t) }) }) } }); const t = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function () { const e = this; return this._onaddstreampoly || this.addEventListener("track", this._onaddstreampoly = function (t) { t.streams.forEach(t => { if (e._remoteStreams || (e._remoteStreams = []), e._remoteStreams.indexOf(t) >= 0) return; e._remoteStreams.push(t); const n = new Event("addstream"); n.stream = t, e.dispatchEvent(n) }) }), t.apply(e, arguments) } } } function ie(e) { if ("object" != typeof e || !e.RTCPeerConnection) return; const t = e.RTCPeerConnection.prototype, n = t.createOffer, r = t.createAnswer, i = t.setLocalDescription, o = t.setRemoteDescription, a = t.addIceCandidate; t.createOffer = function (e, t) { const r = arguments.length >= 2 ? arguments[2] : arguments[0], i = n.apply(this, [r]); return t ? (i.then(e, t), Promise.resolve()) : i }, t.createAnswer = function (e, t) { const n = arguments.length >= 2 ? arguments[2] : arguments[0], i = r.apply(this, [n]); return t ? (i.then(e, t), Promise.resolve()) : i }; let s = function (e, t, n) { const r = i.apply(this, [e]); return n ? (r.then(t, n), Promise.resolve()) : r }; t.setLocalDescription = s, s = function (e, t, n) { const r = o.apply(this, [e]); return n ? (r.then(t, n), Promise.resolve()) : r }, t.setRemoteDescription = s, s = function (e, t, n) { const r = a.apply(this, [e]); return n ? (r.then(t, n), Promise.resolve()) : r }, t.addIceCandidate = s } function oe(e) { const t = e && e.navigator; if (t.mediaDevices && t.mediaDevices.getUserMedia) { const e = t.mediaDevices, n = e.getUserMedia.bind(e); t.mediaDevices.getUserMedia = e => n(ae(e)) } !t.getUserMedia && t.mediaDevices && t.mediaDevices.getUserMedia && (t.getUserMedia = function (e, n, r) { t.mediaDevices.getUserMedia(e).then(n, r) }.bind(t)) } function ae(e) { return e && void 0 !== e.video ? Object.assign({}, e, { video: I(e.video) }) : e } function se(e) { const t = e.RTCPeerConnection; e.RTCPeerConnection = function (e, n) { if (e && e.iceServers) { const t = []; for (let n = 0; n < e.iceServers.length; n++) { let r = e.iceServers[n]; !r.hasOwnProperty("urls") && r.hasOwnProperty("url") ? (y("RTCIceServer.url", "RTCIceServer.urls"), r = JSON.parse(JSON.stringify(r)), r.urls = r.url, delete r.url, t.push(r)) : t.push(e.iceServers[n]) } e.iceServers = t } return new t(e, n) }, e.RTCPeerConnection.prototype = t.prototype, "generateCertificate" in e.RTCPeerConnection && Object.defineProperty(e.RTCPeerConnection, "generateCertificate", { get: () => t.generateCertificate }) } function ce(e) { "object" == typeof e && e.RTCTrackEvent && "receiver" in e.RTCTrackEvent.prototype && !("transceiver" in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, "transceiver", { get() { return { receiver: this.receiver } } }) } function le(e) { const t = e.RTCPeerConnection.prototype.createOffer; e.RTCPeerConnection.prototype.createOffer = function (e) { if (e) { void 0 !== e.offerToReceiveAudio && (e.offerToReceiveAudio = !!e.offerToReceiveAudio); const t = this.getTransceivers().find(e => "audio" === e.receiver.track.kind); !1 === e.offerToReceiveAudio && t ? "sendrecv" === t.direction ? t.setDirection ? t.setDirection("sendonly") : t.direction = "sendonly" : "recvonly" === t.direction && (t.setDirection ? t.setDirection("inactive") : t.direction = "inactive") : !0 !== e.offerToReceiveAudio || t || this.addTransceiver("audio"), void 0 !== e.offerToReceiveVideo && (e.offerToReceiveVideo = !!e.offerToReceiveVideo); const n = this.getTransceivers().find(e => "video" === e.receiver.track.kind); !1 === e.offerToReceiveVideo && n ? "sendrecv" === n.direction ? n.setDirection ? n.setDirection("sendonly") : n.direction = "sendonly" : "recvonly" === n.direction && (n.setDirection ? n.setDirection("inactive") : n.direction = "inactive") : !0 !== e.offerToReceiveVideo || n || this.addTransceiver("video") } return t.apply(this, arguments) } } var de = n(0), ue = n.n(de); function pe(e) { if (!e.RTCIceCandidate || e.RTCIceCandidate && "foundation" in e.RTCIceCandidate.prototype) return; const t = e.RTCIceCandidate; e.RTCIceCandidate = function (e) { if ("object" == typeof e && e.candidate && 0 === e.candidate.indexOf("a=") && ((e = JSON.parse(JSON.stringify(e))).candidate = e.candidate.substr(2)), e.candidate && e.candidate.length) { const n = new t(e), r = ue.a.parseCandidate(e.candidate), i = Object.assign(n, r); return i.toJSON = function () { return { candidate: i.candidate, sdpMid: i.sdpMid, sdpMLineIndex: i.sdpMLineIndex, usernameFragment: i.usernameFragment } }, i } return new t(e) }, e.RTCIceCandidate.prototype = t.prototype, S(e, "icecandidate", t => (t.candidate && Object.defineProperty(t, "candidate", { value: new e.RTCIceCandidate(t.candidate), writable: "false" }), t)) } function fe(e) { if (!e.RTCPeerConnection) return; const t = E(e); "sctp" in e.RTCPeerConnection.prototype || Object.defineProperty(e.RTCPeerConnection.prototype, "sctp", { get() { return void 0 === this._sctp ? null : this._sctp } }); const n = function (e) { if (!e || !e.sdp) return !1; const t = ue.a.splitSections(e.sdp); return t.shift(), t.some(e => { const t = ue.a.parseMLine(e); return t && "application" === t.kind && -1 !== t.protocol.indexOf("SCTP") }) }, r = function (e) { const t = e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/); if (null === t || t.length < 2) return -1; const n = parseInt(t[1], 10); return n != n ? -1 : n }, i = function (e) { let n = 65536; return "firefox" === t.browser && (n = t.version < 57 ? -1 === e ? 16384 : 2147483637 : t.version < 60 ? 57 === t.version ? 65535 : 65536 : 2147483637), n }, o = function (e, n) { let r = 65536; "firefox" === t.browser && 57 === t.version && (r = 65535); const i = ue.a.matchPrefix(e.sdp, "a=max-message-size:"); return i.length > 0 ? r = parseInt(i[0].substr(19), 10) : "firefox" === t.browser && -1 !== n && (r = 2147483637), r }, a = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function () { if (this._sctp = null, "chrome" === t.browser && t.version >= 76) { const { sdpSemantics: e } = this.getConfiguration(); "plan-b" === e && Object.defineProperty(this, "sctp", { get() { return void 0 === this._sctp ? null : this._sctp }, enumerable: !0, configurable: !0 }) } if (n(arguments[0])) { const e = r(arguments[0]), t = i(e), n = o(arguments[0], e); let a; a = 0 === t && 0 === n ? Number.POSITIVE_INFINITY : 0 === t || 0 === n ? Math.max(t, n) : Math.min(t, n); const s = {}; Object.defineProperty(s, "maxMessageSize", { get: () => a }), this._sctp = s } return a.apply(this, arguments) } } function ve(e) { if (!e.RTCPeerConnection || !("createDataChannel" in e.RTCPeerConnection.prototype)) return; function t(e, t) { const n = e.send; e.send = function () { const r = arguments[0], i = r.length || r.size || r.byteLength; if ("open" === e.readyState && t.sctp && i > t.sctp.maxMessageSize) throw new TypeError("Message too large (can send a maximum of " + t.sctp.maxMessageSize + " bytes)"); return n.apply(e, arguments) } } const n = e.RTCPeerConnection.prototype.createDataChannel; e.RTCPeerConnection.prototype.createDataChannel = function () { const e = n.apply(this, arguments); return t(e, this), e }, S(e, "datachannel", e => (t(e.channel, e.target), e)) } function he(e) { if (!e.RTCPeerConnection || "connectionState" in e.RTCPeerConnection.prototype) return; const t = e.RTCPeerConnection.prototype; Object.defineProperty(t, "connectionState", { get() { return { completed: "connected", checking: "connecting" }[this.iceConnectionState] || this.iceConnectionState }, enumerable: !0, configurable: !0 }), Object.defineProperty(t, "onconnectionstatechange", { get() { return this._onconnectionstatechange || null }, set(e) { this._onconnectionstatechange && (this.removeEventListener("connectionstatechange", this._onconnectionstatechange), delete this._onconnectionstatechange), e && this.addEventListener("connectionstatechange", this._onconnectionstatechange = e) }, enumerable: !0, configurable: !0 }), ["setLocalDescription", "setRemoteDescription"].forEach(e => { const n = t[e]; t[e] = function () { return this._connectionstatechangepoly || (this._connectionstatechangepoly = e => { const t = e.target; if (t._lastConnectionState !== t.connectionState) { t._lastConnectionState = t.connectionState; const n = new Event("connectionstatechange", e); t.dispatchEvent(n) } return e }, this.addEventListener("iceconnectionstatechange", this._connectionstatechangepoly)), n.apply(this, arguments) } }) } function me(e) { if (!e.RTCPeerConnection) return; const t = E(e); if ("chrome" === t.browser && t.version >= 71) return; const n = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function (e) { return e && e.sdp && -1 !== e.sdp.indexOf("\na=extmap-allow-mixed") && (e.sdp = e.sdp.split("\n").filter(e => "a=extmap-allow-mixed" !== e.trim()).join("\n")), n.apply(this, arguments) } } !function ({ window: e } = {}, t = { shimChrome: !0, shimFirefox: !0, shimEdge: !0, shimSafari: !0 }) { const n = T, c = E(e), l = { browserDetails: c, commonShim: s, extractVersion: g, disableLog: C, disableWarnings: _ }; switch (c.browser) { case "chrome": if (!r || !x || !t.shimChrome) return n("Chrome shim is not included in this adapter release."), l; n("adapter.js shimming chrome."), l.browserShim = r, P(e), A(e), x(e), M(e), F(e), w(e), D(e), N(e), G(e), pe(e), he(e), fe(e), ve(e), me(e); break; case "firefox": if (!o || !z || !t.shimFirefox) return n("Firefox shim is not included in this adapter release."), l; n("adapter.js shimming firefox."), l.browserShim = o, J(e), z(e), W(e), X(e), Q(e), Y(e), $(e), Z(e), ee(e), te(e), pe(e), he(e), fe(e), ve(e); break; case "edge": if (!i || !B || !t.shimEdge) return n("MS edge shim is not included in this adapter release."), l; n("adapter.js shimming edge."), l.browserShim = i, j(e), H(e), B(e), q(e), fe(e), ve(e); break; case "safari": if (!a || !t.shimSafari) return n("Safari shim is not included in this adapter release."), l; n("adapter.js shimming safari."), l.browserShim = a, se(e), le(e), ie(e), ne(e), re(e), ce(e), oe(e), pe(e), fe(e), ve(e), me(e); break; default: n("Unsupported browser!") } }({ window: window }); function ge(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var Se = function () { function e(t, n, r, i) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), this.client = t, this.fromNumber = n, this.toNumber = r, this.custom = "", this.customDataFromYourServer = "", this.fromAlias = n, this.toAlias = r, this.fromInternal = !0, this.answeredOnAnotherDevice = !1, this.isVideoCall = i, this.isIncomingCall = !1, this.isAnswered = !1, this.isOnHold = !1, this.ended = !1, this.callId = "", this._iceServers = null, this.toType = "", this.muted = !1, this.localVideoEnabled = i, this._onMethods = new l, this.client._stringeeCalls.push(this), this.videoResolution = null, this._pc = null, this._localStream = null, this._remoteStream = null, this._localSdp = null, this._remoteSdps = new l, this._mapListCandidates = new l, this._answeredDeviceId = null, this._setRemoteSdpOk = !1, this._mediaConnected = !1 } var t, n, r; return t = e, (n = [{ key: "makeCall", value: function (e) { if (this.isIncomingCall) console.log("could not make call, this is a incoming call"); else { var t = this, n = { fromNumber: this.fromNumber, toNumber: this.toNumber, video: this.isVideoCall, custom: t.custom }; this.client._sendMessage(c.CALL_START, n, (function (n) { var r = n.r, i = n.iceServers; delete n.iceServers, 0 === r ? (t.callId = n.callId, t._iceServers = i, t.toType = n.toType, t.customDataFromYourServer = n.customDataFromYourServer, t._initPeerConnection(!0, e, n)) : (t.ended = !0, e.call(t, n)) })) } } }, { key: "answer", value: function (e) { var t = this; if (this.isIncomingCall) if (this.isAnswered) console.log("Error: call has been answered"); else if (this.answeredOnAnotherDevice) console.log("Error: call has been answered on other device"); else { this.isAnswered = !0; var n = { callId: this.callId, code: 200 }; this.client._sendMessage(c.CALL_STATE, n, (function (n) { e && e.call(t, { r: n.r }) })), t.fromInternal || t._onRemoteSDP(), t._checkAndAddCandidateFromQueue() } else console.log("Error: could not answer call, this is a outgoing call") } }, { key: "reject", value: function (e) { var t = this; if (this.isIncomingCall) { t.ended = !0; var n = { callId: this.callId, code: 486 }; this.client._sendMessage(c.CALL_STATE, n, (function (n) { e && e.call(t, { r: n.r }) })), this._freeResource(), this.onRemove() } else console.log("could not reject call, this is a outgoing call") } }, { key: "onRemove", value: function () { var e = this.client._stringeeCalls.indexOf(this); e > -1 && this.client._stringeeCalls.splice(e, 1) } }, { key: "ringing", value: function (e) { var t = this; if (this.isIncomingCall) { var n = { callId: this.callId, code: 180 }; this.client._sendMessage(c.CALL_STATE, n, (function (n) { e && e.call(t, { r: n.r }) })), this._freeResource() } else console.log("could not send ringing signal, this is a outgoing call") } }, { key: "hangup", value: function (e) { var t = this; if (t.ended = !0, t._pc || !e) { var n = { callId: this.callId }; this.client._sendMessage(c.CALL_STOP, n, (function (n) { 0 === n.r && (t._freeResource(), t.onRemove()), e && e.call(t, { r: n.r }) })) } else e.call(t, { r: -1 }) } }, { key: "sendInfo", value: function (e, t) { var n = this, r = { callId: this.callId, info: e }; this.client._sendMessage(c.CALL_INFO, r, (function (e) { t && t.call(n, { r: e.r }) })) } }, { key: "sendDtmf", value: function (e, t) { var n = this, r = { callId: this.callId, digits: e }; this.client._sendMessage(c.CALL_DTMF, r, (function (e) { t && t.call(n, { r: e.r }) })) } }, { key: "sendHold", value: function (e, t) { var n = this, r = { callId: this.callId, hold: !0, musicOnHold: e }; this.client._sendMessage(c.HOLD, r, (function (e) { return t && t.call(n, { r: e.r }), 0 === e.r && (n.isOnHold = !0, !0) })) } }, { key: "sendUnHold", value: function (e) { var t = this, n = { callId: this.callId, hold: !1 }; this.client._sendMessage(c.HOLD, n, (function (n) { return e && e.call(t, { r: n.r }), 0 === n.r && (t.isOnHold = !1, !0) })) } }, { key: "sendTransfer", value: function (e, t) { var n = this, r = { callId: this.callId, to: { number: e, type: "internal", alias: e } }; this.client._sendMessage(c.TRANSFER, r, (function (e) { t && t.call(n, { r: e.r }) })) } }, { key: "_initPeerConnection", value: function (e, t, n) { var r = this, i = { audio: !0, video: r._buildVideoConstraints(!1) }; navigator.mediaDevices.getUserMedia(i).then((function (i) { t && t.call(r, n); try { var o = { iceServers: r._iceServers }, a = new RTCPeerConnection(o); a.onicecandidate = function (e) { r._onicecandidate(e) }, a.oniceconnectionstatechange = function (e) { "connected" === a.iceConnectionState ? (r._mediaConnected = !0, r._callOnEvent("mediastate", { reason: "Connected", code: 1 })) : "disconnected" === a.iceConnectionState && r._callOnEvent("mediastate", { reason: "Disconnected", code: 2 }) }, a.ontrack = function (e) { r._ontrack(e) }, i.getTracks().forEach((function (e) { a.addTrack(e, i) })), i.onremovetrack = function (e) { console.log("=========localStream1.onremovetrack======", e) }, r._pc = a, r._localStream = i, r._callOnEvent("addlocalstream", r._localStream), e ? a.createOffer((function (e) { r._onCreateLocalSdpSuccess(e) }), r._onCreateLocalSdpError) : r._remoteSdps.size() > 0 && r._onRemoteSDP(), r.ended && (r._freeResource(), r.onRemove()) } catch (e) { console.log(e), r._freeResource(), r.onRemove(); var s = { callId: r.callId }; r.client._sendMessage(c.CALL_STOP, s, (function (e) { })), r._callOnEvent("error", { reason: "CREATE_PEER_CONNECTION_ERROR", code: 1001, moreInfo: e }) } })).catch((function (e) { t && (n.r = 1e3, n.message = "GET_USER_MEDIA_ERROR", n.moreInfo = e, t.call(r, n)), r._getUserMediaError(e) })) } }, { key: "hold", value: function () { var e = this; return e._pc ? e.isAnswered ? e.isOnHold ? (console.log("Call is on hold"), !1) : (e._pc.createOffer((function (t) { var n = t.sdp.replace("a=sendrecv", "a=sendonly"), r = { type: t.type, sdp: n }, i = new RTCSessionDescription(r); e._onCreateLocalSdpSuccess(i) }), e._onCreateLocalSdpError), e.isOnHold = !0, !0) : (console.log("Call not answered"), !1) : (console.log("RTCPeerConnection not created"), !1) } }, { key: "unhold", value: function () { var e = this; return e._pc ? e.isAnswered ? e.isOnHold ? (e._pc.createOffer((function (t) { var n = t.sdp.replace("a=sendonly", "a=sendrecv"); n = n.replace("a=inactive", "a=sendrecv"); var r = { type: t.type, sdp: n }, i = new RTCSessionDescription(r); e._onCreateLocalSdpSuccess(i) }), e._onCreateLocalSdpError), e.isOnHold = !1, !0) : (console.log("Call is not on hold"), !1) : (console.log("Call not answered"), !1) : (console.log("RTCPeerConnection not created"), !1) } }, { key: "_onRemoteSDP", value: function () { var e, t = this, n = !1; 0 !== t._remoteSdps.size() && t._pc && (e = t._remoteSdps.get(t._remoteSdps.allKeys()[0]), null !== t._answeredDeviceId && void 0 !== t._answeredDeviceId || (t._answeredDeviceId = ""), "offer" === e.type && t.fromInternal && (n = !0), !t.fromInternal && t.isAnswered && (n = !0), "answer" === e.type && t.isAnswered && (n = !0, e = t._remoteSdps.get(t._answeredDeviceId)), t.isIncomingCall || "external" !== t.toType || (n = !0), n && e && (t._pc.setRemoteDescription(e, (function () { t._setRemoteSdpOk = !0, t._checkAndAddCandidateFromQueue(), "offer" === e.type && t._pc.createAnswer().then((function (e) { t._onCreateLocalSdpSuccess(e) }), t._onCreateLocalSdpError) }), (function (e) { console.log("setRemoteDescription error", e) })), t._remoteSdps.clear())) } }, { key: "_getUserMediaError", value: function (e) { this.isIncomingCall ? this._callOnEvent("error", { reason: "GET_USER_MEDIA_ERROR", code: 1e3, moreInfo: e }) : this.client._sendMessage(c.CALL_STOP, { callId: this.callId }, (function (e) { })) } }, { key: "upgradeToVideoCall", value: function () { var e = this; if (!e.isVideoCall) { var t = { audio: !1, video: e._buildVideoConstraints(!0) }; navigator.mediaDevices.getUserMedia(t).then((function (t) { var n = t.getVideoTracks()[0]; e._localStream.addTrack(n), e._callOnEvent("addlocalstream", e._localStream), e._pc.addTrack(n, t), e._pc.createOffer((function (t) { e._onCreateLocalSdpSuccess(t) }), e._onCreateLocalSdpError), e.isVideoCall = !0, e.localVideoEnabled = !0 })).catch((function (t) { e._getUserMediaError(t) })) } } }, { key: "_buildVideoConstraints", value: function (e) { return e ? !this.videoResolution || { width: { exact: this.videoResolution.width }, height: { exact: this.videoResolution.height } } : this.isVideoCall && this.videoResolution ? { width: { exact: this.videoResolution.width }, height: { exact: this.videoResolution.height } } : this.isVideoCall } }, { key: "_checkAndAddCandidateFromQueue", value: function () { if (this.isAnswered && this._pc && this._setRemoteSdpOk) { this._answeredDeviceId || (this._answeredDeviceId = this._mapListCandidates.allKeys()[0]); var e = this._mapListCandidates.get("" + this._answeredDeviceId); if (e) for (; ;) { var t = e.pop(); if (!t) break; this._pc.addIceCandidate(t) } } } }, { key: "_onicecandidate", value: function (e) { if (e.candidate) { var t = e.candidate; this._sendCallSdpCandidate(this.callId, "candidate", t) } } }, { key: "_ontrack", value: function (e) { this._remoteStream = e.streams[0], this._callOnEvent("addremotestream", this._remoteStream) } }, { key: "_onCreateLocalSdpSuccess", value: function (e) { var t = this; this._localSdp = e, this._pc.setLocalDescription(e, (function () { t._sendCallSdpCandidate(t.callId, "sdp", e) }), (function (e) { console.log("+++++++++ setLocalDescription error", e) })) } }, { key: "_onCreateLocalSdpError", value: function (e) { console.log(e) } }, { key: "_sendCallSdpCandidate", value: function (e, t, n) { var r = { callId: e, type: t, data: n }; this.client._sendMessage(c.CALL_SDP_CANDIDATE, r, (function (e) { })) } }, { key: "_freeResource", value: function () { if (this._pc) { var e = this; this._pc.close(), this._pc = null, this._localStream && this._localStream.getTracks().forEach((function (t) { t.stop(), e._localStream.removeTrack(t) })), this._localStream = null, this._remoteStream = null } } }, { key: "mute", value: function (e) { var t = this; t._localStream.getAudioTracks().forEach((function (n) { e ? (n.enabled = !1, t.muted = !0) : (n.enabled = !0, t.muted = !1) })) } }, { key: "enableLocalVideo", value: function (e) { var t = this, n = !1; return t._localStream.getVideoTracks().forEach((function (r) { n = !0, r.enabled = e, t.localVideoEnabled = e })), n } }, { key: "on", value: function (e, t) { this._onMethods.put(e, t) } }, { key: "_callOnEvent", value: function (e, t) { var n = this._onMethods.get(e); n ? t ? n.call(this, t) : n.call(this) : console.log("Please implement StringeeCall event: " + e) } }, { key: "restartIce", value: function () { var e = this; if (!e._pc) return console.log("RTCPeerConnection not created"), !1; console.log("restartIce+++++"); var t = { offerToReceiveAudio: 1, offerToReceiveVideo: 1, iceRestart: !0 }; return e._setLocalSdpOk || !e.isIncomingCall ? (console.log("=====create offer==="), e._pc.createOffer((function (t) { e._onCreateLocalSdpSuccess(t) }), e._onCreateLocalSdpError, t)) : (console.log("=====create Answer==="), e._pc.createAnswer().then((function (t) { e._onCreateLocalSdpSuccess(t) }), e._onCreateLocalSdpError, t)), !0 } }]) && ge(t.prototype, n), r && ge(t, r), e }(); function Ce(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var _e = function () { function e(t) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), this.localId = Ie.genLocalPeerConnectionId(), this.serverId = "", this.pc = null, this.eventHandler = null, this.mediaConnected = !1, this.localStream = null, this.remoteStream = null, this.stopped = !1, this.iceServers = t, this.localSdp = null, this.localCandidates = new Array, this.muted = !1, this.localVideoEnabled = !0 } var t, n, r; return t = e, (n = [{ key: "initPeerConnection", value: function (e, t, n, r) { var i = this; function o(t) { try { var o = { iceServers: i.iceServers }, a = new RTCPeerConnection(o); a.onicecandidate = function (e) { e.candidate && i.localCandidates.push(e.candidate), n.onCandidate(e.candidate) }, a.oniceconnectionstatechange = function (e) { "connected" === a.iceConnectionState ? (i.mediaConnected = !0, n.onIceConnectionStateChange(i.mediaConnected)) : "disconnected" === a.iceConnectionState && (i.mediaConnected = !1, n.onIceConnectionStateChange(i.mediaConnected)) }, a.ontrack = function (e) { if (e.streams.length > 0) { i.remoteStream = e.streams[0]; var t = ""; e.track && (t = e.track.kind), n.onTrack(e, t) } }, t.getTracks().forEach((function (e) { a.addTrack(e, t) })), t.onremovetrack = function (e) { console.log("=========localStream1.onremovetrack======", e) }, i.pc = a, i.localStream = t, n.onLocalStream(t), e && a.createOffer((function (e) { i.localSdp = e, n.onLocalSdp(!0, e), i.pc.setLocalDescription(e, (function () { n.onSetLocalDescription(!0, e) }), (function (e) { n.onSetLocalDescription(!1, e) })) }), (function (e) { n.onLocalSdp(!1, e) }), r), n.onAccessMediaDevice(!0, null), i.stopped && i.freeResource() } catch (e) { n.onAccessMediaDevice(!1, e), i.freeResource() } } function a(e) { n.onAccessMediaDevice(!1, e) } this.eventHandler = n, t.screen ? navigator.getDisplayMedia ? navigator.getDisplayMedia({ video: !0 }).then(o).catch(a) : navigator.mediaDevices.getDisplayMedia ? navigator.mediaDevices.getDisplayMedia({ video: !0 }).then(o).catch(a) : navigator.mediaDevices.getUserMedia({ video: { mediaSource: "screen" } }).then(o).catch(a) : navigator.mediaDevices.getUserMedia(t).then(o).catch(a) } }, { key: "initPeerConnectionNoAccessDevice", value: function (e, t, n) { var r = this; this.eventHandler = n; try { var i = { iceServers: r.iceServers }, o = new RTCPeerConnection(i); o.onicecandidate = function (e) { e.candidate && r.localCandidates.push(e.candidate), n.onCandidate(e.candidate) }, o.oniceconnectionstatechange = function (e) { "connected" === o.iceConnectionState ? (r.mediaConnected = !0, n.onIceConnectionStateChange(r.mediaConnected)) : "disconnected" === o.iceConnectionState && (r.mediaConnected = !1, n.onIceConnectionStateChange(r.mediaConnected)) }, o.ontrack = function (e) { if (e.streams.length > 0) { r.remoteStream = e.streams[0]; var t = ""; e.track && (t = e.track.kind), n.onTrack(e, t) } }, r.pc = o, e && o.createOffer((function (e) { r.localSdp = e, n.onLocalSdp(!0, e), r.pc.setLocalDescription(e, (function () { n.onSetLocalDescription(!0, e) }), (function (e) { n.onSetLocalDescription(!1, e) })) }), (function (e) { n.onLocalSdp(!1, e) }), t), r.stopped && r.freeResource() } catch (e) { r.freeResource() } } }, { key: "freeResource", value: function () { this.pc && (this.pc.close(), this.pc = null); var e = this; this.localStream && this.localStream.getTracks().forEach((function (t) { t.stop(), e.localStream.removeTrack(t) })), this.localStream = null, this.remoteStream = null, this.eventHandler.onWebRtcClose() } }, { key: "onReceiveSdp", value: function (e) { this.pc.setRemoteDescription(e, (function () { }), (function (e) { console.log("setRemoteDescription error", e) })) } }, { key: "onReceiveCandidate", value: function (e) { this.pc.addIceCandidate(e) } }, { key: "mute", value: function (e) { var t = this; t.localStream.getAudioTracks().forEach((function (n) { e ? (n.enabled = !1, t.muted = !0) : (n.enabled = !0, t.muted = !1) })) } }, { key: "enableLocalVideo", value: function (e) { var t = this, n = !1; return t.localStream.getVideoTracks().forEach((function (r) { n = !0, r.enabled = e, t.localVideoEnabled = e })), n } }]) && Ce(t.prototype, n), r && Ce(t, r), e }(); function Te(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var ye = function () { function e(t, n) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), this.isLocal = !0, this.roomConnected = null, this.localSdpToSend = null, this.localCandidatesForSend = new Array, this.serverId = "", this.serverPeerConnectionId = "", this.stringeeClient = t, this.audio = !0, this.video = !0, this.screen = !1, this.constraints = {}, n.screen ? (this.constraints.screen = !0, this.screen = !0, this.audio = !1, this.video = !1) : (n.audio && (this.constraints.audio = !0, this.audio = !0), n.video && (this.video = !0, this.constraints.video = !0)), n.videoDimensions && (this.constraints.video = n.videoDimensions), this.webrtc = new _e(t.ice_servers), this.localId = this.webrtc.localId, this.onMethods = new StringeeHashMap, this.elements = [], this.callOnReady = !1, this.muted = !1, this.localVideoEnabled = !0 } var t, n, r; return t = e, (n = [{ key: "init", value: function () { var e = this; return new Promise((function (t, n) { var r = { onAccessMediaDevice: function (e, t) { e || n(t) }, onLocalStream: function (e) { }, onTrack: function (t, n) { var r = t.streams[0]; e.onRemoteStream(r, n) }, onLocalSdp: function (e, t) { }, onSetLocalDescription: function (r, i) { r ? (e.localSdpToSend = i, e.processSendSdpCandidate(), t(e)) : n("Set Local Description error") }, onIceConnectionStateChange: function (e) { }, onCandidate: function (t) { e.localCandidatesForSend.push(t), e.processSendSdpCandidate() }, onWebRtcClose: function () { } }; if (e.isLocal) { var i = { offerToReceiveAudio: 0, offerToReceiveVideo: 0 }; e.webrtc.initPeerConnection(!0, e.constraints, r, i) } else i = {}, e.constraints.audio && (i.offerToReceiveAudio = 1), e.constraints.video && (i.offerToReceiveVideo = 1), e.webrtc.initPeerConnectionNoAccessDevice(!0, i, r) })) } }, { key: "onRemoteStream", value: function (e, t) { this.callOnReady || (this.callOnReady = !0, this.callOnEvent("ready", t)) } }, { key: "processSendSdpCandidate", value: function () { if (this.roomConnected && this.webrtc) { if (this.localSdpToSend) { var e = { data: this.localSdpToSend, roomId: this.roomConnected.roomId, serverPcId: this.webrtc.serverId, isLocal: this.isLocal, serverTrackId: this.serverId }; this.stringeeClient._sendMessage(c.VIDEO_ENDPOINT_SDP, e, (function (e) { })), this.localSdpToSend = null } for (; this.localCandidatesForSend.length > 0;) { var t = this.localCandidatesForSend.pop(); t && (e = { data: t, roomId: this.roomConnected.roomId, serverPcId: this.webrtc.serverId, isLocal: this.isLocal, serverTrackId: this.serverId }, this.stringeeClient._sendMessage(c.VIDEO_ENDPOINT_CANDIDATE, e, (function (e) { }))) } } } }, { key: "attach", value: function () { var e = document.createElement("video"); return e.classList.add("stringee-video-track-" + this.localId), e.srcObject = null, this.isLocal ? e.srcObject = this.webrtc.localStream : e.srcObject = this.webrtc.remoteStream, e.setAttribute("autoplay", "true"), this.isLocal && (e.muted = !0), this.elements.push(e), e } }, { key: "detach", value: function () { return this.elements } }, { key: "detachAndRemove", value: function () { this.elements.forEach((function (e) { e.remove() })) } }, { key: "getMediaStream", value: function () { return this.webrtc ? this.isLocal ? this.webrtc.localStream : this.webrtc.remoteStream : null } }, { key: "onSdpFromServer", value: function (e) { this.webrtc && this.webrtc.onReceiveSdp(e) } }, { key: "onCandidateFromServer", value: function (e) { this.webrtc && this.webrtc.onReceiveCandidate(e) } }, { key: "close", value: function () { this.webrtc.freeResource() } }, { key: "mute", value: function (e) { this.webrtc.mute(e), this.muted = this.webrtc.muted } }, { key: "enableLocalVideo", value: function (e) { var t = this.webrtc.enableLocalVideo(e); return this.localVideoEnabled = this.webrtc.localVideoEnabled, t } }, { key: "on", value: function (e, t) { var n = this.onMethods.get(e); n || (n = new Array, this.onMethods.put(e, n)), n.push(t) } }, { key: "callOnEvent", value: function (e, t) { var n = this, r = this.onMethods.get(e); r ? r.forEach((function (e) { t ? e.call(n, t) : e.call(n) })) : console.log("Please implement StringeeVideoTrack event: " + e) } }]) && Te(t.prototype, n), r && Te(t, r), e }(); function Ee(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } function Re(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } var Ie = function () { function e() { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e) } var t, n, r; return t = e, r = [{ key: "genLocalTrackId", value: function () { if (0 == e.ID_GEN) { var t = new Date; e.ID_GEN = t.getTime() } return e.ID_GEN++, "track-" + e.ID_GEN } }, { key: "genLocalPeerConnectionId", value: function () { if (0 == e.ID_GEN) { var t = new Date; e.ID_GEN = t.getTime() } return e.ID_GEN++, "pc-" + e.ID_GEN } }, { key: "createRoom", value: function (t) { return new Promise((function (n, r) { t._sendMessage(c.VIDEO_ENDPOINT_MAKE_ROOM, {}, (function (i) { if (0 == i.r) { var o = new StringeeVideoRoom(t); o.roomId = i.roomId, e.rooms.put(o.roomId, o), n(o) } else r(i) })) })) } }, { key: "joinRoom", value: function (t, n) { return new Promise((function (r, i) { var o = { roomToken: n }; t._sendMessage(c.VIDEO_ENDPOINT_JOIN_ROOM, o, (function (n) { if (0 == n.r) { var o = e.rooms.get(n.roomId); o || (o = new StringeeVideoRoom(t)), o.roomId = n.roomId, o.permissionSubscribe = n.permissionSubscribe, o.permissionPublish = n.permissionPublish, o.permissionControlRoom = n.permissionControlRoom, o.record = n.record, e.rooms.put(o.roomId, o); var a = { room: o, listTracksInfo: n.tracks, listUsersInfo: n.users }; r(a) } else i(n) })) })) } }, { key: "createLocalVideoTrack", value: function (e, t) { var n = new ye(e, t); return n.isLocal = !0, n.init() } }], (n = null) && Ee(t.prototype, n), r && Ee(t, r), e }(); function ke(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } Re(Ie, "rooms", new l), Re(Ie, "ID_GEN", 0); var Oe = function () { function e() { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e) } var t, n, r; return t = e, r = [{ key: "_callSdpCandidateFromServer", value: function (e, t) { var n = e.findCallByCallId(t.callId); if (n) if (n.answeredOnAnotherDevice) console.log("answeredOnAnotherDevice"); else { var r = t.deviceId; if (r || (r = ""), "sdp" === t.type) { var i = t.data.sdp, o = i.match(/a=candidate([^\r\n]+)/g); o && -1 === i.indexOf("typ srflx") && o.forEach((function (e) { var t; t = (t = (t = (t = e.replace(" generation 0", "")).replace("typ host", "typ srflx")).replace("typ host", "typ srflx")).replace("\n", ""), t += " raddr 172.20.1.2 rport 57527 generation 0"; var n = i.indexOf(e); n > -1 && (i = [i.slice(0, n), t + "\n", i.slice(n)].join("")) })); var a = { type: t.data.type, sdp: i }, s = new RTCSessionDescription(a); n._remoteSdps.put(r + "", s), n._pc && n._onRemoteSDP() } else if ("candidate" === t.type) { var c = new RTCIceCandidate(t.data), d = n._mapListCandidates.get(r + ""); d || (d = new l, n._mapListCandidates.put(r + "", d)), d.push(c), n._checkAndAddCandidateFromQueue() } } else console.log("error could not found call for: " + t.callId) } }, { key: "_callStateFromServer", value: function (e, t) { var n = e.findCallByCallId(t.callId); if (n) { var r = -1, i = "", o = t.deviceId; o || (o = ""), 100 === t.code ? (r = d, i = "Calling") : 180 === t.code || 183 === t.code ? (r = u, i = "Ringing") : 486 === t.code || 603 === t.code ? (r = f, i = "Busy here") : t.code >= 400 ? (r = v, i = "Ended") : 200 === t.code && (r = p, i = "Answered", n._answeredDeviceId = o), t.code >= 400 ? n.ended = !0 : 200 === t.code && (n.isAnswered = !0), r > -1 ? n._callOnEvent("signalingstate", { reason: i, code: r, sipCode: t.code, sipReason: t.reason }) : console.log("error: unknow code: " + t.code), t.code >= 400 ? (n._freeResource(), n.onRemove()) : 200 === t.code && (n._pc && n._onRemoteSDP(), n._checkAndAddCandidateFromQueue()) } else console.log("error could not found call for: " + t.callId) } }, { key: "_callStopFromServer", value: function (e, t) { var n = e.findCallByCallId(t.callId); n ? (n.ended = !0, n._freeResource(), n.onRemove(), n._callOnEvent("signalingstate", { reason: "Ended", code: v, sipCode: -1, sipReason: "Bye" })) : console.log("error could not found call for: " + t.callId) } }, { key: "_callStartFromServer", value: function (e, t) { var n = new Se(e, t.fromNumber, t.toNumber, t.video); n._iceServers = t.iceServers, n.callId = t.callId, n.isIncomingCall = !0, n.fromAlias = t.fromAlias, n.toAlias = t.toAlias, n.fromInternal = t.fromInternal, n.customDataFromYourServer = t.customDataFromYourServer, n._initPeerConnection(!1), e._callOnEvent("incomingcall", n) } }, { key: "_callInfoFromServer", value: function (e, t) { var n = e.findCallByCallId(t.callId); n ? n._callOnEvent("info", t.info) : console.log("error could not found call for: " + t.callId) } }, { key: "_videoEndPointSdpFromServer", value: function (e, t) { var n = new RTCSessionDescription({ type: t.data.type, sdp: t.data.sdp }), r = t.localTrackId, i = t.serverTrackId, o = Ie.rooms.get(t.roomId); o ? o.onReceiveSdp1(r, i, n) : console.log("room not found: " + t.roomId) } }, { key: "_videoEndPointCandidateFromServer", value: function (e, t) { var n = new RTCIceCandidate(JSON.parse(t.data)), r = t.localTrackId, i = t.serverTrackId, o = Ie.rooms.get(t.roomId); o ? o.onReceiveCandidate1(r, i, n) : console.log("room not found: " + t.roomId) } }, { key: "_videoTrackAddedFromServer", value: function (e, t) { var n = Ie.rooms.get(t.roomId); n ? n.onTrackAdded(t) : console.log("room not found: " + t.roomId) } }, { key: "_videoTrackRemovedFromServer", value: function (e, t) { var n = Ie.rooms.get(t.roomId); n ? n.onTrackRemoved(t) : console.log("room not found: " + t.roomId) } }, { key: "_videoRoomJoinedFromServer", value: function (e, t) { var n = Ie.rooms.get(t.roomId); n ? n.onRoomJoined(t) : console.log("room not found: " + t.roomId) } }, { key: "_videoRoomLeftFromServer", value: function (e, t) { var n = Ie.rooms.get(t.roomId); n ? n.onRoomLeft(t) : console.log("room not found: " + t.roomId) } }, { key: "_videoRoomMsgFromServer", value: function (e, t) { var n = Ie.rooms.get(t.roomId); n ? n.onRoomMsg(t) : console.log("room not found: " + t.roomId) } }], (n = null) && ke(t.prototype, n), r && ke(t, r), e }(); function Pe(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var be = function () { function e() { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e) } var t, n, r; return t = e, r = [{ key: "_routeChatToAgent", value: function (e, t) { console.log("_routeChatToAgent: " + JSON.stringify(t)), e._callOnEvent("incommingchat", t) } }], (n = null) && Pe(t.prototype, n), r && Pe(t, r), e }(); function Ae(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var Me = function () { function e(t) { var n = this; !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), console.log("SSWS build: 13-08-2020 06:56"), this.serverAddr = t, this._onMethods = new StringeeHashMap, this.logHash = "HC-INT-" + Math.round(100 * Math.random()) + "-" + Math.round(100 * Math.random()), this.userDisconnect = !1, this.timeoutReconnectMethod = null, this.socket = null, this.serverAddressIsDead = !1, this.alreadyTried = !1; var r = this; this.healthCheckInterval = setInterval((function () { if (console.log("SSWS: health check interval: [" + r.logHash + "]", r), r.serverAddressIsDead) return console.log("SSWS: socket connect error, stop the interval, wait for StringeeClient to create new connection"), void r.clearHealthCheckInterval(); !n.socket || n.socket.readyState !== WebSocket.CLOSED && n.socket.readyState !== WebSocket.CLOSING || (n.alreadyTried = !1, console.log("SSWS: try connecting to the websocket again", r.serverAddr), r.connect()) }), 2e3) } var t, n, r; return t = e, (n = [{ key: "clearHealthCheckInterval", value: function () { try { console.log("SSWS: Stop the health check interval"), clearInterval(this.healthCheckInterval) } catch (e) { console.log("clearing health check interval inside SSWS failed", e) } } }, { key: "open", value: function () { this.connect() } }, { key: "connect", value: function () { this.alreadyTried ? console.log("SSWS: already tried, wait for 3 seconds") : (this.alreadyTried = !0, this.userDisconnect = !1, this.socket && (this.socket.onopen = null, this.socket.onmessage = null, this.socket.onclose = null, this.socket.onerror = null, this.socket.close(), this.socket = null), this.socket = new WebSocket(this.serverAddr), this.bindSocketEvents(this.socket)) } }, { key: "bindSocketEvents", value: function (e) { var t = this; e.onopen = function (e) { var n = t._onMethods.get("connect"); n && n(e) }, e.onmessage = function (e) { var n = t._onMethods.get("EventPacket"); n && n(e.data) }, e.onclose = function (e) { var n = t._onMethods.get("disconnect"); n && n(e) }, e.onerror = function (n) { console.log("Native websocket error", n), this.serverAddressIsDead = !0, t.clearHealthCheckInterval(); var r = t._onMethods.get("error"); r ? r(n) : console.log("StringeeWebSocket on error", n), e.close() } } }, { key: "reconnect", value: function () { console.log("SSWS: on reconnect"), this.disconnect(); var e = this; this.userCallReconnectMethod && clearTimeout(this.userCallReconnectMethod), this.userCallReconnectMethod = setTimeout((function () { e.connect() }), 1e3) } }, { key: "disconnect", value: function () { console.log("SSWS: on disconnect, clear health check interval"), this.clearHealthCheckInterval(), this.userDisconnect = !0, this.timeoutReconnectMethod && clearTimeout(this.timeoutReconnectMethod), this.socket.close() } }, { key: "close", value: function () { this.disconnect() } }, { key: "on", value: function (e, t) { this._onMethods.put(e, t) } }, { key: "send", value: function (e) { if (this.socket.readyState === WebSocket.OPEN) { var t = JSON.stringify(e); this.socket.send(t) } else console.log("Socket is not open. not sending anything", this.socket.readyState) } }, { key: "emit", value: function (e, t) { this.send(t) } }]) && Ae(t.prototype, n), r && Ae(t, r), e }(); function we(e) { return function (e) { if (Array.isArray(e)) return De(e) }(e) || function (e) { if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e) }(e) || function (e, t) { if (!e) return; if ("string" == typeof e) return De(e, t); var n = Object.prototype.toString.call(e).slice(8, -1); "Object" === n && e.constructor && (n = e.constructor.name); if ("Map" === n || "Set" === n) return Array.from(n); if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return De(e, t) }(e) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function De(e, t) { (null == t || t > e.length) && (t = e.length); for (var n = 0, r = new Array(t); n < t; n++)r[n] = e[n]; return r } function Ne(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function Le(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var Fe = function () { function e() { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ["wss://v1.stringee.com:6899/", "wss://v2.stringee.com:6899/"]; Ne(this, e), console.log("StringeeClient: create new instance"), this.socket = null, this.hasConnected = !1, this.disconnectByUser = !1, this.timeoutToReconnect = 0, this.lastTimeStampReceivedPacket = 0, this.allClients = [], this.allClientsOfThisBrowser = [], this.stringeeServerAddrs = t, this.stringeeServerAddrIndex = -1, this._stringeeServerAddr = this.stringeeServerAddrs[0], this._currentRequestId = 1, this._callbacks = new l, this.accessToken = "", this._onMethods = new l, this._stringeeCalls = [], this.ice_servers = [], this.deviceId = "web-" + this._genUuid(), this.browserId = localStorage.getItem("stringee_browser_id"), this.browserId || (this.browserId = "browser-" + this._genUuid(), localStorage.setItem("stringee_browser_id", this.browserId)), this.sessionId = "session-" + this._genUuid(), this.alreadyTried = !1; var n = this; this.healtcheckInterval = setInterval((function () { try { var e, t; console.log("StringeeClient: Socket health Check", n.socket, "connection status ready? ", 1 === (null === (e = n.socket) || void 0 === e || null === (t = e.socket) || void 0 === t ? void 0 : t.readyState)) } catch (e) { console.log("error health check", e) } return n.alreadyTried && (console.log("StringeeClient: reset alreadyTried, allow retry connection"), n.alreadyTried = !1), n.disconnectByUser ? (console.log("StringeeClient: Socket disconnected by user. Stop trying to connect"), void n._cleanHouse()) : null == n.socket ? (console.log("StringeeClient: Socket is null"), void (n.accessToken && (console.log("StringeeClient: create a new socket", n.socket), n.createNewStringeeWebSocket(n.accessToken)))) : void (n.socket && n.socket.socket && n.socket.socket.readyState > 1 && n.accessToken && (console.log("StringeeClient: Socket is closed or about to close, create a new socket instance", n.socket.socket.readyState, n._stringeeServerAddr), n.createNewStringeeWebSocket(n.accessToken))) }), 1e4) } var t, n, r; return t = e, (n = [{ key: "_cleanHouse", value: function () { this.healtcheckInterval && clearInterval(this.healtcheckInterval) } }, { key: "getClientId", value: function () { return this.deviceId } }, { key: "getBrowserId", value: function () { return this.browserId } }, { key: "setThisClientIsActive", value: function (e) { e ? localStorage.setItem("active_client_id", this.deviceId) : localStorage.removeItem("active_client_id") } }, { key: "isActiveClient", value: function () { var e = localStorage.getItem("active_client_id"); return this.deviceId === e } }, { key: "findCallByCallId", value: function (e) { for (var t = 0; t < this._stringeeCalls.length; t++) { var n = this._stringeeCalls[t]; if (n.callId === e) return n } return null } }, { key: "_pushCallback", value: function (e, t) { if (t) { var n = this._callbacks.get(e); n || (n = []), n.push(t), this._callbacks.put(e, n) } } }, { key: "_callCallback", value: function (e, t) { var n = !1, r = this._callbacks.get(e); if (r) { var i = r.pop(); i && (i.call(this, t), n = !0) } return n } }, { key: "getURLToConnect", value: function () { return this.tempWebsocketURL && 0 !== this.tempWebsocketURL.length || (this.tempWebsocketURL = we(this.stringeeServerAddrs)), this.tempWebsocketURL.shift() } }, { key: "createNewStringeeWebSocket", value: function (e) { console.log("StringeeClient: About to create new socket connect from these URLs: ", this.stringeeServerAddrs), this._stringeeServerAddr = this.getURLToConnect(); try { this.socket && (console.log("StringeeClient: clear socket interval before creating new instance"), this.socket.clearHealthCheckInterval()) } catch (e) { console.log("failed clearing interval of StringeeWebSocket", e) } console.log("create new websocket instance and connect to: " + this._stringeeServerAddr), this.socket = null, this.socket = new Me(this._stringeeServerAddr), this.bindSocketEvents(this.socket, e), this.accessToken = e, this.socket.open() } }, { key: "bindSocketEvents", value: function (e, t) { var n = this; e.on("connect", (function () { n._callOnEvent("connect"), n.numberOfRetryConnect = 0; var e = screen.width, r = screen.height, i = localStorage.getItem("stringee_browser_id"); i || (i = "browser-" + n._genUuid(), localStorage.setItem("stringee_browser_id", i)); var o = { accesstoken: t, deviceId: n.deviceId, browserId: n.browserId, sessionId: n.sessionId, platform: 3, platformVersion: "", deviceName: navigator.userAgent, screenSize: e + "x" + r, sdkVersion: "2.6.0" }; n._sendMessage(c.AUTHEN, o, (function (e) { 0 === e.r ? (n.ice_servers = e.ice_servers, n.hasConnected = !0, e.clients.forEach((function (e) { n.allClients.push(e.clientId), e.browserId === n.getBrowserId() && n.allClientsOfThisBrowser.push(e.clientId), n.allClients.sort(), n.allClientsOfThisBrowser.sort() })), n.userId = e.userId, n.timeoutToReconnect = e.ping_after_ms + 15e3) : n.hasConnected = !1, 15 !== e.r ? (n._callOnEvent("authen", e), 6 === e.r && n._callOnEvent("requestnewtoken")) : (console.log("CURRENT_SERVER_IS_SLAVE, please change to: " + e.change_to_server), e.change_to_server && !n.alreadyTried ? (n.socket.disconnect(), n._stringeeServerAddr = e.change_to_server, n.stringeeServerAddrIndex = -1, n.connect(n.accessToken)) : setTimeout((function () { n.socket.disconnect() }), 2e3)) })) })), e.on("disconnect", (function () { n.hasConnected = !1, n._callOnEvent("disconnect") })), e.on("error", (function (e) { console.log("socket error", e) })), e.on("EventPacket", (function (e) { try { var t = JSON.parse(e); if (!t || !t.service) return void console.log("could not decode data, error=1, ", e); try { n._packetReceived(t.service, t.body) } catch (e) { console.log("error when process packet", e) } } catch (t) { console.log("could not decode data, error=2, ", e) } })) } }, { key: "connect", value: function (e) { this.alreadyTried ? console.log("StringeeClient: There is a recent attempt to connect to " + this._stringeeServerAddr + ". Please wait") : (this.alreadyTried = !0, this.disconnectByUser = !1, this.socket && (this.socket.disconnect(), this.socket = null), this.createNewStringeeWebSocket(e)) } }, { key: "disconnect", value: function () { console.log("StringeeClient: disconnected by user"), this.alreadyTried = !1, this.tempWebsocketURL = null, this.disconnectByUser = !0, this.socket && (this.socket.close(), this.socket = null) } }, { key: "sendCustomMessage", value: function (e, t, n) { var r = this, i = { toUser: e, message: t }; this._sendMessage(c.CUSTOM_MESSAGE, i, (function (e) { n && n.call(r, e) })) } }, { key: "changeAttribute", value: function (e, t, n) { var r = this, i = { attribute: e, value: t }; this._sendMessage(c.CHANGE_ATTRIBUTE, i, (function (e) { n && n.call(r, e) })) } }, { key: "_sendMessage", value: function (e, t, n) { if (t.requestId || (t.requestId = this._currentRequestId), n) { var r = "packet_" + e + "_" + t.requestId; this._pushCallback(r, n) } var i = { service: e, body: t }; this.socket.emit("EventPacket", i), this._currentRequestId++ } }, { key: "_packetReceived", value: function (e, t) { var n, r = !1; if (this.lastTimeStampReceivedPacket = Date.now(), t.requestId) { var i = "packet_" + e + "_" + t.requestId; n = this._callCallback(i, t) } e === c.CALL_SDP_CANDIDATE_FROM_SERVER ? Oe._callSdpCandidateFromServer(this, t) : e === c.CALL_STATE_FROM_SERVER ? Oe._callStateFromServer(this, t) : e === c.CALL_STOP_FROM_SERVER ? Oe._callStopFromServer(this, t) : e === c.CALL_START_FROM_SERVER ? Oe._callStartFromServer(this, t) : e === c.PING ? this._sendMessage(c.PING, {}) : e === c.CALL_INFO_FROM_SERVER ? Oe._callInfoFromServer(this, t) : e === c.MSG_FROM_OTHER_DEVICE ? this._msgFromOtherDevice(t) : e === c.CUSTOM_MESSAGE_FROM_SERVER ? this._callOnEvent("custommessage", t) : e === c.OTHER_DEVICE_AUTHEN ? this._otherDeviceAuthen(t) : e === c.CHAT_MESSAGE_FROM_SERVER ? this._callOnEvent("chatmessage", t) : e === c.CHAT_MESSAGE_REPORT_FROM_SERVER ? this._callOnEvent("chatmessagestate", t) : e === c.CHAT_ROUTE_TO_AGENT ? be._routeChatToAgent(this, t) : e === c.SUBSCRIBE_FROM_SERVER ? this._callOnEvent("messagefromtopic", t) : e === c.TIMEOUT_ROUTE_TO_QUEUE ? this._callOnEvent("timeoutInQueue", t) : e === c.TIMEOUT_ROUTE_TO_AGENT ? this._callOnEvent("timeoutAnswerChat", t) : e === c.CHAT_PIN_MESSAGE_FROM_SERVER ? this._callOnEvent("pinMsgFromServer", t) : e === c.CHAT_EDIT_MESSAGE_FROM_SERVER ? this._callOnEvent("editMsgFromServer", t) : e === c.CHAT_REVOKE_MESSAGE_FROM_SERVER ? this._callOnEvent("revokeMsgFromServer", t) : e === c.CHAT_REMOVE_PARTICIPANT_FROM_SERVER ? this._callOnEvent("removeParticipantFromServer", t) : e === c.CHAT_ADD_PARTICIPANT_FROM_SERVER ? this._callOnEvent("addParticipantFromServer", t) : e === c.CHAT_USER_BEGIN_TYPING_NOTIFICATION ? this._callOnEvent("userBeginTypingListener", t) : e === c.CHAT_USER_END_TYPING_NOTIFIACTION ? this._callOnEvent("userEndTypingListener", t) : e === c.UPDATE_USER_INFO_NOTIFICATION ? this._callOnEvent("updateUserInfoMsg", t) : e === c.CHAT_AGENT_RESPONSE ? this._callOnEvent("chatAgentResponse", t) : e === c.CHAT_TRANSFER_REQUEST_FROM_ANOTHER_AGENT ? this._callOnEvent("transferChatRequest", t) : e === c.CHAT_LOAD_ALL_MESSAGES_FOR_CONVERSATIONS ? this._callOnEvent("loadAllChatMessages", t) : e === c.VIDEO_ENDPOINT_SDP_FROM_SERVER ? Oe._videoEndPointSdpFromServer(this, t) : e === c.VIDEO_ENDPOINT_CANDIDATE_FROM_SERVER ? Oe._videoEndPointCandidateFromServer(this, t) : e === c.VIDEO_TRACK_ADDED_FROM_SERVER ? Oe._videoTrackAddedFromServer(this, t) : e === c.VIDEO_TRACK_REMOVED_FROM_SERVER ? Oe._videoTrackRemovedFromServer(this, t) : e === c.VIDEO_ROOM_JOINED_FROM_SERVER ? Oe._videoRoomJoinedFromServer(this, t) : e === c.VIDEO_ROOM_LEFT_FROM_SERVER ? Oe._videoRoomLeftFromServer(this, t) : e === c.VIDEO_ROOM_MSG_FROM_SERVER ? Oe._videoRoomMsgFromServer(this, t) : r = !0, n && (r = !1), r && console.log("===Packet received: service=" + e + "; body=" + JSON.stringify(t)) } }, { key: "_otherDeviceAuthen", value: function (e) { if ("disconnected" === e.status) { for (var t = 0; t < this.allClients.length; t++)this.allClients[t] === e.clientId && this.allClients.splice(t, 1); if (e.browserId === this.getBrowserId()) for (t = 0; t < this.allClientsOfThisBrowser.length; t++)this.allClientsOfThisBrowser[t] === e.clientId && this.allClientsOfThisBrowser.splice(t, 1) } else this.allClients.push(e.clientId), e.browserId === this.getBrowserId() && this.allClientsOfThisBrowser.push(e.clientId), this.allClients.sort(), this.allClientsOfThisBrowser.sort(); this._callOnEvent("otherdeviceauthen", e) } }, { key: "_msgFromOtherDevice", value: function (e) { var t = e.data; if ("CALL_STATE" === e.type) (n = this.findCallByCallId(t.callId)) && (200 === t.code && (n.answeredOnAnotherDevice = !0), n._callOnEvent("otherdevice", { type: "CALL_STATE", code: t.code }), 486 === t.code || 603 === t.code ? (n.ended = !0, n._freeResource(), n.onRemove()) : 200 === t.code && n._freeResource()); else if ("CALL_END" === e.type) { var n; (n = this.findCallByCallId(t.callId)) && (n.ended = !0, n._callOnEvent("otherdevice", { type: "CALL_END" })) } else console.log("===_msgFromOtherDevice: body=" + JSON.stringify(e)) } }, { key: "sendChatOneToOneMsg", value: function () { } }, { key: "on", value: function (e, t) { this._onMethods.put(e, t) } }, { key: "_callOnEvent", value: function (e, t) { var n = this._onMethods.get(e); n ? t ? n.call(this, t) : n.call(this) : console.log("Please implement StringeeClient event: " + e) } }, { key: "_genUuid", value: function () { function e() { return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1) } return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e() } }]) && Le(t.prototype, n), r && Le(t, r), e }(), xe = 0, Ge = 1; var Ue = function e(t, n, r, i) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), this.id = t, this.userId = n, this.body = r, this.callback = i, this.expireTime = Date.now() + 36e5 }, Ve = 0, je = 1, He = 2, Be = 0, qe = 1, Je = 2, Ke = 3, We = 4; var ze = function e(t, n, r, i, o) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), 0 === n ? (this.id = t.id, this.localId = t.localDbId, this.conversationId = t.convId, this.sender = t.user, this.createdAt = t.created, this.sequence = t.seq, this.type = t.type, this.content = t.content, i >= t.seq ? this.state = We : r >= t.seq ? this.state = Ke : this.state = Je) : 1 === n ? (this.id = t.msgId, this.localId = t.localDbId, this.conversationId = t.convId, this.sender = t.from, this.createdAt = t.createdTime, this.sequence = t.seq, this.type = t.type, this.content = t.message, this.state = Ke) : 2 === n ? (this.id = t.msgId, this.conversationId = t.convId, this.createdAt = t.created, this.sequence = t.seq, this.state = Je) : 3 == n && (0 == o ? (this.id = t.lastMsg.id, this.localId = "", this.conversationId = t.convId, this.sender = t.lastMsg.user, this.createdAt = t.lastMsg.created, this.sequence = 1, this.type = t.lastMsg.type, this.content = t.lastMsg.content, this.state = We) : 1 == o ? (this.id = null != t.lastMsgId ? t.lastMsgId : "", this.localId = "", this.conversationId = t.convId, this.sender = t.lastMsgSender, this.createdAt = t.lastTimeNewMsg, this.sequence = t.lastMsgSeqReceived, this.type = t.lastMsgType, this.content = t.lastMsg, t.lastMsgSeqReceived > t.lastMsgSeqSeen ? this.state = Ke : this.state = We) : 2 == o && (this.id = null != t.lastMsgId ? t.lastMsgId : "", this.localId = "", this.conversationId = t.convId, this.sender = null != t.lastMsgSender ? t.lastMsgSender : "", this.createdAt = t.lastTimeNewMsg, this.sequence = t.lastMsgSeqReceived, this.type = t.lastMsgType, this.content = t.lastMsg, t.lastMsgSeqReceived > t.lastMsgSeqSeen ? this.state = Ke : this.state = We)) }; var Qe = function e(t) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), this.userId = t.user, this.name = t.displayName, this.avatar = t.avatarUrl, null != t.lastMsgSeqReceived && (this.lastMsgSeqReceived = t.lastMsgSeqReceived), null != t.lastMsgSeqSeen && (this.lastMsgSeqSeen = t.lastMsgSeqSeen) }; var Ye = function e(t, n) { if (function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), 0 === n) { this.id = t.convId, this.name = t.lastMsg.content.groupName, this.isGroup = t.isGroup, this.updatedAt = t.lastUpdate, this.unreadCount = 0, this.creator = t.lastMsg.content.creator, this.created = t.lastTimeNewMsg, this.pinMsgId = t.pinMsgId; var r = []; t.participants.forEach((function (e) { var t = new Qe(e); r.push(t) })), this.participants = r, this.lastMessage = new ze(t, 3, 0, 0, n) } else if (1 === n) { this.id = t.convId, this.name = t.convName, this.isGroup = t.isGroup, this.updatedAt = t.lastUpdate, this.unreadCount = t.unread, this.creator = t.creator, this.created = t.created, this.pinMsgId = t.pinMsgId; r = []; t.participants.forEach((function (e) { var t = new Qe(e); r.push(t) })), this.participants = r, this.lastMessage = new ze(t, 3, 0, 0, n) } else { this.id = t.convId, this.name = t.info.name, this.isGroup = t.info.isGroup, this.updatedAt = t.lastUpdate, this.unreadCount = 0, this.creator = t.info.creator, this.created = t.info.created, this.pinMsgId = t.pinMsgId; r = []; t.participants.forEach((function (e) { var t = new Qe(e); r.push(t) })), this.participants = r, this.lastMessage = new ze(t, 3, 0, 0, n) } }; function Xe(e) { return (Xe = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e })(e) } function $e(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable }))), n.push.apply(n, r) } return n } function Ze(e) { for (var t = 1; t < arguments.length; t++) { var n = null != arguments[t] ? arguments[t] : {}; t % 2 ? $e(Object(n), !0).forEach((function (t) { et(e, t, n[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : $e(Object(n)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)) })) } return e } function et(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function tt(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var nt = function () { function e(t) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e); var n = this; n.realTimeEvent = "onObjectChange", n.pinMsgFromServerEvent = "pinMsgFromServer", n.editMsgFromServerEvent = "editMsgFromServer", n.userBeginTypingEvent = "userBeginTypingListener", n.userEndTypingEvent = "userEndTypingListener", n.revokeMsgFromServerEvent = "revokeMsgFromServer", n.removeParticipantFromServerEvent = "removeParticipantFromServer", n.addParticipantFromServerEvent = "addParticipantFromServer", n.created = !1, n.client = t, n._onMethods = new l, n.trackingMap = new l, n.msgQueue = [], setInterval((function () { var e = Date.now(); n.msgQueue = n.msgQueue.filter((function (t) { return t.expireTime > e })) }), 1e3), n.setupChatClient(n) } var t, n, r; return t = e, (n = [{ key: "setupChatClient", value: function (e) { e.client.on("authensuccess", (function (t) { e.sendMessageQueue() })), e.client.on("chatmessage", (function (t) { var n = new ze(t, 1), r = { lastMsgSeq: n.sequence, lastMsgTimestamp: n.createdAt, status: 1, convId: n.conversationId }; e.client._sendMessage(c.CHAT_MESSAGE_REPORT, r, (function (e) { })), e.trackMsg(n), e.fireObjectChangeEvent(Ge, [n], Ve), null != n.conversationId && n.conversationId.length > 0 && e.getConversationById(n.conversationId, (function (t, n, r, i) { t && null != i && e.fireObjectChangeEvent(xe, [i], je) })) })), e.client.on("chatmessagestate", (function (t) { var n = t.lastMsgSeq, r = t.status, i = (t.convId, e.trackingMap.allValues()), o = []; i.forEach((function (t) { if (n >= t.sequence) if (2 === r) { t.state = We, o.push(t); var i = e.keyForMsg(t); e.trackingMap.remove(i) } else 1 === r && t.state !== We && t.state !== Ke && (t.state = Ke, o.push(t)) })), o.length > 0 && e.fireObjectChangeEvent(Ge, o, je) })), e.client.on("pinMsgFromServer", (function (t) { var n = t.convId, r = t.msgId, i = t.isPin; e._callOnEvent(e.pinMsgFromServerEvent, { convId: n, msgId: r, isPin: i }) })), e.client.on("editMsgFromServer", (function (t) { var n = t.convId, r = t.msgId; e._callOnEvent(e.editMsgFromServerEvent, { convId: n, msgId: r }) })), e.client.on("revokeMsgFromServer", (function (t) { var n = t.convId, r = t.msgIds; e._callOnEvent(e.revokeMsgFromServerEvent, { convId: n, msgIds: r }) })), e.client.on("userBeginTypingListener", (function (t) { e._callOnEvent(e.userBeginTypingEvent, t) })), e.client.on("userEndTypingListener", (function (t) { e._callOnEvent(e.userEndTypingEvent, t) })), e.client.on(e.removeParticipantFromServerEvent, (function (t) { e._callOnEvent(e.removeParticipantFromServerEvent, t) })), e.client.on(e.addParticipantFromServerEvent, (function (t) { e._callOnEvent(e.addParticipantFromServerEvent, t) })) } }, { key: "createConversation", value: function (e, t, n) { var r = this; return new Promise((function (i, o) { if (r.created) o({ r: -1, message: "Could not create conversation, conversation is created" }); else { if (console.log("continue to chat...1"), void 0 === e || null == e || null == e.length || 0 === e.length) return o({ r: -1, message: "UserIds are invalid" }), void n.call(r.client, !1, -2, "UserIds are invalid", null); if (!r.client.hasConnected) return o({ r: -1, message: "StringeeClient is not connected to Stringee server." }), void n.call(r.client, !1, -1, "StringeeClient is not connected to Stringee server.", null); var a; a = null == t.name || 0 === t.name.length ? "" : t.name; var s = { distinct: t.isDistinct, isGroup: t.isGroup, name: a, participants: e }; r.client._sendMessage(c.CHAT_CREATE_CONVERSATION, s, (function (e) { var t = e.r, a = 0 === t || 2 === t; a && (r.created = !0); var s = a ? "Success" : null != e.message && e.message.length > 0 ? e.message : "Generic error.", c = a ? new Ye(e, t) : null, l = 0 === t || 2 === t ? 0 : e.r; n && n.call(r.client, a, l, s, c), a || o(t), 0 === e.r ? (e.objectType = xe, e.objectChanges = [c], e.changeType = Ve, i(e), console.log("firing r === 0"), r.fireObjectChangeEvent(xe, [c], Ve)) : 2 === e.r && (console.log("firing r === 2"), e.objectType = xe, e.objectChanges = [c], e.changeType = je, i(e), r.fireObjectChangeEvent(xe, [c], je)) })) } })) } }, { key: "getLastConversations", value: function (e, t, n) { var r = this; if (e <= 0) n.call(r.client, !1, -2, "Params are invalid.", null); else if (r.client.hasConnected) { var i = { lastUpdateGreater: 0, lastUpdateSmaller: Number.MAX_SAFE_INTEGER, limit: e }; r.client._sendMessage(c.CHAT_CONVERSATION_LOAD, i, (function (e) { if (n) { var i = 0 === e.r, o = e.r, a = i ? "Success" : null != e.message && e.message.length > 0 ? e.message : "Generic error.", s = e.listConvs; return null != s && (s = t ? s.reverse().map((function (e) { return new Ye(e, 1) })) : s.map((function (e) { return new Ye(e, 1) }))), void n.call(r.client, i, o, a, s) } })) } else n.call(r.client, !1, -1, "StringeeClient is not connected to Stringee server.", null) } }, { key: "getConversationsAfter", value: function (e, t, n, r) { var i = this; if (t <= 0 || e <= 0) r.call(i.client, !1, -2, "Params are invalid.", null); else if (i.client.hasConnected) { var o = { lastUpdateGreater: e, lastUpdateSmaller: Number.MAX_SAFE_INTEGER, limit: t }; i.client._sendMessage(c.CHAT_CONVERSATION_LOAD, o, (function (e) { if (r) { var t = 0 === e.r, o = e.r, a = t ? "Success" : null != e.message && e.message.length > 0 ? e.message : "Generic error.", s = e.listConvs; return null != s && (s = n ? s.reverse().map((function (e) { return new Ye(e, 1) })) : s.map((function (e) { return new Ye(e, 1) }))), void r.call(i.client, t, o, a, s) } })) } else r.call(i.client, !1, -1, "StringeeClient is not connected to Stringee server.", null) } }, { key: "getConversationsBefore", value: function (e, t, n, r) { var i = this; if (t <= 0 || e <= 0) r.call(i.client, !1, -2, "Params are invalid.", null); else if (i.client.hasConnected) { var o = { lastUpdateGreater: 0, lastUpdateSmaller: e, limit: t }; i.client._sendMessage(c.CHAT_CONVERSATION_LOAD, o, (function (e) { if (r) { var t = 0 === e.r, o = e.r, a = t ? "Success" : null != e.message && e.message.length > 0 ? e.message : "Generic error.", s = e.listConvs; return null != s && (s = n ? s.reverse().map((function (e) { return new Ye(e, 1) })) : s.map((function (e) { return new Ye(e, 1) }))), void r.call(i.client, t, o, a, s) } })) } else r.call(i.client, !1, -1, "StringeeClient is not connected to Stringee server.", null) } }, { key: "getConversationById", value: function (e, t) { var n = this; return new Promise((function (r, i) { if (!e) return i({ r: -1, message: "Conversaion's Id is invalid" }), void t.call(n.client, !1, -2, "Conversaion's Id is invalid", conv); if (!n.client.hasConnected) return i({ r: -1, message: "StringeeClient is not connected to Stringee server." }), void t.call(n.client, !1, -2, "StringeeClient is not connected to Stringee server.", conv); var o = { convIds: e }; n.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, o, (function (e) { var o, a = e.r, s = 0 === a, c = e.r, l = s ? "Success" : null != e.message && e.message.length > 0 ? e.message : "Generic error.", d = e.listConvs; null != d && d.length > 0 && (o = new Ye(d[0], 1)), t && t.call(n.client, s, c, l, o), 0 === a ? r(Ze({}, e, { conversation: o })) : i(Ze({}, e, { conversation: o })) })) })) } }, { key: "deleteConversation", value: function (e, t) { var n = this; if (e) if (n.client.hasConnected) { var r = { convIds: e }; n.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, r, (function (r) { if (t) { var i = r.listConvs; if (null != i && i.length > 0) { var o = i[0], a = { seq: o.convLastSeq, convId: e }; n.client._sendMessage(c.CHAT_DELETE_CONVERSATION, a, (function (e) { var r = e.r, i = 0 === r, a = r, s = i ? "Success" : null != e.message && e.message.length > 0 ? e.message : "Generic error."; if (t.call(n.client, i, a, s), 0 === e.r) { var c = new Ye(o, 1); n.fireObjectChangeEvent(xe, [c], He) } })) } else t.call(n.client, !1, -3, "Can not get conversation's info") } })) } else t.call(n.client, !1, -1, "StringeeClient is not connected to Stringee server."); else t.call(n.client, !1, -2, "Conversaion's Id is invalid") } }, { key: "updateConversation", value: function (e, t, n) { var r = this; if (e) if (r.client.hasConnected) { var i = { convId: e, groupName: t.name, imageUrl: t.avatar }; r.client._sendMessage(c.CHAT_UPDATE_CONVERSATION, i, (function (t) { if (n) { var i = 0 === t.r, o = t.r, a = i ? "Success" : null != t.message && t.message.length > 0 ? t.message : "Generic error."; n.call(r.client, i, o, a) } if (0 === t.r) { var s = { convIds: e }; r.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, s, (function (e) { var t = e.listConvs; if (null != t && t.length > 0) { var n = t[0], i = new Ye(n, 1); r.fireObjectChangeEvent(xe, [i], je) } })) } })) } else n.call(r.client, !1, -1, "StringeeClient is not connected to Stringee server."); else n.call(r.client, !1, -2, "Conversation's Id is invalid") } }, { key: "addParticipants", value: function (e, t, n) { var r = this; return new Promise((function (i, o) { if (!e) return o({ r: -1, message: "Conversation ID is invalid" }), void n.call(r.client, !1, -2, "Params are invalid.", null); if (!t || !t.length) return o({ r: -1, message: "List of users is empty" }), void n.call(r.client, !1, -2, "Params are invalid.", null); if (!r.client.hasConnected) return o({ r: -1, message: "StringeeClient is not connected to Stringee server." }), void n.call(r.client, !1, -1, "StringeeClient is not connected to Stringee server.", null); var a = { convId: e, userIds: t }; r.client._sendMessage(c.CHAT_ADD_PARTICIPANT, a, (function (t) { if (n) { var a = t.r, s = 0 === a, l = a, d = s ? "Success" : null != t.message && t.message.length > 0 ? t.message : "Generic error.", u = t.added; null != u && (u = u.map((function (e) { return new StringeeUser(e) }))), n.call(r.client, s, l, d, u) } if (0 === t.r) { var p = { convIds: e }; r.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, p, (function (e) { var t = e.listConvs; if (null != t && t.length > 0) { var n = t[0], i = new Ye(n, 1); r.fireObjectChangeEvent(xe, [i], je) } })), i(t) } else o(t) })) })) } }, { key: "removeParticipants", value: function (e, t, n) { var r = this; return new Promise((function (i, o) { if (!e) return n.call(r.client, !1, -2, "Params are invalid.", null), void o({ r: -1, message: "Conversation ID is not valid" }); if (!t || !t.length) return n.call(r.client, !1, -2, "Params are invalid.", null), void o({ r: -1, message: "list of user is empty" }); if (!r.client.hasConnected) return n.call(r.client, !1, -1, "StringeeClient is not connected to Stringee server.", null), void o({ r: -1, message: "StringeeClient is not connected to Stringee server." }); var a = { convId: e, userIds: t }; r.client._sendMessage(c.CHAT_REMOVE_PARTICIPANT, a, (function (t) { if (n) { var a = t.r, s = 0 === a, l = a, d = s ? "Success" : null != t.message && t.message.length > 0 ? t.message : "Generic error.", u = t.removed; null != u && (u = u.map((function (e) { return new StringeeUser(e) }))), n.call(r.client, s, l, d, u) } if (0 === t.r) { var p = { convIds: e }; r.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, p, (function (e) { var t = e.listConvs; if (null != t && t.length > 0) { var n = t[0], i = new Ye(n, 1); r.fireObjectChangeEvent(xe, [i], je) } })), 0 === t.r ? i(t) : o(t) } })) })) } }, { key: "sendMessage", value: function (e, t) { var n = this; if (e.convId) if (n.client.hasConnected && null != n.client.userId) { var r = n.client.userId, i = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15), o = "web-" + r + "-" + i + "-" + Date.now().toString(), a = { message: e.message, type: e.type, convId: e.convId, localDbId: o }, s = new Ue(o, r, a, t); n.msgQueue.push(s), console.log("start sending message"); var l = new ze({}, 3); l.id = null, l.localId = o, l.conversationId = e.convId, l.sender = r, l.createdAt = Date.now(), l.type = e.type, l.content = e.message, l.state = Be, n.trackMsg(l), n.fireObjectChangeEvent(Ge, [l], Ve), l.state = qe, n.fireObjectChangeEvent(Ge, [l], je), console.log("requesting send message"), n.client._sendMessage(c.CHAT_MESSAGE, a, (function (i) { console.log("on chat message sent", i); var a = i.r, s = 0 === a, c = null; if (t && 9 !== a) { var l = i.r, d = s ? "Success" : null != i.message && i.message.length > 0 ? i.message : "Generic error."; (c = new ze(i, 2)).localId = o, c.type = e.type, c.content = e.message, c.sender = r, t.call(n.client, s, l, d, c) } var u = i.localDbId; if (null != u && s && (n.msgQueue = n.msgQueue.filter((function (e) { return e.id !== u }))), null != c) { var p = n.keyForMsg(c); n.trackingMap.remove(p), n.trackingMap.put(p, c), n.fireObjectChangeEvent(Ge, [c], je) } })) } else t.call(n.client, !1, -1, "StringeeClient is not connected to Stringee server."); else t.call(n.client, !1, -2, "Conversation's Id is invalid") } }, { key: "sendMessageQueue", value: function () { var e = this; if (e.msgQueue.length) { var t = e.msgQueue[0]; if (t.userId != e.client.userId && null != e.client.userId) return t.callback && t.callback.call(e.client, !1, -3, "Generic error.", null), void e.msgQueue.shift(); e.client._sendMessage(c.CHAT_MESSAGE, t.body, (function (n) { var r = n.r, i = 0 == r, o = n.r, a = i ? "Success" : null != n.message && n.message.length > 0 ? n.message : "Generic error.", s = n.localDbId, c = null; if (i && ((c = new ze(n, 2)).localId = s, c.type = t.body.type, c.content = t.body.message, c.sender = t.userId), t.callback && 9 != r && t.callback.call(e.client, i, o, a, c), null != s && i && (e.msgQueue = e.msgQueue.filter((function (e) { return e.id != s })), e.sendMessageQueue()), null != c) { var l = stringeeChat.keyForMsg(c); e.trackingMap.remove(l), e.trackingMap.put(l, c), e.fireObjectChangeEvent(Ge, [c], je) } })) } } }, { key: "loadChatMessages", value: function (e, t) { var n = this, r = { seqGreater: e.seqGreater, limit: e.limit, sort: e.sort, convId: e.convId }; n.client._sendMessage(c.CHAT_MESSAGES_LOAD, r, (function (e) { t && t.call(n.client, e) })) } }, { key: "loadAllChatMessages", value: function (e, t) { var n = this, r = e.createdGreater, i = e.createdSmaller, o = e.limit, a = e.sort, s = e.convIds; if (Array.isArray(s)) { var l = { createdGreater: r, createdSmaller: i, sort: a, limit: o, convIds: s = s.join(",") }; return new Promise((function (e, r) { n.client._sendMessage(c.CHAT_LOAD_ALL_MESSAGES_FOR_CONVERSATIONS, l, (function (r) { console.log("got data from server, ", r), t && (console.log("got a valid callback"), t.call(n.client, r)), e(r) })) })) } console.log("must be an array") } }, { key: "getLastMessages", value: function (e, t, n, r) { var i = this; if (!e || t < 0) r.call(i.client, !1, -2, "Params are invalid.", null); else if (i.client.hasConnected) { var o = null != t ? t : 50, a = { seqGreater: 0, seqSmaller: Number.MAX_SAFE_INTEGER, limit: o, sort: "DESC", convId: e }; i.client._sendMessage(c.CHAT_MESSAGES_LOAD, a, (function (t) { if (r) { var o = 0 === t.r, a = t.r, s = o ? "Success" : null != t.message && t.message.length > 0 ? t.message : "Generic error.", l = t.msgs; if (null != l) { var d = { convIds: e }; i.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, d, (function (e) { var t = e.listConvs, c = 0, d = 0; if (null != t && t.length > 0) { var u = t[0]; c = u.lastMsgSeqReceived, d = u.lastMsgSeqSeen } l = n ? l.reverse().map((function (e) { var t = new ze(e, 0, c, d); return i.trackMsg(t), t })) : l.map((function (e) { var t = new ze(e, 0, c, d); return i.trackMsg(t), t })), r.call(i.client, o, a, s, l) })) } } })) } else r.call(i.client, !1, -1, "StringeeClient is not connected to Stringee server.", null) } }, { key: "getMessagesAfter", value: function (e, t, n, r, i) { var o = this; if (!e || t < 0 || n < 0) i.call(o.client, !1, -2, "Params are invalid.", null); else if (o.client.hasConnected) { var a = null != n ? n : 50, s = { seqGreater: null != t ? t : 0, seqSmaller: Number.MAX_SAFE_INTEGER, limit: a, sort: "ASC", convId: e }; o.client._sendMessage(c.CHAT_MESSAGES_LOAD, s, (function (t) { if (i) { var n = 0 == t.r, a = t.r, s = n ? "Success" : null != t.message && t.message.length > 0 ? t.message : "Generic error.", l = t.msgs; if (null != l) { var d = { convIds: e }; o.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, d, (function (e) { var t = e.listConvs, c = 0, d = 0; if (null != t && t.length > 0) { var u = t[0]; c = u.lastMsgSeqReceived, d = u.lastMsgSeqSeen } l = r ? l.map((function (e) { var t = new ze(e, 0, c, d); return o.trackMsg(t), t })) : l.reverse().map((function (e) { var t = new ze(e, 0, c, d); return o.trackMsg(t), t })), i.call(o.client, n, a, s, l) })) } } })) } else i.call(o.client, !1, -1, "StringeeClient is not connected to Stringee server.", null) } }, { key: "getMessagesBefore", value: function (e, t, n, r, i) { var o = this; if (!e || t < 0 || n < 0) i.call(o.client, !1, -2, "Params are invalid.", null); else if (o.client.hasConnected) { var a = { seqGreater: 0, seqSmaller: t, limit: null != n ? n : 50, sort: "DESC", convId: e }; o.client._sendMessage(c.CHAT_MESSAGES_LOAD, a, (function (t) { if (i) { var n = 0 == t.r, a = t.r, s = n ? "Success" : null != t.message && t.message.length > 0 ? t.message : "Generic error.", l = t.msgs; if (null != l) { var d = { convIds: e }; o.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, d, (function (e) { var t = e.listConvs, c = 0, d = 0; if (null != t && t.length > 0) { var u = t[0]; c = u.lastMsgSeqReceived, d = u.lastMsgSeqSeen } l = r ? l.reverse().map((function (e) { var t = new ze(e, 0, c, d); return o.trackMsg(t), t })) : l.map((function (e) { var t = new ze(e, 0, c, d); return o.trackMsg(t), t })), i.call(o.client, n, a, s, l) })) } } })) } else i.call(o.client, !1, -1, "StringeeClient is not connected to Stringee server.", null) } }, { key: "deleteMessage", value: function (e, t, n) { var r = this; if (e) if (t) if (r.client.hasConnected) { var i = { msgIds: t, convId: e }; r.client._sendMessage(c.CHAT_GET_MESSAGES_INFO, i, (function (i) { if (0 === i.r) { var o = i.listMsgs; if (null != o && o.length > 0) { var a = o[0], s = new ze(a, 0), l = { convId: e, messageIds: [t] }; r.client._sendMessage(c.CHAT_DELETE_MESSAGE, l, (function (e) { if (n) { var t = e.r, i = 0 == t, o = t, a = i ? "Success" : null != e.message && e.message.length > 0 ? e.message : "Generic error."; n.call(r.client, i, o, a), r.fireObjectChangeEvent(Ge, [s], He) } })) } } else n.call(r.client, !1, -3, "Message is not found.") })) } else n.call(r.client, !1, -1, "StringeeClient is not connected to Stringee server."); else n.call(r.client, !1, -2, "Params are invalid."); else n.call(r.client, !1, -2, "Params are invalid.") } }, { key: "clearHistory", value: function (e, t) { var n = this; if (e.convId) if (n.client.hasConnected) { var r = { seq: e.sequence, convId: e.convId }; n.client._sendMessage(c.CHAT_CONVERSATION_CLEAR_HISTORY, r, (function (e) { if (t) { var r = e.r, i = 0 === r, o = i ? "Success" : "Fail"; t.call(n.client, i, r, o) } })) } else t.call(n.client, !1, -1, "StringeeClient is not connected to Stringee server."); else t.call(n.client, !1, -2, "Params are invalid.") } }, { key: "markMessageSeen", value: function (e, t) { var n = this; if (e.convId) if (n.client.hasConnected) { var r = { lastMsgSeq: e.sequence, lastMsgTimestamp: e.createdAt, status: 2, convId: e.convId }; n.client._sendMessage(c.CHAT_MESSAGE_REPORT, r, (function (e) { if (t) { var r = 0 == e.r, i = r ? 0 : -3, o = r ? "Success" : "Generic error."; t.call(n.client, r, i, o) } })) } else t.call(n.client, !1, -1, "StringeeClient is not connected to Stringee server."); else t.call(n.client, !1, -2, "Params are invalid.") } }, { key: "markConversationAsRead", value: function (e, t) { var n = this; if (e) if (n.client.hasConnected) { var r = { convIds: e }; n.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, r, (function (r) { var i = r.listConvs; if (null != i && i.length > 0) { var o = i[0], a = { lastMsgSeq: o.convLastSeq, lastMsgTimestamp: o.lastTimeNewMsg, status: 2, convId: e }; n.client._sendMessage(c.CHAT_MESSAGE_REPORT, a, (function (r) { if (t) { var i = 0 == r.r, o = i ? 0 : -4, a = i ? "Success" : "Generic error."; t.call(n.client, i, o, a) } if (0 === r.r) { var s = n.trackingMap.allValues(), c = []; s.forEach((function (t) { if (t.conversationId === e) { t.state = We, c.push(t); var r = n.keyForMsg(t); n.trackingMap.remove(r) } })), c.length > 0 && n.fireObjectChangeEvent(Ge, c, je), n.getConversationById(e, (function (e, t, r, i) { e && null != i && n.fireObjectChangeEvent(xe, [i], je) })) } })) } else t && t.call(n.client, !1, -3, "Can not get conversation's info") })) } else t.call(n.client, !1, -1, "StringeeClient is not connected to Stringee server."); else t.call(n.client, !1, -2, "Conversation's Id is invalid") } }, { key: "getUnreadConversationCount", value: function (e) { var t = this; t.client.hasConnected ? t.client._sendMessage(c.CHAT_UNREAD_CONVERSATION_COUNT, {}, (function (n) { if (e) { var r = 0 == n.r, i = r ? 0 : -3, o = r ? "Success" : "Generic error.", a = n.count; e.call(t.client, r, i, o, a) } })) : e.call(t.client, !1, -1, "StringeeClient is not connected to Stringee server.", null) } }, { key: "getConversationWithUser", value: function (e, t) { var n = this; if (e) if (n.client.userId && n.client.hasConnected) { var r = { participants: [e, n.client.userId] }; n.client._sendMessage(c.CHAT_CONVERSATION_FOR_USERS, r, (function (e) { if (t) { var r, i = 0 == e.r, o = i ? 0 : -3, a = i ? "Success" : "Generic error.", s = e.conversations; if (s.length > 0) { var c = s[0]; r = new Ye(c, 1), t.call(n.client, i, o, a, r) } else t.call(n.client, !1, -4, "Conversation is not found.", r) } })) } else t.call(n.client, !1, -1, "StringeeClient is not connected to Stringee server"); else t.call(n.client, !1, -2, "UserId is invalid") } }, { key: "blockUser", value: function (e, t) { var n = this; if (e) { var r = { userId: e }; n.client._sendMessage(c.CHAT_BLOCK_USER, r, (function (e) { if (t) { var r = e.r, i = 0 == r, o = i ? "Success" : "Fail"; t.call(n.client, i, r, o) } })) } else t.call(n.client, !1, -1, "UserId is invalid") } }, { key: "blockInviteToGroup", value: function (e, t) { var n = this; if (e) { var r = { block_group_invite: e }; n.client._sendMessage(c.CHAT_BLOCK_USER, r, (function (e) { if (t) { var r = e.r, i = 0 == r, o = i ? "Success" : "Fail"; t.call(n.client, i, r, o) } })) } else t.call(n.client, !1, -1, "Conversation's Id is invalid") } }, { key: "rateChat", value: function (e, t, n, r) { var i = this, o = { convId: e, rating: t, comment: n }; i.client._sendMessage(c.RATE_CHAT, o, (function (e) { r && r.call(i.client, e) })) } }, { key: "updateUserInfo", value: function (e, t) { var n = this; n.client._sendMessage(c.UPDATE_USER_INFO, e, (function (e) { t && t.call(n.client, e) })) } }, { key: "getUsersInfo", value: function (e, t) { var n = this; if (e && e.length) if (n.client.userId && n.client.hasConnected) { var r = ""; e.forEach((function (e) { 0 == r.length ? r += e : r += ", " + e })); var i = { userIds: r }; n.client._sendMessage(c.CHAT_GET_USERS_INFO, i, (function (e) { if (t) { var r = e.r, i = 0 == r, o = i ? "Success" : "Fail.", a = e.users, s = []; return a.forEach((function (e) { var t = new StringeeUser(e); t.userId = e.userId, s.push(t) })), void t.call(n.client, i, r, o, s) } })) } else t.call(n.client, !1, -1, "StringeeClient is not connected to Stringee server", null); else t.call(n.client, !1, -2, "UserIds are invalid.", null) } }, { key: "sendEmailTranscript", value: function (e, t) { var n = this, r = { convId: e.convId, email: e.email, domain: e.domain }; n.client._sendMessage(c.SEND_EMAIL_TRANSCRIPT, r, (function (e) { t && t.call(n.client, e) })) } }, { key: "getChatServices", value: function (e) { var t = this; t.client._sendMessage(c.GET_CHAT_SERVICES, {}, (function (n) { e && e.call(t.client, n) })) } }, { key: "viewChat", value: function (e, t) { var n = this, r = { convId: e }; n.client._sendMessage(c.VIEW_CHAT, r, (function (e) { t && t.call(n.client, e) })) } }, { key: "joinChat", value: function (e, t) { var n = this, r = { convId: e }; n.client._sendMessage(c.JOIN_CHAT_CUSTOMER_CARE, r, (function (e) { t && t.call(n.client, e) })) } }, { key: "transferChat", value: function (e, t, n) { var r = this, i = { convId: e, customerId: t.customerId, customerName: t.customerName, toUserId: t.toUserId }; r.client._sendMessage(c.CHAT_TRANSFER_TO_ANOTHER_AGENT, i, (function (e) { n && n.call(r.client, e) })) } }, { key: "confirmTransferChat", value: function (e, t) { var n = this, r = { convId: e, answer: 1 }; n.client._sendMessage(c.CHAT_CONFIRM_TRANSFER_REQUEST, r, (function (e) { t && t.call(n.client, e) })) } }, { key: "pinMessage", value: function (e, t, n, r) { var i = this; if (i.isString(e) && i.isString(t) && "" !== e && "" !== t && null != n) if (i.client.userId && i.client.hasConnected) { var o = { convId: e, msgId: t, isPin: n }; i.client._sendMessage(c.CHAT_PIN_MESSAGE, o, (function (e) { if (r) { var t = e.r, n = 0 == t, o = e.message; r.call(i.client, n, t, o) } })) } else r.call(i.client, !1, -1, "StringeeClient is not connected to Stringee server"); else r.call(i.client, !1, -2, "Params are invalid") } }, { key: "editMessage", value: function (e, t, n, r) { var i = this; if (i.isString(e) && i.isString(t) && i.isString(n) && "" !== e && "" !== t && "" !== n) if (i.client.userId && i.client.hasConnected) { var o = { content: n }, a = { convId: e, msgId: t, newContent: JSON.stringify(o) }; i.client._sendMessage(c.CHAT_EDIT_MESSAGE, a, (function (e) { if (r) { var t = e.r, n = 0 == t, o = e.message; r.call(i.client, n, t, o) } })) } else r.call(i.client, !1, -1, "StringeeClient is not connected to Stringee server"); else r.call(i.client, !1, -2, "Params are invalid") } }, { key: "revokeMessage", value: function (e, t, n) { var r = this; if (r.isString(e) && r.isString(t) && "" !== e && "" !== t) if (r.client.userId && r.client.hasConnected) { var i = { convId: e, msgIds: [t] }; r.client._sendMessage(c.CHAT_REVOKE_MESSAGE, i, (function (e) { if (n) { var t = e.r, i = 0 == t, o = e.message; n.call(r.client, i, t, o) } })) } else n.call(r.client, !1, -1, "StringeeClient is not connected to Stringee server"); else n.call(r.client, !1, -2, "Params are invalid") } }, { key: "userBeginTyping", value: function (e, t) { var n = this, r = { userId: e.userId, convId: e.convId }; n.client._sendMessage(c.CHAT_USER_BEGIN_TYPING, r, (function (e) { t && t.call(n.client, e) })) } }, { key: "userEndTyping", value: function (e, t) { var n = this, r = { userId: e.userId, convId: e.convId }; n.client._sendMessage(c.CHAT_USER_END_TYPING, r, (function (e) { t && t.call(n.client, e) })) } }, { key: "getAttachmentMessages", value: function (e, t, n, r, i) { var o = this; if (o.isString(e) && "" !== e && null != t && 0 !== t && null != r && 0 !== r) if (o.client.userId && o.client.hasConnected) { var a = { convId: e, msgType: t, limit: r, start: n }; o.client._sendMessage(c.CHAT_CONVERSATION_ATTACHMENT, a, (function (e) { if (i) { console.log("getting response from server CHAT_CONVERSATION_ATTACHMENT", e); var t = e.r, n = 0 == t, r = e.message, a = n ? e.msgs : null; i.call(o.client, n, t, r, a) } })) } else i.call(o.client, !1, -1, "StringeeClient is not connected to Stringee server", null); else i.call(o.client, !1, -2, "Params are invalid", null) } }, { key: "on", value: function (e, t) { this._onMethods.put(e, t) } }, { key: "_callOnEvent", value: function (e, t) { var n = this._onMethods.get(e); n ? t ? n.call(this, t) : n.call(this) : console.log("Please implement StringeeChat event: " + e) } }, { key: "fireObjectChangeEvent", value: function (e, t, n) { this._callOnEvent(this.realTimeEvent, { objectType: e, objectChanges: t, changeType: n }) } }, { key: "trackMsg", value: function (e) { if (e.state !== We) { var t = this.keyForMsg(e); this.trackingMap.put(t, e) } } }, { key: "keyForMsg", value: function (e) { var t = null != e.conversationId && e.conversationId.length > 0 ? e.conversationId : "", n = null != e.id && e.id.length > 0 ? e.id : "", r = null != e.localId && e.localId.length > 0 ? e.localId : ""; return t + "_" + (r.length > 0 ? r : n) } }, { key: "isString", value: function (e) { var t = Xe(e); return "string" === t || "object" === t && null != e && !Array.isArray(e) && "[object String]" == getTag(e) } }]) && tt(t.prototype, n), r && tt(t, r), e }(); function rt(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var it = function () { function e(t) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), this.client = t } var t, n, r; return t = e, (n = [{ key: "createConversation", value: function (e, t) { this.created ? console.log("Could not create conversation, conversation is created") : this.client._sendMessage(c.CHAT_CREATE_CONVERSATION, e, (function (e) { t && t.call(this.client, e) })) } }, { key: "sendChatMessage", value: function (e, t) { var n = { message: e.message, type: e.type, convId: e.convId }; this.client._sendMessage(c.CHAT_MESSAGE, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "loadChatMessages", value: function (e, t) { var n = { seqGreater: e.seqGreater, limit: e.limit, sort: e.sort, convId: e.convId }; this.client._sendMessage(c.CHAT_MESSAGES_LOAD, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "loadAllChatMessages", value: function (e, t) { var n = this, r = e.createdGreater, i = e.createdSmaller, o = e.limit, a = e.sort, s = e.convIds; if (Array.isArray(s)) { var l = { createdGreater: r, createdSmaller: i, sort: a, limit: o, convIds: s = s.join(",") }; return new Promise((function (e, r) { n.client._sendMessage(c.CHAT_LOAD_ALL_MESSAGES_FOR_CONVERSATIONS, l, (function (r) { console.log("got data from server, ", r), t && (console.log("got a valid callback"), t.call(n.client, r)), e(r) })) })) } console.log("must be an array") } }, { key: "addParticipant", value: function (e, t) { var n = { convId: e.convId, userIds: e.userIds }; this.client._sendMessage(c.CHAT_ADD_PARTICIPANT, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "removeParticipant", value: function (e, t) { var n = { convId: e.convId, userIds: e.userIds }; this.client._sendMessage(c.CHAT_REMOVE_PARTICIPANT, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "deleteMessage", value: function (e, t) { var n = { convId: e.convId, messageIds: e.messageIds }; this.client._sendMessage(c.CHAT_DELETE_MESSAGE, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "updateConversation", value: function (e, t) { var n = { convId: e.convId, groupName: e.name, imageUrl: e.imageUrl }; this.client._sendMessage(c.CHAT_UPDATE_CONVERSATION, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "deleteConversation", value: function (e, t) { var n = { seq: e.seq, convId: e.convId }; this.client._sendMessage(c.CHAT_DELETE_CONVERSATION, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "clearHistory", value: function (e, t) { var n = { seq: e.seq, convId: e.convId }; this.client._sendMessage(c.CHAT_CONVERSATION_CLEAR_HISTORY, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "loadConversations", value: function (e, t) { var n = { lastUpdateGreater: e.lastUpdateGreater, lastUpdateSmaller: e.lastUpdateSmaller, limit: e.limit }; this.client._sendMessage(c.CHAT_CONVERSATION_LOAD, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "getInfo", value: function (e, t) { var n = { convIds: e }; this.client._sendMessage(c.CHAT_GET_CONVERSATIONS_INFO, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "markMessageReceived", value: function (e, t) { var n = { lastMsgSeq: e.seq, lastMsgTimestamp: e.createdTime, status: 1, convId: e.convId }; this.client._sendMessage(c.CHAT_MESSAGE_REPORT, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "markMessageSeen", value: function (e, t) { var n = { lastMsgSeq: e.seq, lastMsgTimestamp: e.createdTime, status: 2, convId: e.convId }; this.client._sendMessage(c.CHAT_MESSAGE_REPORT, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "blockUser", value: function (e, t) { var n = { userId: e }; this.client._sendMessage(c.CHAT_BLOCK_USER, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "blockInviteToGroup", value: function (e, t) { var n = { block_group_invite: e }; this.client._sendMessage(c.CHAT_BLOCK_USER, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "rateChat", value: function (e, t, n, r) { var i = { convId: e, rating: t, comment: n }; this.client._sendMessage(c.RATE_CHAT, i, (function (e) { r && r.call(this.client, e) })) } }, { key: "updateUserInfo", value: function (e, t, n, r) { var i = { display_name: e, avatar_url: t, email: n }; this.client._sendMessage(c.UPDATE_USER_INFO, i, (function (e) { r && r.call(this.client, e) })) } }, { key: "userBeginTyping", value: function (e, t) { var n = { userId: e.userId, convId: e.convId }; this.client._sendMessage(c.CHAT_USER_BEGIN_TYPING, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "userEndTyping", value: function (e, t) { var n = { userId: e.userId, convId: e.convId }; this.client._sendMessage(c.CHAT_USER_END_TYPING, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "updateUserInfo", value: function (e, t) { this.client._sendMessage(c.UPDATE_USER_INFO, e, (function (e) { t && t.call(this.client, e) })) } }, { key: "getUsersInfo", value: function (e, t) { var n = { userIds: e }; this.client._sendMessage(c.CHAT_GET_USERS_INFO, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "sendEmailTranscript", value: function (e, t) { var n = { convId: e.convId, email: e.email, domain: e.domain }; this.client._sendMessage(c.SEND_EMAIL_TRANSCRIPT, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "getChatServices", value: function (e) { this.client._sendMessage(c.GET_CHAT_SERVICES, {}, (function (t) { e && e.call(this.client, t) })) } }, { key: "viewChat", value: function (e, t) { var n = { convId: e }; this.client._sendMessage(c.VIEW_CHAT, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "joinChat", value: function (e, t) { var n = { convId: e }; this.client._sendMessage(c.JOIN_CHAT_CUSTOMER_CARE, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "transferChat", value: function (e, t) { var n = { convId: e.conversationId, customerId: e.customerId, customerName: e.customerName, toUserId: e.toUserId }; this.client._sendMessage(c.CHAT_TRANSFER_TO_ANOTHER_AGENT, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "confirmTransferChat", value: function (e, t) { var n = { convId: e.convId, answer: e.answer }; console.log("+++ confirmTransferChat", n), this.client._sendMessage(c.CHAT_CONFIRM_TRANSFER_REQUEST, n, (function (e) { t && t.call(this.client, e) })) } }, { key: "unreadConversationCount", value: function (e) { this.client._sendMessage(c.CHAT_UNREAD_CONVERSATION_COUNT, {}, (function (t) { e && e.call(this.client, t) })) } }, { key: "resolveConversation", value: function (e, t) { var n = { convId: e.convId, resolved: e.resolved }; console.log("+++ resolveConversation", n), this.client._sendMessage(c.CHAT_AGENT_RESOLVE_CONVERSATION, n, (function (e) { t && t.call(this.client, e) })) } }]) && rt(t.prototype, n), r && rt(t, r), e }(); function ot(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var at = function () { function e() { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e) } var t, n, r; return t = e, r = [{ key: "isWebRTCSupported", value: function () { return !(!navigator || "undefined" == typeof navigator || !navigator.mediaDevices || void 0 === navigator.mediaDevices || !navigator.mediaDevices.getUserMedia || void 0 === navigator.mediaDevices.getUserMedia) } }, { key: "getActiveClientId", value: function () { return localStorage.getItem("active_client_id") } }], (n = null) && ot(t.prototype, n), r && ot(t, r), e }(); function st(e, t) { for (var n = 0; n < t.length; n++) { var r = t[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r) } } var ct = function () { function e(t) { !function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") }(this, e), this.stringeeClient = t, this.roomId = null, this.tracks = new l, this.mapServerIdTracks = new l, this.onMethods = new l } var t, n, r; return t = e, (n = [{ key: "publish", value: function (e) { var t = this; return new Promise((function (n, r) { if (e.isLocal) { var i = { roomId: t.roomId, localPcId: e.webrtc.localId, audio: !!e.constraints.audio, video: !!e.constraints.video, screen: !!e.constraints.screen }; t.stringeeClient._sendMessage(c.VIDEO_PUBLISH_TRACK, i, (function (i) { 0 == i.r ? (e.serverId = i.serverTrackId, e.webrtc.serverId = i.serverPcId, t.tracks.put(e.localId, e), t.mapServerIdTracks.put(e.serverId, e), e.roomConnected = t, n(), e.processSendSdpCandidate()) : r(i) })) } else r("Could not publish remote track") })) } }, { key: "unpublish", value: function (e) { if (e.isLocal) { var t = { roomId: e.roomConnected.roomId, serverTrackId: e.serverId }; this.stringeeClient._sendMessage(c.VIDEO_UNPUBLISH_TRACK, t, (function (e) { 0 == e.r && console.info("VIDEO_UNPUBLISH_TRACK", e) })) } else console.info("Could not unpublish remote track") } }, { key: "subscribe", value: function (e, t) { var n = this; return t || (t = { audio: !0, video: !0, screen: !1 }), new Promise((function (r, i) { var o = n.mapServerIdTracks.get(e); if (o) r(o); else { var a = Ie.genLocalPeerConnectionId(), s = { roomId: n.roomId, localPcId: a, subscribeTrackId: e }; n.stringeeClient._sendMessage(c.VIDEO_SUBSCRIBE_TRACK, s, (function (o) { if (0 == o.r) { o.trackAudioEnable || (t.audio = !1), o.trackVideoEnable || (t.video = !1), o.trackScreenSharing && (t.audio = !1, t.video = !0); var s = new ye(n.stringeeClient, t); s.serverId = e, s.isLocal = !1, s.roomConnected = n, s.localId = a, s.webrtc.localId = a, s.webrtc.serverId = o.serverPcId, s.audio = o.trackAudioEnable && t.audio, s.video = o.trackVideoEnable && t.video, s.screen = o.trackScreenSharing && t.video, n.tracks.put(s.localId, s), n.mapServerIdTracks.put(s.serverId, s), r(s), s.init(), s.processSendSdpCandidate() } else i(o) })) } })) } }, { key: "unsubscribe", value: function (e) { var t = this, n = { roomId: t.roomId, serverTrackId: e.serverId, serverPcId: e.webrtc.serverId }; t.stringeeClient._sendMessage(c.VIDEO_UNSUBSCRIBE_TRACK, n, (function (n) { 0 == n.r && (console.log("unsubscribe serverTrackId OK: " + e.serverId), e.close(), t.tracks.remove(e.localId), t.mapServerIdTracks.remove(e.serverId)) })) } }, { key: "leave", value: function (e) { var t = this; return t.tracks.forEach((function (e) { e.value.close(), t.tracks.remove(e.localId), t.mapServerIdTracks.remove(e.serverId) })), new Promise((function (n, r) { var i = { roomId: t.roomId, allStringeeClient: e }; t.stringeeClient._sendMessage(c.VIDEO_LEFT_ROOM, i, (function (e) { Ie.rooms.remove(t.roomId), 0 == e.r ? n() : r(e) })) })) } }, { key: "sendMessage", value: function (e) { var t = this; return new Promise((function (n, r) { var i = { roomId: t.roomId, msg: e }; t.stringeeClient._sendMessage(c.VIDEO_ROOM_SEND_MSG, i, (function (e) { 0 == e.r ? n() : r(e) })) })) } }, { key: "onReceiveSdp1", value: function (e, t, n) { var r = this.tracks.get(e); r ? r.onSdpFromServer(n) : console.log("StringeeVideoRoom onReceiveSdp1: Could not found localTrackId=" + e) } }, { key: "onReceiveCandidate1", value: function (e, t, n) { var r = this.tracks.get(e); r ? r.onCandidateFromServer(n) : console.log("StringeeVideoRoom onReceiveCandidate1: Could not found localTrackId=" + e) } }, { key: "clearAllOnMethos", value: function () { this.onMethods.clear() } }, { key: "on", value: function (e, t) { var n = this.onMethods.get(e); n || (n = new Array, this.onMethods.put(e, n)), n.push(t) } }, { key: "callOnEvent", value: function (e, t) { var n = this, r = this.onMethods.get(e); r ? r.forEach((function (e) { t ? e.call(n, t) : e.call(n) })) : console.log("Please implement StringeeVideoRoom event: " + e) } }, { key: "onTrackAdded", value: function (e) { var t = { info: e }; this.callOnEvent("addtrack", t) } }, { key: "onTrackRemoved", value: function (e) { var t = this.mapServerIdTracks.get(e.track.serverId), n = { info: e }; t && (n.track = t, t.close()), this.callOnEvent("removetrack", n) } }, { key: "onRoomJoined", value: function (e) { var t = { info: e }; this.callOnEvent("joinroom", t) } }, { key: "onRoomLeft", value: function (e) { var t = { info: e }; this.callOnEvent("leaveroom", t) } }, { key: "onRoomMsg", value: function (e) { var t = { info: e }; this.callOnEvent("message", t) } }]) && st(t.prototype, n), r && st(t, r), e }(); window.StringeeCall = Se, window.StringeeChat = nt, window.StringeeHashMap = l, window.DeprecatedStringeeChat = it, window.StringeeClient = Fe, window.StringeeUtil = at, window.StringeeServiceType = c, window.StringeeWebRtc = _e, window.StringeeVideo = Ie, window.StringeeVideoRoom = ct, window.StringeeVideoTrack = ye }]);
/*! jQuery v3.1.0 | (c) jQuery Foundation | jquery.org/license */
!function (a, b) { "use strict"; "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function (a) { if (!a.document) throw new Error("jQuery requires a window with a document"); return b(a) } : b(a) }("undefined" != typeof window ? window : this, function (a, b) {
    "use strict"; var c = [], d = a.document, e = Object.getPrototypeOf, f = c.slice, g = c.concat, h = c.push, i = c.indexOf, j = {}, k = j.toString, l = j.hasOwnProperty, m = l.toString, n = m.call(Object), o = {}; function p(a, b) { b = b || d; var c = b.createElement("script"); c.text = a, b.head.appendChild(c).parentNode.removeChild(c) } var q = "3.1.0", r = function (a, b) { return new r.fn.init(a, b) }, s = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, t = /^-ms-/, u = /-([a-z])/g, v = function (a, b) { return b.toUpperCase() }; r.fn = r.prototype = { jquery: q, constructor: r, length: 0, toArray: function () { return f.call(this) }, get: function (a) { return null != a ? a < 0 ? this[a + this.length] : this[a] : f.call(this) }, pushStack: function (a) { var b = r.merge(this.constructor(), a); return b.prevObject = this, b }, each: function (a) { return r.each(this, a) }, map: function (a) { return this.pushStack(r.map(this, function (b, c) { return a.call(b, c, b) })) }, slice: function () { return this.pushStack(f.apply(this, arguments)) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, eq: function (a) { var b = this.length, c = +a + (a < 0 ? b : 0); return this.pushStack(c >= 0 && c < b ? [this[c]] : []) }, end: function () { return this.prevObject || this.constructor() }, push: h, sort: c.sort, splice: c.splice }, r.extend = r.fn.extend = function () { var a, b, c, d, e, f, g = arguments[0] || {}, h = 1, i = arguments.length, j = !1; for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || r.isFunction(g) || (g = {}), h === i && (g = this, h--); h < i; h++)if (null != (a = arguments[h])) for (b in a) c = g[b], d = a[b], g !== d && (j && d && (r.isPlainObject(d) || (e = r.isArray(d))) ? (e ? (e = !1, f = c && r.isArray(c) ? c : []) : f = c && r.isPlainObject(c) ? c : {}, g[b] = r.extend(j, f, d)) : void 0 !== d && (g[b] = d)); return g }, r.extend({ expando: "jQuery" + (q + Math.random()).replace(/\D/g, ""), isReady: !0, error: function (a) { throw new Error(a) }, noop: function () { }, isFunction: function (a) { return "function" === r.type(a) }, isArray: Array.isArray, isWindow: function (a) { return null != a && a === a.window }, isNumeric: function (a) { var b = r.type(a); return ("number" === b || "string" === b) && !isNaN(a - parseFloat(a)) }, isPlainObject: function (a) { var b, c; return !(!a || "[object Object]" !== k.call(a)) && (!(b = e(a)) || (c = l.call(b, "constructor") && b.constructor, "function" == typeof c && m.call(c) === n)) }, isEmptyObject: function (a) { var b; for (b in a) return !1; return !0 }, type: function (a) { return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? j[k.call(a)] || "object" : typeof a }, globalEval: function (a) { p(a) }, camelCase: function (a) { return a.replace(t, "ms-").replace(u, v) }, nodeName: function (a, b) { return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase() }, each: function (a, b) { var c, d = 0; if (w(a)) { for (c = a.length; d < c; d++)if (b.call(a[d], d, a[d]) === !1) break } else for (d in a) if (b.call(a[d], d, a[d]) === !1) break; return a }, trim: function (a) { return null == a ? "" : (a + "").replace(s, "") }, makeArray: function (a, b) { var c = b || []; return null != a && (w(Object(a)) ? r.merge(c, "string" == typeof a ? [a] : a) : h.call(c, a)), c }, inArray: function (a, b, c) { return null == b ? -1 : i.call(b, a, c) }, merge: function (a, b) { for (var c = +b.length, d = 0, e = a.length; d < c; d++)a[e++] = b[d]; return a.length = e, a }, grep: function (a, b, c) { for (var d, e = [], f = 0, g = a.length, h = !c; f < g; f++)d = !b(a[f], f), d !== h && e.push(a[f]); return e }, map: function (a, b, c) { var d, e, f = 0, h = []; if (w(a)) for (d = a.length; f < d; f++)e = b(a[f], f, c), null != e && h.push(e); else for (f in a) e = b(a[f], f, c), null != e && h.push(e); return g.apply([], h) }, guid: 1, proxy: function (a, b) { var c, d, e; if ("string" == typeof b && (c = a[b], b = a, a = c), r.isFunction(a)) return d = f.call(arguments, 2), e = function () { return a.apply(b || this, d.concat(f.call(arguments))) }, e.guid = a.guid = a.guid || r.guid++, e }, now: Date.now, support: o }), "function" == typeof Symbol && (r.fn[Symbol.iterator] = c[Symbol.iterator]), r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function (a, b) { j["[object " + b + "]"] = b.toLowerCase() }); function w(a) { var b = !!a && "length" in a && a.length, c = r.type(a); return "function" !== c && !r.isWindow(a) && ("array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a) } var x = function (a) { var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * new Date, v = a.document, w = 0, x = 0, y = ha(), z = ha(), A = ha(), B = function (a, b) { return a === b && (l = !0), 0 }, C = {}.hasOwnProperty, D = [], E = D.pop, F = D.push, G = D.push, H = D.slice, I = function (a, b) { for (var c = 0, d = a.length; c < d; c++)if (a[c] === b) return c; return -1 }, J = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", K = "[\\x20\\t\\r\\n\\f]", L = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", M = "\\[" + K + "*(" + L + ")(?:" + K + "*([*^$|!~]?=)" + K + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + L + "))|)" + K + "*\\]", N = ":(" + L + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + M + ")*)|.*)\\)|)", O = new RegExp(K + "+", "g"), P = new RegExp("^" + K + "+|((?:^|[^\\\\])(?:\\\\.)*)" + K + "+$", "g"), Q = new RegExp("^" + K + "*," + K + "*"), R = new RegExp("^" + K + "*([>+~]|" + K + ")" + K + "*"), S = new RegExp("=" + K + "*([^\\]'\"]*?)" + K + "*\\]", "g"), T = new RegExp(N), U = new RegExp("^" + L + "$"), V = { ID: new RegExp("^#(" + L + ")"), CLASS: new RegExp("^\\.(" + L + ")"), TAG: new RegExp("^(" + L + "|[*])"), ATTR: new RegExp("^" + M), PSEUDO: new RegExp("^" + N), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + K + "*(even|odd|(([+-]|)(\\d*)n|)" + K + "*(?:([+-]|)" + K + "*(\\d+)|))" + K + "*\\)|)", "i"), bool: new RegExp("^(?:" + J + ")$", "i"), needsContext: new RegExp("^" + K + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + K + "*((?:-\\d)?\\d*)" + K + "*\\)|)(?=[^-]|$)", "i") }, W = /^(?:input|select|textarea|button)$/i, X = /^h\d$/i, Y = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, $ = /[+~]/, _ = new RegExp("\\\\([\\da-f]{1,6}" + K + "?|(" + K + ")|.)", "ig"), aa = function (a, b, c) { var d = "0x" + b - 65536; return d !== d || c ? b : d < 0 ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320) }, ba = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g, ca = function (a, b) { return b ? "\0" === a ? "\ufffd" : a.slice(0, -1) + "\\" + a.charCodeAt(a.length - 1).toString(16) + " " : "\\" + a }, da = function () { m() }, ea = ta(function (a) { return a.disabled === !0 }, { dir: "parentNode", next: "legend" }); try { G.apply(D = H.call(v.childNodes), v.childNodes), D[v.childNodes.length].nodeType } catch (fa) { G = { apply: D.length ? function (a, b) { F.apply(a, H.call(b)) } : function (a, b) { var c = a.length, d = 0; while (a[c++] = b[d++]); a.length = c - 1 } } } function ga(a, b, d, e) { var f, h, j, k, l, o, r, s = b && b.ownerDocument, w = b ? b.nodeType : 9; if (d = d || [], "string" != typeof a || !a || 1 !== w && 9 !== w && 11 !== w) return d; if (!e && ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, p)) { if (11 !== w && (l = Z.exec(a))) if (f = l[1]) { if (9 === w) { if (!(j = b.getElementById(f))) return d; if (j.id === f) return d.push(j), d } else if (s && (j = s.getElementById(f)) && t(b, j) && j.id === f) return d.push(j), d } else { if (l[2]) return G.apply(d, b.getElementsByTagName(a)), d; if ((f = l[3]) && c.getElementsByClassName && b.getElementsByClassName) return G.apply(d, b.getElementsByClassName(f)), d } if (c.qsa && !A[a + " "] && (!q || !q.test(a))) { if (1 !== w) s = b, r = a; else if ("object" !== b.nodeName.toLowerCase()) { (k = b.getAttribute("id")) ? k = k.replace(ba, ca) : b.setAttribute("id", k = u), o = g(a), h = o.length; while (h--) o[h] = "#" + k + " " + sa(o[h]); r = o.join(","), s = $.test(a) && qa(b.parentNode) || b } if (r) try { return G.apply(d, s.querySelectorAll(r)), d } catch (x) { } finally { k === u && b.removeAttribute("id") } } } return i(a.replace(P, "$1"), b, d, e) } function ha() { var a = []; function b(c, e) { return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e } return b } function ia(a) { return a[u] = !0, a } function ja(a) { var b = n.createElement("fieldset"); try { return !!a(b) } catch (c) { return !1 } finally { b.parentNode && b.parentNode.removeChild(b), b = null } } function ka(a, b) { var c = a.split("|"), e = c.length; while (e--) d.attrHandle[c[e]] = b } function la(a, b) { var c = b && a, d = c && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex; if (d) return d; if (c) while (c = c.nextSibling) if (c === b) return -1; return a ? 1 : -1 } function ma(a) { return function (b) { var c = b.nodeName.toLowerCase(); return "input" === c && b.type === a } } function na(a) { return function (b) { var c = b.nodeName.toLowerCase(); return ("input" === c || "button" === c) && b.type === a } } function oa(a) { return function (b) { return "label" in b && b.disabled === a || "form" in b && b.disabled === a || "form" in b && b.disabled === !1 && (b.isDisabled === a || b.isDisabled !== !a && ("label" in b || !ea(b)) !== a) } } function pa(a) { return ia(function (b) { return b = +b, ia(function (c, d) { var e, f = a([], c.length, b), g = f.length; while (g--) c[e = f[g]] && (c[e] = !(d[e] = c[e])) }) }) } function qa(a) { return a && "undefined" != typeof a.getElementsByTagName && a } c = ga.support = {}, f = ga.isXML = function (a) { var b = a && (a.ownerDocument || a).documentElement; return !!b && "HTML" !== b.nodeName }, m = ga.setDocument = function (a) { var b, e, g = a ? a.ownerDocument || a : v; return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = n.documentElement, p = !f(n), v !== n && (e = n.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", da, !1) : e.attachEvent && e.attachEvent("onunload", da)), c.attributes = ja(function (a) { return a.className = "i", !a.getAttribute("className") }), c.getElementsByTagName = ja(function (a) { return a.appendChild(n.createComment("")), !a.getElementsByTagName("*").length }), c.getElementsByClassName = Y.test(n.getElementsByClassName), c.getById = ja(function (a) { return o.appendChild(a).id = u, !n.getElementsByName || !n.getElementsByName(u).length }), c.getById ? (d.find.ID = function (a, b) { if ("undefined" != typeof b.getElementById && p) { var c = b.getElementById(a); return c ? [c] : [] } }, d.filter.ID = function (a) { var b = a.replace(_, aa); return function (a) { return a.getAttribute("id") === b } }) : (delete d.find.ID, d.filter.ID = function (a) { var b = a.replace(_, aa); return function (a) { var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id"); return c && c.value === b } }), d.find.TAG = c.getElementsByTagName ? function (a, b) { return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0 } : function (a, b) { var c, d = [], e = 0, f = b.getElementsByTagName(a); if ("*" === a) { while (c = f[e++]) 1 === c.nodeType && d.push(c); return d } return f }, d.find.CLASS = c.getElementsByClassName && function (a, b) { if ("undefined" != typeof b.getElementsByClassName && p) return b.getElementsByClassName(a) }, r = [], q = [], (c.qsa = Y.test(n.querySelectorAll)) && (ja(function (a) { o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\r\\' msallowcapture=''><option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + K + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + K + "*(?:value|" + J + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]") }), ja(function (a) { a.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>"; var b = n.createElement("input"); b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + K + "*[*^$|!~]?="), 2 !== a.querySelectorAll(":enabled").length && q.push(":enabled", ":disabled"), o.appendChild(a).disabled = !0, 2 !== a.querySelectorAll(":disabled").length && q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:") })), (c.matchesSelector = Y.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja(function (a) { c.disconnectedMatch = s.call(a, "*"), s.call(a, "[s!='']:x"), r.push("!=", N) }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = Y.test(o.compareDocumentPosition), t = b || Y.test(o.contains) ? function (a, b) { var c = 9 === a.nodeType ? a.documentElement : a, d = b && b.parentNode; return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d))) } : function (a, b) { if (b) while (b = b.parentNode) if (b === a) return !0; return !1 }, B = b ? function (a, b) { if (a === b) return l = !0, 0; var d = !a.compareDocumentPosition - !b.compareDocumentPosition; return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === n || a.ownerDocument === v && t(v, a) ? -1 : b === n || b.ownerDocument === v && t(v, b) ? 1 : k ? I(k, a) - I(k, b) : 0 : 4 & d ? -1 : 1) } : function (a, b) { if (a === b) return l = !0, 0; var c, d = 0, e = a.parentNode, f = b.parentNode, g = [a], h = [b]; if (!e || !f) return a === n ? -1 : b === n ? 1 : e ? -1 : f ? 1 : k ? I(k, a) - I(k, b) : 0; if (e === f) return la(a, b); c = a; while (c = c.parentNode) g.unshift(c); c = b; while (c = c.parentNode) h.unshift(c); while (g[d] === h[d]) d++; return d ? la(g[d], h[d]) : g[d] === v ? -1 : h[d] === v ? 1 : 0 }, n) : n }, ga.matches = function (a, b) { return ga(a, null, null, b) }, ga.matchesSelector = function (a, b) { if ((a.ownerDocument || a) !== n && m(a), b = b.replace(S, "='$1']"), c.matchesSelector && p && !A[b + " "] && (!r || !r.test(b)) && (!q || !q.test(b))) try { var d = s.call(a, b); if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d } catch (e) { } return ga(b, n, null, [a]).length > 0 }, ga.contains = function (a, b) { return (a.ownerDocument || a) !== n && m(a), t(a, b) }, ga.attr = function (a, b) { (a.ownerDocument || a) !== n && m(a); var e = d.attrHandle[b.toLowerCase()], f = e && C.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0; return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null }, ga.escape = function (a) { return (a + "").replace(ba, ca) }, ga.error = function (a) { throw new Error("Syntax error, unrecognized expression: " + a) }, ga.uniqueSort = function (a) { var b, d = [], e = 0, f = 0; if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) { while (b = a[f++]) b === a[f] && (e = d.push(f)); while (e--) a.splice(d[e], 1) } return k = null, a }, e = ga.getText = function (a) { var b, c = "", d = 0, f = a.nodeType; if (f) { if (1 === f || 9 === f || 11 === f) { if ("string" == typeof a.textContent) return a.textContent; for (a = a.firstChild; a; a = a.nextSibling)c += e(a) } else if (3 === f || 4 === f) return a.nodeValue } else while (b = a[d++]) c += e(b); return c }, d = ga.selectors = { cacheLength: 50, createPseudo: ia, match: V, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: !0 }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: !0 }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function (a) { return a[1] = a[1].replace(_, aa), a[3] = (a[3] || a[4] || a[5] || "").replace(_, aa), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4) }, CHILD: function (a) { return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || ga.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && ga.error(a[0]), a }, PSEUDO: function (a) { var b, c = !a[6] && a[2]; return V.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && T.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3)) } }, filter: { TAG: function (a) { var b = a.replace(_, aa).toLowerCase(); return "*" === a ? function () { return !0 } : function (a) { return a.nodeName && a.nodeName.toLowerCase() === b } }, CLASS: function (a) { var b = y[a + " "]; return b || (b = new RegExp("(^|" + K + ")" + a + "(" + K + "|$)")) && y(a, function (a) { return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "") }) }, ATTR: function (a, b, c) { return function (d) { var e = ga.attr(d, a); return null == e ? "!=" === b : !b || (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(O, " ") + " ").indexOf(c) > -1 : "|=" === b && (e === c || e.slice(0, c.length + 1) === c + "-")) } }, CHILD: function (a, b, c, d, e) { var f = "nth" !== a.slice(0, 3), g = "last" !== a.slice(-4), h = "of-type" === b; return 1 === d && 0 === e ? function (a) { return !!a.parentNode } : function (b, c, i) { var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling", q = b.parentNode, r = h && b.nodeName.toLowerCase(), s = !i && !h, t = !1; if (q) { if (f) { while (p) { m = b; while (m = m[p]) if (h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) return !1; o = p = "only" === a && !o && "nextSibling" } return !0 } if (o = [g ? q.firstChild : q.lastChild], g && s) { m = q, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n && j[2], m = n && q.childNodes[n]; while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if (1 === m.nodeType && ++t && m === b) { k[a] = [w, n, t]; break } } else if (s && (m = b, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], n = j[0] === w && j[1], t = n), t === !1) while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if ((h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) && ++t && (s && (l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), k[a] = [w, t]), m === b)) break; return t -= e, t === d || t % d === 0 && t / d >= 0 } } }, PSEUDO: function (a, b) { var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error("unsupported pseudo: " + a); return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia(function (a, c) { var d, f = e(a, b), g = f.length; while (g--) d = I(a, f[g]), a[d] = !(c[d] = f[g]) }) : function (a) { return e(a, 0, c) }) : e } }, pseudos: { not: ia(function (a) { var b = [], c = [], d = h(a.replace(P, "$1")); return d[u] ? ia(function (a, b, c, e) { var f, g = d(a, null, e, []), h = a.length; while (h--) (f = g[h]) && (a[h] = !(b[h] = f)) }) : function (a, e, f) { return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop() } }), has: ia(function (a) { return function (b) { return ga(a, b).length > 0 } }), contains: ia(function (a) { return a = a.replace(_, aa), function (b) { return (b.textContent || b.innerText || e(b)).indexOf(a) > -1 } }), lang: ia(function (a) { return U.test(a || "") || ga.error("unsupported lang: " + a), a = a.replace(_, aa).toLowerCase(), function (b) { var c; do if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-"); while ((b = b.parentNode) && 1 === b.nodeType); return !1 } }), target: function (b) { var c = a.location && a.location.hash; return c && c.slice(1) === b.id }, root: function (a) { return a === o }, focus: function (a) { return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex) }, enabled: oa(!1), disabled: oa(!0), checked: function (a) { var b = a.nodeName.toLowerCase(); return "input" === b && !!a.checked || "option" === b && !!a.selected }, selected: function (a) { return a.parentNode && a.parentNode.selectedIndex, a.selected === !0 }, empty: function (a) { for (a = a.firstChild; a; a = a.nextSibling)if (a.nodeType < 6) return !1; return !0 }, parent: function (a) { return !d.pseudos.empty(a) }, header: function (a) { return X.test(a.nodeName) }, input: function (a) { return W.test(a.nodeName) }, button: function (a) { var b = a.nodeName.toLowerCase(); return "input" === b && "button" === a.type || "button" === b }, text: function (a) { var b; return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase()) }, first: pa(function () { return [0] }), last: pa(function (a, b) { return [b - 1] }), eq: pa(function (a, b, c) { return [c < 0 ? c + b : c] }), even: pa(function (a, b) { for (var c = 0; c < b; c += 2)a.push(c); return a }), odd: pa(function (a, b) { for (var c = 1; c < b; c += 2)a.push(c); return a }), lt: pa(function (a, b, c) { for (var d = c < 0 ? c + b : c; --d >= 0;)a.push(d); return a }), gt: pa(function (a, b, c) { for (var d = c < 0 ? c + b : c; ++d < b;)a.push(d); return a }) } }, d.pseudos.nth = d.pseudos.eq; for (b in { radio: !0, checkbox: !0, file: !0, password: !0, image: !0 }) d.pseudos[b] = ma(b); for (b in { submit: !0, reset: !0 }) d.pseudos[b] = na(b); function ra() { } ra.prototype = d.filters = d.pseudos, d.setFilters = new ra, g = ga.tokenize = function (a, b) { var c, e, f, g, h, i, j, k = z[a + " "]; if (k) return b ? 0 : k.slice(0); h = a, i = [], j = d.preFilter; while (h) { c && !(e = Q.exec(h)) || (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = R.exec(h)) && (c = e.shift(), f.push({ value: c, type: e[0].replace(P, " ") }), h = h.slice(c.length)); for (g in d.filter) !(e = V[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({ value: c, type: g, matches: e }), h = h.slice(c.length)); if (!c) break } return b ? h.length : h ? ga.error(a) : z(a, i).slice(0) }; function sa(a) { for (var b = 0, c = a.length, d = ""; b < c; b++)d += a[b].value; return d } function ta(a, b, c) { var d = b.dir, e = b.next, f = e || d, g = c && "parentNode" === f, h = x++; return b.first ? function (b, c, e) { while (b = b[d]) if (1 === b.nodeType || g) return a(b, c, e) } : function (b, c, i) { var j, k, l, m = [w, h]; if (i) { while (b = b[d]) if ((1 === b.nodeType || g) && a(b, c, i)) return !0 } else while (b = b[d]) if (1 === b.nodeType || g) if (l = b[u] || (b[u] = {}), k = l[b.uniqueID] || (l[b.uniqueID] = {}), e && e === b.nodeName.toLowerCase()) b = b[d] || b; else { if ((j = k[f]) && j[0] === w && j[1] === h) return m[2] = j[2]; if (k[f] = m, m[2] = a(b, c, i)) return !0 } } } function ua(a) { return a.length > 1 ? function (b, c, d) { var e = a.length; while (e--) if (!a[e](b, c, d)) return !1; return !0 } : a[0] } function va(a, b, c) { for (var d = 0, e = b.length; d < e; d++)ga(a, b[d], c); return c } function wa(a, b, c, d, e) { for (var f, g = [], h = 0, i = a.length, j = null != b; h < i; h++)(f = a[h]) && (c && !c(f, d, e) || (g.push(f), j && b.push(h))); return g } function xa(a, b, c, d, e, f) { return d && !d[u] && (d = xa(d)), e && !e[u] && (e = xa(e, f)), ia(function (f, g, h, i) { var j, k, l, m = [], n = [], o = g.length, p = f || va(b || "*", h.nodeType ? [h] : h, []), q = !a || !f && b ? p : wa(p, m, a, h, i), r = c ? e || (f ? a : o || d) ? [] : g : q; if (c && c(q, r, h, i), d) { j = wa(r, n), d(j, [], h, i), k = j.length; while (k--) (l = j[k]) && (r[n[k]] = !(q[n[k]] = l)) } if (f) { if (e || a) { if (e) { j = [], k = r.length; while (k--) (l = r[k]) && j.push(q[k] = l); e(null, r = [], j, i) } k = r.length; while (k--) (l = r[k]) && (j = e ? I(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l)) } } else r = wa(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : G.apply(g, r) }) } function ya(a) { for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = ta(function (a) { return a === b }, h, !0), l = ta(function (a) { return I(b, a) > -1 }, h, !0), m = [function (a, c, d) { var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d)); return b = null, e }]; i < f; i++)if (c = d.relative[a[i].type]) m = [ta(ua(m), c)]; else { if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) { for (e = ++i; e < f; e++)if (d.relative[a[e].type]) break; return xa(i > 1 && ua(m), i > 1 && sa(a.slice(0, i - 1).concat({ value: " " === a[i - 2].type ? "*" : "" })).replace(P, "$1"), c, i < e && ya(a.slice(i, e)), e < f && ya(a = a.slice(e)), e < f && sa(a)) } m.push(c) } return ua(m) } function za(a, b) { var c = b.length > 0, e = a.length > 0, f = function (f, g, h, i, k) { var l, o, q, r = 0, s = "0", t = f && [], u = [], v = j, x = f || e && d.find.TAG("*", k), y = w += null == v ? 1 : Math.random() || .1, z = x.length; for (k && (j = g === n || g || k); s !== z && null != (l = x[s]); s++) { if (e && l) { o = 0, g || l.ownerDocument === n || (m(l), h = !p); while (q = a[o++]) if (q(l, g || n, h)) { i.push(l); break } k && (w = y) } c && ((l = !q && l) && r--, f && t.push(l)) } if (r += s, c && s !== r) { o = 0; while (q = b[o++]) q(t, u, g, h); if (f) { if (r > 0) while (s--) t[s] || u[s] || (u[s] = E.call(i)); u = wa(u) } G.apply(i, u), k && !f && u.length > 0 && r + b.length > 1 && ga.uniqueSort(i) } return k && (w = y, j = v), t }; return c ? ia(f) : f } return h = ga.compile = function (a, b) { var c, d = [], e = [], f = A[a + " "]; if (!f) { b || (b = g(a)), c = b.length; while (c--) f = ya(b[c]), f[u] ? d.push(f) : e.push(f); f = A(a, za(e, d)), f.selector = a } return f }, i = ga.select = function (a, b, e, f) { var i, j, k, l, m, n = "function" == typeof a && a, o = !f && g(a = n.selector || a); if (e = e || [], 1 === o.length) { if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) { if (b = (d.find.ID(k.matches[0].replace(_, aa), b) || [])[0], !b) return e; n && (b = b.parentNode), a = a.slice(j.shift().value.length) } i = V.needsContext.test(a) ? 0 : j.length; while (i--) { if (k = j[i], d.relative[l = k.type]) break; if ((m = d.find[l]) && (f = m(k.matches[0].replace(_, aa), $.test(j[0].type) && qa(b.parentNode) || b))) { if (j.splice(i, 1), a = f.length && sa(j), !a) return G.apply(e, f), e; break } } } return (n || h(a, o))(f, b, !p, e, !b || $.test(a) && qa(b.parentNode) || b), e }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ja(function (a) { return 1 & a.compareDocumentPosition(n.createElement("fieldset")) }), ja(function (a) { return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href") }) || ka("type|href|height|width", function (a, b, c) { if (!c) return a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2) }), c.attributes && ja(function (a) { return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value") }) || ka("value", function (a, b, c) { if (!c && "input" === a.nodeName.toLowerCase()) return a.defaultValue }), ja(function (a) { return null == a.getAttribute("disabled") }) || ka(J, function (a, b, c) { var d; if (!c) return a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null }), ga }(a); r.find = x, r.expr = x.selectors, r.expr[":"] = r.expr.pseudos, r.uniqueSort = r.unique = x.uniqueSort, r.text = x.getText, r.isXMLDoc = x.isXML, r.contains = x.contains, r.escapeSelector = x.escape; var y = function (a, b, c) { var d = [], e = void 0 !== c; while ((a = a[b]) && 9 !== a.nodeType) if (1 === a.nodeType) { if (e && r(a).is(c)) break; d.push(a) } return d }, z = function (a, b) { for (var c = []; a; a = a.nextSibling)1 === a.nodeType && a !== b && c.push(a); return c }, A = r.expr.match.needsContext, B = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i, C = /^.[^:#\[\.,]*$/; function D(a, b, c) { if (r.isFunction(b)) return r.grep(a, function (a, d) { return !!b.call(a, d, a) !== c }); if (b.nodeType) return r.grep(a, function (a) { return a === b !== c }); if ("string" == typeof b) { if (C.test(b)) return r.filter(b, a, c); b = r.filter(b, a) } return r.grep(a, function (a) { return i.call(b, a) > -1 !== c && 1 === a.nodeType }) } r.filter = function (a, b, c) { var d = b[0]; return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? r.find.matchesSelector(d, a) ? [d] : [] : r.find.matches(a, r.grep(b, function (a) { return 1 === a.nodeType })) }, r.fn.extend({ find: function (a) { var b, c, d = this.length, e = this; if ("string" != typeof a) return this.pushStack(r(a).filter(function () { for (b = 0; b < d; b++)if (r.contains(e[b], this)) return !0 })); for (c = this.pushStack([]), b = 0; b < d; b++)r.find(a, e[b], c); return d > 1 ? r.uniqueSort(c) : c }, filter: function (a) { return this.pushStack(D(this, a || [], !1)) }, not: function (a) { return this.pushStack(D(this, a || [], !0)) }, is: function (a) { return !!D(this, "string" == typeof a && A.test(a) ? r(a) : a || [], !1).length } }); var E, F = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, G = r.fn.init = function (a, b, c) { var e, f; if (!a) return this; if (c = c || E, "string" == typeof a) { if (e = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : F.exec(a), !e || !e[1] && b) return !b || b.jquery ? (b || c).find(a) : this.constructor(b).find(a); if (e[1]) { if (b = b instanceof r ? b[0] : b, r.merge(this, r.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : d, !0)), B.test(e[1]) && r.isPlainObject(b)) for (e in b) r.isFunction(this[e]) ? this[e](b[e]) : this.attr(e, b[e]); return this } return f = d.getElementById(e[2]), f && (this[0] = f, this.length = 1), this } return a.nodeType ? (this[0] = a, this.length = 1, this) : r.isFunction(a) ? void 0 !== c.ready ? c.ready(a) : a(r) : r.makeArray(a, this) }; G.prototype = r.fn, E = r(d); var H = /^(?:parents|prev(?:Until|All))/, I = { children: !0, contents: !0, next: !0, prev: !0 }; r.fn.extend({ has: function (a) { var b = r(a, this), c = b.length; return this.filter(function () { for (var a = 0; a < c; a++)if (r.contains(this, b[a])) return !0 }) }, closest: function (a, b) { var c, d = 0, e = this.length, f = [], g = "string" != typeof a && r(a); if (!A.test(a)) for (; d < e; d++)for (c = this[d]; c && c !== b; c = c.parentNode)if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && r.find.matchesSelector(c, a))) { f.push(c); break } return this.pushStack(f.length > 1 ? r.uniqueSort(f) : f) }, index: function (a) { return a ? "string" == typeof a ? i.call(r(a), this[0]) : i.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1 }, add: function (a, b) { return this.pushStack(r.uniqueSort(r.merge(this.get(), r(a, b)))) }, addBack: function (a) { return this.add(null == a ? this.prevObject : this.prevObject.filter(a)) } }); function J(a, b) { while ((a = a[b]) && 1 !== a.nodeType); return a } r.each({ parent: function (a) { var b = a.parentNode; return b && 11 !== b.nodeType ? b : null }, parents: function (a) { return y(a, "parentNode") }, parentsUntil: function (a, b, c) { return y(a, "parentNode", c) }, next: function (a) { return J(a, "nextSibling") }, prev: function (a) { return J(a, "previousSibling") }, nextAll: function (a) { return y(a, "nextSibling") }, prevAll: function (a) { return y(a, "previousSibling") }, nextUntil: function (a, b, c) { return y(a, "nextSibling", c) }, prevUntil: function (a, b, c) { return y(a, "previousSibling", c) }, siblings: function (a) { return z((a.parentNode || {}).firstChild, a) }, children: function (a) { return z(a.firstChild) }, contents: function (a) { return a.contentDocument || r.merge([], a.childNodes) } }, function (a, b) { r.fn[a] = function (c, d) { var e = r.map(this, b, c); return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = r.filter(d, e)), this.length > 1 && (I[a] || r.uniqueSort(e), H.test(a) && e.reverse()), this.pushStack(e) } }); var K = /\S+/g; function L(a) { var b = {}; return r.each(a.match(K) || [], function (a, c) { b[c] = !0 }), b } r.Callbacks = function (a) { a = "string" == typeof a ? L(a) : r.extend({}, a); var b, c, d, e, f = [], g = [], h = -1, i = function () { for (e = a.once, d = b = !0; g.length; h = -1) { c = g.shift(); while (++h < f.length) f[h].apply(c[0], c[1]) === !1 && a.stopOnFalse && (h = f.length, c = !1) } a.memory || (c = !1), b = !1, e && (f = c ? [] : "") }, j = { add: function () { return f && (c && !b && (h = f.length - 1, g.push(c)), function d(b) { r.each(b, function (b, c) { r.isFunction(c) ? a.unique && j.has(c) || f.push(c) : c && c.length && "string" !== r.type(c) && d(c) }) }(arguments), c && !b && i()), this }, remove: function () { return r.each(arguments, function (a, b) { var c; while ((c = r.inArray(b, f, c)) > -1) f.splice(c, 1), c <= h && h-- }), this }, has: function (a) { return a ? r.inArray(a, f) > -1 : f.length > 0 }, empty: function () { return f && (f = []), this }, disable: function () { return e = g = [], f = c = "", this }, disabled: function () { return !f }, lock: function () { return e = g = [], c || b || (f = c = ""), this }, locked: function () { return !!e }, fireWith: function (a, c) { return e || (c = c || [], c = [a, c.slice ? c.slice() : c], g.push(c), b || i()), this }, fire: function () { return j.fireWith(this, arguments), this }, fired: function () { return !!d } }; return j }; function M(a) { return a } function N(a) { throw a } function O(a, b, c) { var d; try { a && r.isFunction(d = a.promise) ? d.call(a).done(b).fail(c) : a && r.isFunction(d = a.then) ? d.call(a, b, c) : b.call(void 0, a) } catch (a) { c.call(void 0, a) } } r.extend({ Deferred: function (b) { var c = [["notify", "progress", r.Callbacks("memory"), r.Callbacks("memory"), 2], ["resolve", "done", r.Callbacks("once memory"), r.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", r.Callbacks("once memory"), r.Callbacks("once memory"), 1, "rejected"]], d = "pending", e = { state: function () { return d }, always: function () { return f.done(arguments).fail(arguments), this }, "catch": function (a) { return e.then(null, a) }, pipe: function () { var a = arguments; return r.Deferred(function (b) { r.each(c, function (c, d) { var e = r.isFunction(a[d[4]]) && a[d[4]]; f[d[1]](function () { var a = e && e.apply(this, arguments); a && r.isFunction(a.promise) ? a.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[d[0] + "With"](this, e ? [a] : arguments) }) }), a = null }).promise() }, then: function (b, d, e) { var f = 0; function g(b, c, d, e) { return function () { var h = this, i = arguments, j = function () { var a, j; if (!(b < f)) { if (a = d.apply(h, i), a === c.promise()) throw new TypeError("Thenable self-resolution"); j = a && ("object" == typeof a || "function" == typeof a) && a.then, r.isFunction(j) ? e ? j.call(a, g(f, c, M, e), g(f, c, N, e)) : (f++, j.call(a, g(f, c, M, e), g(f, c, N, e), g(f, c, M, c.notifyWith))) : (d !== M && (h = void 0, i = [a]), (e || c.resolveWith)(h, i)) } }, k = e ? j : function () { try { j() } catch (a) { r.Deferred.exceptionHook && r.Deferred.exceptionHook(a, k.stackTrace), b + 1 >= f && (d !== N && (h = void 0, i = [a]), c.rejectWith(h, i)) } }; b ? k() : (r.Deferred.getStackHook && (k.stackTrace = r.Deferred.getStackHook()), a.setTimeout(k)) } } return r.Deferred(function (a) { c[0][3].add(g(0, a, r.isFunction(e) ? e : M, a.notifyWith)), c[1][3].add(g(0, a, r.isFunction(b) ? b : M)), c[2][3].add(g(0, a, r.isFunction(d) ? d : N)) }).promise() }, promise: function (a) { return null != a ? r.extend(a, e) : e } }, f = {}; return r.each(c, function (a, b) { var g = b[2], h = b[5]; e[b[1]] = g.add, h && g.add(function () { d = h }, c[3 - a][2].disable, c[0][2].lock), g.add(b[3].fire), f[b[0]] = function () { return f[b[0] + "With"](this === f ? void 0 : this, arguments), this }, f[b[0] + "With"] = g.fireWith }), e.promise(f), b && b.call(f, f), f }, when: function (a) { var b = arguments.length, c = b, d = Array(c), e = f.call(arguments), g = r.Deferred(), h = function (a) { return function (c) { d[a] = this, e[a] = arguments.length > 1 ? f.call(arguments) : c, --b || g.resolveWith(d, e) } }; if (b <= 1 && (O(a, g.done(h(c)).resolve, g.reject), "pending" === g.state() || r.isFunction(e[c] && e[c].then))) return g.then(); while (c--) O(e[c], h(c), g.reject); return g.promise() } }); var P = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/; r.Deferred.exceptionHook = function (b, c) { a.console && a.console.warn && b && P.test(b.name) && a.console.warn("jQuery.Deferred exception: " + b.message, b.stack, c) }, r.readyException = function (b) { a.setTimeout(function () { throw b }) }; var Q = r.Deferred(); r.fn.ready = function (a) { return Q.then(a)["catch"](function (a) { r.readyException(a) }), this }, r.extend({ isReady: !1, readyWait: 1, holdReady: function (a) { a ? r.readyWait++ : r.ready(!0) }, ready: function (a) { (a === !0 ? --r.readyWait : r.isReady) || (r.isReady = !0, a !== !0 && --r.readyWait > 0 || Q.resolveWith(d, [r])) } }), r.ready.then = Q.then; function R() { d.removeEventListener("DOMContentLoaded", R), a.removeEventListener("load", R), r.ready() } "complete" === d.readyState || "loading" !== d.readyState && !d.documentElement.doScroll ? a.setTimeout(r.ready) : (d.addEventListener("DOMContentLoaded", R), a.addEventListener("load", R)); var S = function (a, b, c, d, e, f, g) {
        var h = 0, i = a.length, j = null == c; if ("object" === r.type(c)) { e = !0; for (h in c) S(a, b, h, c[h], !0, f, g) } else if (void 0 !== d && (e = !0,
            r.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function (a, b, c) { return j.call(r(a), c) })), b)) for (; h < i; h++)b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c))); return e ? a : j ? b.call(a) : i ? b(a[0], c) : f
    }, T = function (a) { return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType }; function U() { this.expando = r.expando + U.uid++ } U.uid = 1, U.prototype = { cache: function (a) { var b = a[this.expando]; return b || (b = {}, T(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, { value: b, configurable: !0 }))), b }, set: function (a, b, c) { var d, e = this.cache(a); if ("string" == typeof b) e[r.camelCase(b)] = c; else for (d in b) e[r.camelCase(d)] = b[d]; return e }, get: function (a, b) { return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][r.camelCase(b)] }, access: function (a, b, c) { return void 0 === b || b && "string" == typeof b && void 0 === c ? this.get(a, b) : (this.set(a, b, c), void 0 !== c ? c : b) }, remove: function (a, b) { var c, d = a[this.expando]; if (void 0 !== d) { if (void 0 !== b) { r.isArray(b) ? b = b.map(r.camelCase) : (b = r.camelCase(b), b = b in d ? [b] : b.match(K) || []), c = b.length; while (c--) delete d[b[c]] } (void 0 === b || r.isEmptyObject(d)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando]) } }, hasData: function (a) { var b = a[this.expando]; return void 0 !== b && !r.isEmptyObject(b) } }; var V = new U, W = new U, X = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, Y = /[A-Z]/g; function Z(a, b, c) { var d; if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(Y, "-$&").toLowerCase(), c = a.getAttribute(d), "string" == typeof c) { try { c = "true" === c || "false" !== c && ("null" === c ? null : +c + "" === c ? +c : X.test(c) ? JSON.parse(c) : c) } catch (e) { } W.set(a, b, c) } else c = void 0; return c } r.extend({ hasData: function (a) { return W.hasData(a) || V.hasData(a) }, data: function (a, b, c) { return W.access(a, b, c) }, removeData: function (a, b) { W.remove(a, b) }, _data: function (a, b, c) { return V.access(a, b, c) }, _removeData: function (a, b) { V.remove(a, b) } }), r.fn.extend({ data: function (a, b) { var c, d, e, f = this[0], g = f && f.attributes; if (void 0 === a) { if (this.length && (e = W.get(f), 1 === f.nodeType && !V.get(f, "hasDataAttrs"))) { c = g.length; while (c--) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = r.camelCase(d.slice(5)), Z(f, d, e[d]))); V.set(f, "hasDataAttrs", !0) } return e } return "object" == typeof a ? this.each(function () { W.set(this, a) }) : S(this, function (b) { var c; if (f && void 0 === b) { if (c = W.get(f, a), void 0 !== c) return c; if (c = Z(f, a), void 0 !== c) return c } else this.each(function () { W.set(this, a, b) }) }, null, b, arguments.length > 1, null, !0) }, removeData: function (a) { return this.each(function () { W.remove(this, a) }) } }), r.extend({ queue: function (a, b, c) { var d; if (a) return b = (b || "fx") + "queue", d = V.get(a, b), c && (!d || r.isArray(c) ? d = V.access(a, b, r.makeArray(c)) : d.push(c)), d || [] }, dequeue: function (a, b) { b = b || "fx"; var c = r.queue(a, b), d = c.length, e = c.shift(), f = r._queueHooks(a, b), g = function () { r.dequeue(a, b) }; "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire() }, _queueHooks: function (a, b) { var c = b + "queueHooks"; return V.get(a, c) || V.access(a, c, { empty: r.Callbacks("once memory").add(function () { V.remove(a, [b + "queue", c]) }) }) } }), r.fn.extend({ queue: function (a, b) { var c = 2; return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? r.queue(this[0], a) : void 0 === b ? this : this.each(function () { var c = r.queue(this, a, b); r._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && r.dequeue(this, a) }) }, dequeue: function (a) { return this.each(function () { r.dequeue(this, a) }) }, clearQueue: function (a) { return this.queue(a || "fx", []) }, promise: function (a, b) { var c, d = 1, e = r.Deferred(), f = this, g = this.length, h = function () { --d || e.resolveWith(f, [f]) }; "string" != typeof a && (b = a, a = void 0), a = a || "fx"; while (g--) c = V.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h)); return h(), e.promise(b) } }); var $ = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, _ = new RegExp("^(?:([+-])=|)(" + $ + ")([a-z%]*)$", "i"), aa = ["Top", "Right", "Bottom", "Left"], ba = function (a, b) { return a = b || a, "none" === a.style.display || "" === a.style.display && r.contains(a.ownerDocument, a) && "none" === r.css(a, "display") }, ca = function (a, b, c, d) { var e, f, g = {}; for (f in b) g[f] = a.style[f], a.style[f] = b[f]; e = c.apply(a, d || []); for (f in b) a.style[f] = g[f]; return e }; function da(a, b, c, d) { var e, f = 1, g = 20, h = d ? function () { return d.cur() } : function () { return r.css(a, b, "") }, i = h(), j = c && c[3] || (r.cssNumber[b] ? "" : "px"), k = (r.cssNumber[b] || "px" !== j && +i) && _.exec(r.css(a, b)); if (k && k[3] !== j) { j = j || k[3], c = c || [], k = +i || 1; do f = f || ".5", k /= f, r.style(a, b, k + j); while (f !== (f = h() / i) && 1 !== f && --g) } return c && (k = +k || +i || 0, e = c[1] ? k + (c[1] + 1) * c[2] : +c[2], d && (d.unit = j, d.start = k, d.end = e)), e } var ea = {}; function fa(a) { var b, c = a.ownerDocument, d = a.nodeName, e = ea[d]; return e ? e : (b = c.body.appendChild(c.createElement(d)), e = r.css(b, "display"), b.parentNode.removeChild(b), "none" === e && (e = "block"), ea[d] = e, e) } function ga(a, b) { for (var c, d, e = [], f = 0, g = a.length; f < g; f++)d = a[f], d.style && (c = d.style.display, b ? ("none" === c && (e[f] = V.get(d, "display") || null, e[f] || (d.style.display = "")), "" === d.style.display && ba(d) && (e[f] = fa(d))) : "none" !== c && (e[f] = "none", V.set(d, "display", c))); for (f = 0; f < g; f++)null != e[f] && (a[f].style.display = e[f]); return a } r.fn.extend({ show: function () { return ga(this, !0) }, hide: function () { return ga(this) }, toggle: function (a) { return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function () { ba(this) ? r(this).show() : r(this).hide() }) } }); var ha = /^(?:checkbox|radio)$/i, ia = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i, ja = /^$|\/(?:java|ecma)script/i, ka = { option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] }; ka.optgroup = ka.option, ka.tbody = ka.tfoot = ka.colgroup = ka.caption = ka.thead, ka.th = ka.td; function la(a, b) { var c = "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName(b || "*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll(b || "*") : []; return void 0 === b || b && r.nodeName(a, b) ? r.merge([a], c) : c } function ma(a, b) { for (var c = 0, d = a.length; c < d; c++)V.set(a[c], "globalEval", !b || V.get(b[c], "globalEval")) } var na = /<|&#?\w+;/; function oa(a, b, c, d, e) { for (var f, g, h, i, j, k, l = b.createDocumentFragment(), m = [], n = 0, o = a.length; n < o; n++)if (f = a[n], f || 0 === f) if ("object" === r.type(f)) r.merge(m, f.nodeType ? [f] : f); else if (na.test(f)) { g = g || l.appendChild(b.createElement("div")), h = (ia.exec(f) || ["", ""])[1].toLowerCase(), i = ka[h] || ka._default, g.innerHTML = i[1] + r.htmlPrefilter(f) + i[2], k = i[0]; while (k--) g = g.lastChild; r.merge(m, g.childNodes), g = l.firstChild, g.textContent = "" } else m.push(b.createTextNode(f)); l.textContent = "", n = 0; while (f = m[n++]) if (d && r.inArray(f, d) > -1) e && e.push(f); else if (j = r.contains(f.ownerDocument, f), g = la(l.appendChild(f), "script"), j && ma(g), c) { k = 0; while (f = g[k++]) ja.test(f.type || "") && c.push(f) } return l } !function () { var a = d.createDocumentFragment(), b = a.appendChild(d.createElement("div")), c = d.createElement("input"); c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), o.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", o.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue }(); var pa = d.documentElement, qa = /^key/, ra = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, sa = /^([^.]*)(?:\.(.+)|)/; function ta() { return !0 } function ua() { return !1 } function va() { try { return d.activeElement } catch (a) { } } function wa(a, b, c, d, e, f) { var g, h; if ("object" == typeof b) { "string" != typeof c && (d = d || c, c = void 0); for (h in b) wa(a, h, c, d, b[h], f); return a } if (null == d && null == e ? (e = c, d = c = void 0) : null == e && ("string" == typeof c ? (e = d, d = void 0) : (e = d, d = c, c = void 0)), e === !1) e = ua; else if (!e) return a; return 1 === f && (g = e, e = function (a) { return r().off(a), g.apply(this, arguments) }, e.guid = g.guid || (g.guid = r.guid++)), a.each(function () { r.event.add(this, b, e, d, c) }) } r.event = { global: {}, add: function (a, b, c, d, e) { var f, g, h, i, j, k, l, m, n, o, p, q = V.get(a); if (q) { c.handler && (f = c, c = f.handler, e = f.selector), e && r.find.matchesSelector(pa, e), c.guid || (c.guid = r.guid++), (i = q.events) || (i = q.events = {}), (g = q.handle) || (g = q.handle = function (b) { return "undefined" != typeof r && r.event.triggered !== b.type ? r.event.dispatch.apply(a, arguments) : void 0 }), b = (b || "").match(K) || [""], j = b.length; while (j--) h = sa.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n && (l = r.event.special[n] || {}, n = (e ? l.delegateType : l.bindType) || n, l = r.event.special[n] || {}, k = r.extend({ type: n, origType: p, data: d, handler: c, guid: c.guid, selector: e, needsContext: e && r.expr.match.needsContext.test(e), namespace: o.join(".") }, f), (m = i[n]) || (m = i[n] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, o, g) !== !1 || a.addEventListener && a.addEventListener(n, g)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), r.event.global[n] = !0) } }, remove: function (a, b, c, d, e) { var f, g, h, i, j, k, l, m, n, o, p, q = V.hasData(a) && V.get(a); if (q && (i = q.events)) { b = (b || "").match(K) || [""], j = b.length; while (j--) if (h = sa.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), n) { l = r.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = i[n] || [], h = h[2] && new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length; while (f--) k = m[f], !e && p !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k)); g && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || r.removeEvent(a, n, q.handle), delete i[n]) } else for (n in i) r.event.remove(a, n + b[j], c, d, !0); r.isEmptyObject(i) && V.remove(a, "handle events") } }, dispatch: function (a) { var b = r.event.fix(a), c, d, e, f, g, h, i = new Array(arguments.length), j = (V.get(this, "events") || {})[b.type] || [], k = r.event.special[b.type] || {}; for (i[0] = b, c = 1; c < arguments.length; c++)i[c] = arguments[c]; if (b.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, b) !== !1) { h = r.event.handlers.call(this, b, j), c = 0; while ((f = h[c++]) && !b.isPropagationStopped()) { b.currentTarget = f.elem, d = 0; while ((g = f.handlers[d++]) && !b.isImmediatePropagationStopped()) b.rnamespace && !b.rnamespace.test(g.namespace) || (b.handleObj = g, b.data = g.data, e = ((r.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (b.result = e) === !1 && (b.preventDefault(), b.stopPropagation())) } return k.postDispatch && k.postDispatch.call(this, b), b.result } }, handlers: function (a, b) { var c, d, e, f, g = [], h = b.delegateCount, i = a.target; if (h && i.nodeType && ("click" !== a.type || isNaN(a.button) || a.button < 1)) for (; i !== this; i = i.parentNode || this)if (1 === i.nodeType && (i.disabled !== !0 || "click" !== a.type)) { for (d = [], c = 0; c < h; c++)f = b[c], e = f.selector + " ", void 0 === d[e] && (d[e] = f.needsContext ? r(e, this).index(i) > -1 : r.find(e, this, null, [i]).length), d[e] && d.push(f); d.length && g.push({ elem: i, handlers: d }) } return h < b.length && g.push({ elem: this, handlers: b.slice(h) }), g }, addProp: function (a, b) { Object.defineProperty(r.Event.prototype, a, { enumerable: !0, configurable: !0, get: r.isFunction(b) ? function () { if (this.originalEvent) return b(this.originalEvent) } : function () { if (this.originalEvent) return this.originalEvent[a] }, set: function (b) { Object.defineProperty(this, a, { enumerable: !0, configurable: !0, writable: !0, value: b }) } }) }, fix: function (a) { return a[r.expando] ? a : new r.Event(a) }, special: { load: { noBubble: !0 }, focus: { trigger: function () { if (this !== va() && this.focus) return this.focus(), !1 }, delegateType: "focusin" }, blur: { trigger: function () { if (this === va() && this.blur) return this.blur(), !1 }, delegateType: "focusout" }, click: { trigger: function () { if ("checkbox" === this.type && this.click && r.nodeName(this, "input")) return this.click(), !1 }, _default: function (a) { return r.nodeName(a.target, "a") } }, beforeunload: { postDispatch: function (a) { void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result) } } } }, r.removeEvent = function (a, b, c) { a.removeEventListener && a.removeEventListener(b, c) }, r.Event = function (a, b) { return this instanceof r.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? ta : ua, this.target = a.target && 3 === a.target.nodeType ? a.target.parentNode : a.target, this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget) : this.type = a, b && r.extend(this, b), this.timeStamp = a && a.timeStamp || r.now(), void (this[r.expando] = !0)) : new r.Event(a, b) }, r.Event.prototype = { constructor: r.Event, isDefaultPrevented: ua, isPropagationStopped: ua, isImmediatePropagationStopped: ua, isSimulated: !1, preventDefault: function () { var a = this.originalEvent; this.isDefaultPrevented = ta, a && !this.isSimulated && a.preventDefault() }, stopPropagation: function () { var a = this.originalEvent; this.isPropagationStopped = ta, a && !this.isSimulated && a.stopPropagation() }, stopImmediatePropagation: function () { var a = this.originalEvent; this.isImmediatePropagationStopped = ta, a && !this.isSimulated && a.stopImmediatePropagation(), this.stopPropagation() } }, r.each({ altKey: !0, bubbles: !0, cancelable: !0, changedTouches: !0, ctrlKey: !0, detail: !0, eventPhase: !0, metaKey: !0, pageX: !0, pageY: !0, shiftKey: !0, view: !0, "char": !0, charCode: !0, key: !0, keyCode: !0, button: !0, buttons: !0, clientX: !0, clientY: !0, offsetX: !0, offsetY: !0, pointerId: !0, pointerType: !0, screenX: !0, screenY: !0, targetTouches: !0, toElement: !0, touches: !0, which: function (a) { var b = a.button; return null == a.which && qa.test(a.type) ? null != a.charCode ? a.charCode : a.keyCode : !a.which && void 0 !== b && ra.test(a.type) ? 1 & b ? 1 : 2 & b ? 3 : 4 & b ? 2 : 0 : a.which } }, r.event.addProp), r.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function (a, b) { r.event.special[a] = { delegateType: b, bindType: b, handle: function (a) { var c, d = this, e = a.relatedTarget, f = a.handleObj; return e && (e === d || r.contains(d, e)) || (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c } } }), r.fn.extend({ on: function (a, b, c, d) { return wa(this, a, b, c, d) }, one: function (a, b, c, d) { return wa(this, a, b, c, d, 1) }, off: function (a, b, c) { var d, e; if (a && a.preventDefault && a.handleObj) return d = a.handleObj, r(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this; if ("object" == typeof a) { for (e in a) this.off(e, b, a[e]); return this } return b !== !1 && "function" != typeof b || (c = b, b = void 0), c === !1 && (c = ua), this.each(function () { r.event.remove(this, a, c, b) }) } }); var xa = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi, ya = /<script|<style|<link/i, za = /checked\s*(?:[^=]|=\s*.checked.)/i, Aa = /^true\/(.*)/, Ba = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g; function Ca(a, b) { return r.nodeName(a, "table") && r.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a : a } function Da(a) { return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a } function Ea(a) { var b = Aa.exec(a.type); return b ? a.type = b[1] : a.removeAttribute("type"), a } function Fa(a, b) { var c, d, e, f, g, h, i, j; if (1 === b.nodeType) { if (V.hasData(a) && (f = V.access(a), g = V.set(b, f), j = f.events)) { delete g.handle, g.events = {}; for (e in j) for (c = 0, d = j[e].length; c < d; c++)r.event.add(b, e, j[e][c]) } W.hasData(a) && (h = W.access(a), i = r.extend({}, h), W.set(b, i)) } } function Ga(a, b) { var c = b.nodeName.toLowerCase(); "input" === c && ha.test(a.type) ? b.checked = a.checked : "input" !== c && "textarea" !== c || (b.defaultValue = a.defaultValue) } function Ha(a, b, c, d) { b = g.apply([], b); var e, f, h, i, j, k, l = 0, m = a.length, n = m - 1, q = b[0], s = r.isFunction(q); if (s || m > 1 && "string" == typeof q && !o.checkClone && za.test(q)) return a.each(function (e) { var f = a.eq(e); s && (b[0] = q.call(this, e, f.html())), Ha(f, b, c, d) }); if (m && (e = oa(b, a[0].ownerDocument, !1, a, d), f = e.firstChild, 1 === e.childNodes.length && (e = f), f || d)) { for (h = r.map(la(e, "script"), Da), i = h.length; l < m; l++)j = e, l !== n && (j = r.clone(j, !0, !0), i && r.merge(h, la(j, "script"))), c.call(a[l], j, l); if (i) for (k = h[h.length - 1].ownerDocument, r.map(h, Ea), l = 0; l < i; l++)j = h[l], ja.test(j.type || "") && !V.access(j, "globalEval") && r.contains(k, j) && (j.src ? r._evalUrl && r._evalUrl(j.src) : p(j.textContent.replace(Ba, ""), k)) } return a } function Ia(a, b, c) { for (var d, e = b ? r.filter(b, a) : a, f = 0; null != (d = e[f]); f++)c || 1 !== d.nodeType || r.cleanData(la(d)), d.parentNode && (c && r.contains(d.ownerDocument, d) && ma(la(d, "script")), d.parentNode.removeChild(d)); return a } r.extend({ htmlPrefilter: function (a) { return a.replace(xa, "<$1></$2>") }, clone: function (a, b, c) { var d, e, f, g, h = a.cloneNode(!0), i = r.contains(a.ownerDocument, a); if (!(o.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || r.isXMLDoc(a))) for (g = la(h), f = la(a), d = 0, e = f.length; d < e; d++)Ga(f[d], g[d]); if (b) if (c) for (f = f || la(a), g = g || la(h), d = 0, e = f.length; d < e; d++)Fa(f[d], g[d]); else Fa(a, h); return g = la(h, "script"), g.length > 0 && ma(g, !i && la(a, "script")), h }, cleanData: function (a) { for (var b, c, d, e = r.event.special, f = 0; void 0 !== (c = a[f]); f++)if (T(c)) { if (b = c[V.expando]) { if (b.events) for (d in b.events) e[d] ? r.event.remove(c, d) : r.removeEvent(c, d, b.handle); c[V.expando] = void 0 } c[W.expando] && (c[W.expando] = void 0) } } }), r.fn.extend({ detach: function (a) { return Ia(this, a, !0) }, remove: function (a) { return Ia(this, a) }, text: function (a) { return S(this, function (a) { return void 0 === a ? r.text(this) : this.empty().each(function () { 1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = a) }) }, null, a, arguments.length) }, append: function () { return Ha(this, arguments, function (a) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var b = Ca(this, a); b.appendChild(a) } }) }, prepend: function () { return Ha(this, arguments, function (a) { if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) { var b = Ca(this, a); b.insertBefore(a, b.firstChild) } }) }, before: function () { return Ha(this, arguments, function (a) { this.parentNode && this.parentNode.insertBefore(a, this) }) }, after: function () { return Ha(this, arguments, function (a) { this.parentNode && this.parentNode.insertBefore(a, this.nextSibling) }) }, empty: function () { for (var a, b = 0; null != (a = this[b]); b++)1 === a.nodeType && (r.cleanData(la(a, !1)), a.textContent = ""); return this }, clone: function (a, b) { return a = null != a && a, b = null == b ? a : b, this.map(function () { return r.clone(this, a, b) }) }, html: function (a) { return S(this, function (a) { var b = this[0] || {}, c = 0, d = this.length; if (void 0 === a && 1 === b.nodeType) return b.innerHTML; if ("string" == typeof a && !ya.test(a) && !ka[(ia.exec(a) || ["", ""])[1].toLowerCase()]) { a = r.htmlPrefilter(a); try { for (; c < d; c++)b = this[c] || {}, 1 === b.nodeType && (r.cleanData(la(b, !1)), b.innerHTML = a); b = 0 } catch (e) { } } b && this.empty().append(a) }, null, a, arguments.length) }, replaceWith: function () { var a = []; return Ha(this, arguments, function (b) { var c = this.parentNode; r.inArray(this, a) < 0 && (r.cleanData(la(this)), c && c.replaceChild(b, this)) }, a) } }), r.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (a, b) { r.fn[a] = function (a) { for (var c, d = [], e = r(a), f = e.length - 1, g = 0; g <= f; g++)c = g === f ? this : this.clone(!0), r(e[g])[b](c), h.apply(d, c.get()); return this.pushStack(d) } }); var Ja = /^margin/, Ka = new RegExp("^(" + $ + ")(?!px)[a-z%]+$", "i"), La = function (b) { var c = b.ownerDocument.defaultView; return c && c.opener || (c = a), c.getComputedStyle(b) }; !function () { function b() { if (i) { i.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", i.innerHTML = "", pa.appendChild(h); var b = a.getComputedStyle(i); c = "1%" !== b.top, g = "2px" === b.marginLeft, e = "4px" === b.width, i.style.marginRight = "50%", f = "4px" === b.marginRight, pa.removeChild(h), i = null } } var c, e, f, g, h = d.createElement("div"), i = d.createElement("div"); i.style && (i.style.backgroundClip = "content-box", i.cloneNode(!0).style.backgroundClip = "", o.clearCloneStyle = "content-box" === i.style.backgroundClip, h.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", h.appendChild(i), r.extend(o, { pixelPosition: function () { return b(), c }, boxSizingReliable: function () { return b(), e }, pixelMarginRight: function () { return b(), f }, reliableMarginLeft: function () { return b(), g } })) }(); function Ma(a, b, c) { var d, e, f, g, h = a.style; return c = c || La(a), c && (g = c.getPropertyValue(b) || c[b], "" !== g || r.contains(a.ownerDocument, a) || (g = r.style(a, b)), !o.pixelMarginRight() && Ka.test(g) && Ja.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g } function Na(a, b) { return { get: function () { return a() ? void delete this.get : (this.get = b).apply(this, arguments) } } } var Oa = /^(none|table(?!-c[ea]).+)/, Pa = { position: "absolute", visibility: "hidden", display: "block" }, Qa = { letterSpacing: "0", fontWeight: "400" }, Ra = ["Webkit", "Moz", "ms"], Sa = d.createElement("div").style; function Ta(a) { if (a in Sa) return a; var b = a[0].toUpperCase() + a.slice(1), c = Ra.length; while (c--) if (a = Ra[c] + b, a in Sa) return a } function Ua(a, b, c) { var d = _.exec(b); return d ? Math.max(0, d[2] - (c || 0)) + (d[3] || "px") : b } function Va(a, b, c, d, e) { for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0, g = 0; f < 4; f += 2)"margin" === c && (g += r.css(a, c + aa[f], !0, e)), d ? ("content" === c && (g -= r.css(a, "padding" + aa[f], !0, e)), "margin" !== c && (g -= r.css(a, "border" + aa[f] + "Width", !0, e))) : (g += r.css(a, "padding" + aa[f], !0, e), "padding" !== c && (g += r.css(a, "border" + aa[f] + "Width", !0, e))); return g } function Wa(a, b, c) { var d, e = !0, f = La(a), g = "border-box" === r.css(a, "boxSizing", !1, f); if (a.getClientRects().length && (d = a.getBoundingClientRect()[b]), d <= 0 || null == d) { if (d = Ma(a, b, f), (d < 0 || null == d) && (d = a.style[b]), Ka.test(d)) return d; e = g && (o.boxSizingReliable() || d === a.style[b]), d = parseFloat(d) || 0 } return d + Va(a, b, c || (g ? "border" : "content"), e, f) + "px" } r.extend({ cssHooks: { opacity: { get: function (a, b) { if (b) { var c = Ma(a, "opacity"); return "" === c ? "1" : c } } } }, cssNumber: { animationIterationCount: !0, columnCount: !0, fillOpacity: !0, flexGrow: !0, flexShrink: !0, fontWeight: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, widows: !0, zIndex: !0, zoom: !0 }, cssProps: { "float": "cssFloat" }, style: function (a, b, c, d) { if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) { var e, f, g, h = r.camelCase(b), i = a.style; return b = r.cssProps[h] || (r.cssProps[h] = Ta(h) || h), g = r.cssHooks[b] || r.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c, "string" === f && (e = _.exec(c)) && e[1] && (c = da(a, b, e), f = "number"), null != c && c === c && ("number" === f && (c += e && e[3] || (r.cssNumber[h] ? "" : "px")), o.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)), void 0) } }, css: function (a, b, c, d) { var e, f, g, h = r.camelCase(b); return b = r.cssProps[h] || (r.cssProps[h] = Ta(h) || h), g = r.cssHooks[b] || r.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = Ma(a, b, d)), "normal" === e && b in Qa && (e = Qa[b]), "" === c || c ? (f = parseFloat(e), c === !0 || isFinite(f) ? f || 0 : e) : e } }), r.each(["height", "width"], function (a, b) { r.cssHooks[b] = { get: function (a, c, d) { if (c) return !Oa.test(r.css(a, "display")) || a.getClientRects().length && a.getBoundingClientRect().width ? Wa(a, b, d) : ca(a, Pa, function () { return Wa(a, b, d) }) }, set: function (a, c, d) { var e, f = d && La(a), g = d && Va(a, b, d, "border-box" === r.css(a, "boxSizing", !1, f), f); return g && (e = _.exec(c)) && "px" !== (e[3] || "px") && (a.style[b] = c, c = r.css(a, b)), Ua(a, c, g) } } }), r.cssHooks.marginLeft = Na(o.reliableMarginLeft, function (a, b) { if (b) return (parseFloat(Ma(a, "marginLeft")) || a.getBoundingClientRect().left - ca(a, { marginLeft: 0 }, function () { return a.getBoundingClientRect().left })) + "px" }), r.each({ margin: "", padding: "", border: "Width" }, function (a, b) { r.cssHooks[a + b] = { expand: function (c) { for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [c]; d < 4; d++)e[a + aa[d] + b] = f[d] || f[d - 2] || f[0]; return e } }, Ja.test(a) || (r.cssHooks[a + b].set = Ua) }), r.fn.extend({ css: function (a, b) { return S(this, function (a, b, c) { var d, e, f = {}, g = 0; if (r.isArray(b)) { for (d = La(a), e = b.length; g < e; g++)f[b[g]] = r.css(a, b[g], !1, d); return f } return void 0 !== c ? r.style(a, b, c) : r.css(a, b) }, a, b, arguments.length > 1) } }); function Xa(a, b, c, d, e) { return new Xa.prototype.init(a, b, c, d, e) } r.Tween = Xa, Xa.prototype = { constructor: Xa, init: function (a, b, c, d, e, f) { this.elem = a, this.prop = c, this.easing = e || r.easing._default, this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (r.cssNumber[c] ? "" : "px") }, cur: function () { var a = Xa.propHooks[this.prop]; return a && a.get ? a.get(this) : Xa.propHooks._default.get(this) }, run: function (a) { var b, c = Xa.propHooks[this.prop]; return this.options.duration ? this.pos = b = r.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : Xa.propHooks._default.set(this), this } }, Xa.prototype.init.prototype = Xa.prototype, Xa.propHooks = { _default: { get: function (a) { var b; return 1 !== a.elem.nodeType || null != a.elem[a.prop] && null == a.elem.style[a.prop] ? a.elem[a.prop] : (b = r.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0) }, set: function (a) { r.fx.step[a.prop] ? r.fx.step[a.prop](a) : 1 !== a.elem.nodeType || null == a.elem.style[r.cssProps[a.prop]] && !r.cssHooks[a.prop] ? a.elem[a.prop] = a.now : r.style(a.elem, a.prop, a.now + a.unit) } } }, Xa.propHooks.scrollTop = Xa.propHooks.scrollLeft = { set: function (a) { a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now) } }, r.easing = { linear: function (a) { return a }, swing: function (a) { return .5 - Math.cos(a * Math.PI) / 2 }, _default: "swing" }, r.fx = Xa.prototype.init, r.fx.step = {}; var Ya, Za, $a = /^(?:toggle|show|hide)$/, _a = /queueHooks$/; function ab() { Za && (a.requestAnimationFrame(ab), r.fx.tick()) } function bb() { return a.setTimeout(function () { Ya = void 0 }), Ya = r.now() } function cb(a, b) { var c, d = 0, e = { height: a }; for (b = b ? 1 : 0; d < 4; d += 2 - b)c = aa[d], e["margin" + c] = e["padding" + c] = a; return b && (e.opacity = e.width = a), e } function db(a, b, c) { for (var d, e = (gb.tweeners[b] || []).concat(gb.tweeners["*"]), f = 0, g = e.length; f < g; f++)if (d = e[f].call(c, b, a)) return d } function eb(a, b, c) { var d, e, f, g, h, i, j, k, l = "width" in b || "height" in b, m = this, n = {}, o = a.style, p = a.nodeType && ba(a), q = V.get(a, "fxshow"); c.queue || (g = r._queueHooks(a, "fx"), null == g.unqueued && (g.unqueued = 0, h = g.empty.fire, g.empty.fire = function () { g.unqueued || h() }), g.unqueued++, m.always(function () { m.always(function () { g.unqueued--, r.queue(a, "fx").length || g.empty.fire() }) })); for (d in b) if (e = b[d], $a.test(e)) { if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) { if ("show" !== e || !q || void 0 === q[d]) continue; p = !0 } n[d] = q && q[d] || r.style(a, d) } if (i = !r.isEmptyObject(b), i || !r.isEmptyObject(n)) { l && 1 === a.nodeType && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = q && q.display, null == j && (j = V.get(a, "display")), k = r.css(a, "display"), "none" === k && (j ? k = j : (ga([a], !0), j = a.style.display || j, k = r.css(a, "display"), ga([a]))), ("inline" === k || "inline-block" === k && null != j) && "none" === r.css(a, "float") && (i || (m.done(function () { o.display = j }), null == j && (k = o.display, j = "none" === k ? "" : k)), o.display = "inline-block")), c.overflow && (o.overflow = "hidden", m.always(function () { o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2] })), i = !1; for (d in n) i || (q ? "hidden" in q && (p = q.hidden) : q = V.access(a, "fxshow", { display: j }), f && (q.hidden = !p), p && ga([a], !0), m.done(function () { p || ga([a]), V.remove(a, "fxshow"); for (d in n) r.style(a, d, n[d]) })), i = db(p ? q[d] : 0, d, m), d in q || (q[d] = i.start, p && (i.end = i.start, i.start = 0)) } } function fb(a, b) { var c, d, e, f, g; for (c in a) if (d = r.camelCase(c), e = b[d], f = a[c], r.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = r.cssHooks[d], g && "expand" in g) { f = g.expand(f), delete a[d]; for (c in f) c in a || (a[c] = f[c], b[c] = e) } else b[d] = e } function gb(a, b, c) { var d, e, f = 0, g = gb.prefilters.length, h = r.Deferred().always(function () { delete i.elem }), i = function () { if (e) return !1; for (var b = Ya || bb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; g < i; g++)j.tweens[g].run(f); return h.notifyWith(a, [j, f, c]), f < 1 && i ? c : (h.resolveWith(a, [j]), !1) }, j = h.promise({ elem: a, props: r.extend({}, b), opts: r.extend(!0, { specialEasing: {}, easing: r.easing._default }, c), originalProperties: b, originalOptions: c, startTime: Ya || bb(), duration: c.duration, tweens: [], createTween: function (b, c) { var d = r.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing); return j.tweens.push(d), d }, stop: function (b) { var c = 0, d = b ? j.tweens.length : 0; if (e) return this; for (e = !0; c < d; c++)j.tweens[c].run(1); return b ? (h.notifyWith(a, [j, 1, 0]), h.resolveWith(a, [j, b])) : h.rejectWith(a, [j, b]), this } }), k = j.props; for (fb(k, j.opts.specialEasing); f < g; f++)if (d = gb.prefilters[f].call(j, a, k, j.opts)) return r.isFunction(d.stop) && (r._queueHooks(j.elem, j.opts.queue).stop = r.proxy(d.stop, d)), d; return r.map(k, db, j), r.isFunction(j.opts.start) && j.opts.start.call(a, j), r.fx.timer(r.extend(i, { elem: a, anim: j, queue: j.opts.queue })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always) } r.Animation = r.extend(gb, { tweeners: { "*": [function (a, b) { var c = this.createTween(a, b); return da(c.elem, a, _.exec(b), c), c }] }, tweener: function (a, b) { r.isFunction(a) ? (b = a, a = ["*"]) : a = a.match(K); for (var c, d = 0, e = a.length; d < e; d++)c = a[d], gb.tweeners[c] = gb.tweeners[c] || [], gb.tweeners[c].unshift(b) }, prefilters: [eb], prefilter: function (a, b) { b ? gb.prefilters.unshift(a) : gb.prefilters.push(a) } }), r.speed = function (a, b, c) { var e = a && "object" == typeof a ? r.extend({}, a) : { complete: c || !c && b || r.isFunction(a) && a, duration: a, easing: c && b || b && !r.isFunction(b) && b }; return r.fx.off || d.hidden ? e.duration = 0 : e.duration = "number" == typeof e.duration ? e.duration : e.duration in r.fx.speeds ? r.fx.speeds[e.duration] : r.fx.speeds._default, null != e.queue && e.queue !== !0 || (e.queue = "fx"), e.old = e.complete, e.complete = function () { r.isFunction(e.old) && e.old.call(this), e.queue && r.dequeue(this, e.queue) }, e }, r.fn.extend({ fadeTo: function (a, b, c, d) { return this.filter(ba).css("opacity", 0).show().end().animate({ opacity: b }, a, c, d) }, animate: function (a, b, c, d) { var e = r.isEmptyObject(a), f = r.speed(b, c, d), g = function () { var b = gb(this, r.extend({}, a), f); (e || V.get(this, "finish")) && b.stop(!0) }; return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g) }, stop: function (a, b, c) { var d = function (a) { var b = a.stop; delete a.stop, b(c) }; return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function () { var b = !0, e = null != a && a + "queueHooks", f = r.timers, g = V.get(this); if (e) g[e] && g[e].stop && d(g[e]); else for (e in g) g[e] && g[e].stop && _a.test(e) && d(g[e]); for (e = f.length; e--;)f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1)); !b && c || r.dequeue(this, a) }) }, finish: function (a) { return a !== !1 && (a = a || "fx"), this.each(function () { var b, c = V.get(this), d = c[a + "queue"], e = c[a + "queueHooks"], f = r.timers, g = d ? d.length : 0; for (c.finish = !0, r.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--;)f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1)); for (b = 0; b < g; b++)d[b] && d[b].finish && d[b].finish.call(this); delete c.finish }) } }), r.each(["toggle", "show", "hide"], function (a, b) { var c = r.fn[b]; r.fn[b] = function (a, d, e) { return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(cb(b, !0), a, d, e) } }), r.each({ slideDown: cb("show"), slideUp: cb("hide"), slideToggle: cb("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (a, b) { r.fn[a] = function (a, c, d) { return this.animate(b, a, c, d) } }), r.timers = [], r.fx.tick = function () { var a, b = 0, c = r.timers; for (Ya = r.now(); b < c.length; b++)a = c[b], a() || c[b] !== a || c.splice(b--, 1); c.length || r.fx.stop(), Ya = void 0 }, r.fx.timer = function (a) { r.timers.push(a), a() ? r.fx.start() : r.timers.pop() }, r.fx.interval = 13, r.fx.start = function () { Za || (Za = a.requestAnimationFrame ? a.requestAnimationFrame(ab) : a.setInterval(r.fx.tick, r.fx.interval)) }, r.fx.stop = function () { a.cancelAnimationFrame ? a.cancelAnimationFrame(Za) : a.clearInterval(Za), Za = null }, r.fx.speeds = { slow: 600, fast: 200, _default: 400 }, r.fn.delay = function (b, c) { return b = r.fx ? r.fx.speeds[b] || b : b, c = c || "fx", this.queue(c, function (c, d) { var e = a.setTimeout(c, b); d.stop = function () { a.clearTimeout(e) } }) }, function () { var a = d.createElement("input"), b = d.createElement("select"), c = b.appendChild(d.createElement("option")); a.type = "checkbox", o.checkOn = "" !== a.value, o.optSelected = c.selected, a = d.createElement("input"), a.value = "t", a.type = "radio", o.radioValue = "t" === a.value }(); var hb, ib = r.expr.attrHandle; r.fn.extend({ attr: function (a, b) { return S(this, r.attr, a, b, arguments.length > 1) }, removeAttr: function (a) { return this.each(function () { r.removeAttr(this, a) }) } }), r.extend({
        attr: function (a, b, c) { var d, e, f = a.nodeType; if (3 !== f && 8 !== f && 2 !== f) return "undefined" == typeof a.getAttribute ? r.prop(a, b, c) : (1 === f && r.isXMLDoc(a) || (e = r.attrHooks[b.toLowerCase()] || (r.expr.match.bool.test(b) ? hb : void 0)), void 0 !== c ? null === c ? void r.removeAttr(a, b) : e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : (a.setAttribute(b, c + ""), c) : e && "get" in e && null !== (d = e.get(a, b)) ? d : (d = r.find.attr(a, b), null == d ? void 0 : d)) }, attrHooks: { type: { set: function (a, b) { if (!o.radioValue && "radio" === b && r.nodeName(a, "input")) { var c = a.value; return a.setAttribute("type", b), c && (a.value = c), b } } } }, removeAttr: function (a, b) {
            var c, d = 0, e = b && b.match(K);
            if (e && 1 === a.nodeType) while (c = e[d++]) a.removeAttribute(c)
        }
    }), hb = { set: function (a, b, c) { return b === !1 ? r.removeAttr(a, c) : a.setAttribute(c, c), c } }, r.each(r.expr.match.bool.source.match(/\w+/g), function (a, b) { var c = ib[b] || r.find.attr; ib[b] = function (a, b, d) { var e, f, g = b.toLowerCase(); return d || (f = ib[g], ib[g] = e, e = null != c(a, b, d) ? g : null, ib[g] = f), e } }); var jb = /^(?:input|select|textarea|button)$/i, kb = /^(?:a|area)$/i; r.fn.extend({ prop: function (a, b) { return S(this, r.prop, a, b, arguments.length > 1) }, removeProp: function (a) { return this.each(function () { delete this[r.propFix[a] || a] }) } }), r.extend({ prop: function (a, b, c) { var d, e, f = a.nodeType; if (3 !== f && 8 !== f && 2 !== f) return 1 === f && r.isXMLDoc(a) || (b = r.propFix[b] || b, e = r.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b] }, propHooks: { tabIndex: { get: function (a) { var b = r.find.attr(a, "tabindex"); return b ? parseInt(b, 10) : jb.test(a.nodeName) || kb.test(a.nodeName) && a.href ? 0 : -1 } } }, propFix: { "for": "htmlFor", "class": "className" } }), o.optSelected || (r.propHooks.selected = { get: function (a) { var b = a.parentNode; return b && b.parentNode && b.parentNode.selectedIndex, null }, set: function (a) { var b = a.parentNode; b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex) } }), r.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () { r.propFix[this.toLowerCase()] = this }); var lb = /[\t\r\n\f]/g; function mb(a) { return a.getAttribute && a.getAttribute("class") || "" } r.fn.extend({ addClass: function (a) { var b, c, d, e, f, g, h, i = 0; if (r.isFunction(a)) return this.each(function (b) { r(this).addClass(a.call(this, b, mb(this))) }); if ("string" == typeof a && a) { b = a.match(K) || []; while (c = this[i++]) if (e = mb(c), d = 1 === c.nodeType && (" " + e + " ").replace(lb, " ")) { g = 0; while (f = b[g++]) d.indexOf(" " + f + " ") < 0 && (d += f + " "); h = r.trim(d), e !== h && c.setAttribute("class", h) } } return this }, removeClass: function (a) { var b, c, d, e, f, g, h, i = 0; if (r.isFunction(a)) return this.each(function (b) { r(this).removeClass(a.call(this, b, mb(this))) }); if (!arguments.length) return this.attr("class", ""); if ("string" == typeof a && a) { b = a.match(K) || []; while (c = this[i++]) if (e = mb(c), d = 1 === c.nodeType && (" " + e + " ").replace(lb, " ")) { g = 0; while (f = b[g++]) while (d.indexOf(" " + f + " ") > -1) d = d.replace(" " + f + " ", " "); h = r.trim(d), e !== h && c.setAttribute("class", h) } } return this }, toggleClass: function (a, b) { var c = typeof a; return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : r.isFunction(a) ? this.each(function (c) { r(this).toggleClass(a.call(this, c, mb(this), b), b) }) : this.each(function () { var b, d, e, f; if ("string" === c) { d = 0, e = r(this), f = a.match(K) || []; while (b = f[d++]) e.hasClass(b) ? e.removeClass(b) : e.addClass(b) } else void 0 !== a && "boolean" !== c || (b = mb(this), b && V.set(this, "__className__", b), this.setAttribute && this.setAttribute("class", b || a === !1 ? "" : V.get(this, "__className__") || "")) }) }, hasClass: function (a) { var b, c, d = 0; b = " " + a + " "; while (c = this[d++]) if (1 === c.nodeType && (" " + mb(c) + " ").replace(lb, " ").indexOf(b) > -1) return !0; return !1 } }); var nb = /\r/g, ob = /[\x20\t\r\n\f]+/g; r.fn.extend({ val: function (a) { var b, c, d, e = this[0]; { if (arguments.length) return d = r.isFunction(a), this.each(function (c) { var e; 1 === this.nodeType && (e = d ? a.call(this, c, r(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : r.isArray(e) && (e = r.map(e, function (a) { return null == a ? "" : a + "" })), b = r.valHooks[this.type] || r.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e)) }); if (e) return b = r.valHooks[e.type] || r.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(nb, "") : null == c ? "" : c) } } }), r.extend({ valHooks: { option: { get: function (a) { var b = r.find.attr(a, "value"); return null != b ? b : r.trim(r.text(a)).replace(ob, " ") } }, select: { get: function (a) { for (var b, c, d = a.options, e = a.selectedIndex, f = "select-one" === a.type, g = f ? null : [], h = f ? e + 1 : d.length, i = e < 0 ? h : f ? e : 0; i < h; i++)if (c = d[i], (c.selected || i === e) && !c.disabled && (!c.parentNode.disabled || !r.nodeName(c.parentNode, "optgroup"))) { if (b = r(c).val(), f) return b; g.push(b) } return g }, set: function (a, b) { var c, d, e = a.options, f = r.makeArray(b), g = e.length; while (g--) d = e[g], (d.selected = r.inArray(r.valHooks.option.get(d), f) > -1) && (c = !0); return c || (a.selectedIndex = -1), f } } } }), r.each(["radio", "checkbox"], function () { r.valHooks[this] = { set: function (a, b) { if (r.isArray(b)) return a.checked = r.inArray(r(a).val(), b) > -1 } }, o.checkOn || (r.valHooks[this].get = function (a) { return null === a.getAttribute("value") ? "on" : a.value }) }); var pb = /^(?:focusinfocus|focusoutblur)$/; r.extend(r.event, { trigger: function (b, c, e, f) { var g, h, i, j, k, m, n, o = [e || d], p = l.call(b, "type") ? b.type : b, q = l.call(b, "namespace") ? b.namespace.split(".") : []; if (h = i = e = e || d, 3 !== e.nodeType && 8 !== e.nodeType && !pb.test(p + r.event.triggered) && (p.indexOf(".") > -1 && (q = p.split("."), p = q.shift(), q.sort()), k = p.indexOf(":") < 0 && "on" + p, b = b[r.expando] ? b : new r.Event(p, "object" == typeof b && b), b.isTrigger = f ? 2 : 3, b.namespace = q.join("."), b.rnamespace = b.namespace ? new RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = e), c = null == c ? [b] : r.makeArray(c, [b]), n = r.event.special[p] || {}, f || !n.trigger || n.trigger.apply(e, c) !== !1)) { if (!f && !n.noBubble && !r.isWindow(e)) { for (j = n.delegateType || p, pb.test(j + p) || (h = h.parentNode); h; h = h.parentNode)o.push(h), i = h; i === (e.ownerDocument || d) && o.push(i.defaultView || i.parentWindow || a) } g = 0; while ((h = o[g++]) && !b.isPropagationStopped()) b.type = g > 1 ? j : n.bindType || p, m = (V.get(h, "events") || {})[b.type] && V.get(h, "handle"), m && m.apply(h, c), m = k && h[k], m && m.apply && T(h) && (b.result = m.apply(h, c), b.result === !1 && b.preventDefault()); return b.type = p, f || b.isDefaultPrevented() || n._default && n._default.apply(o.pop(), c) !== !1 || !T(e) || k && r.isFunction(e[p]) && !r.isWindow(e) && (i = e[k], i && (e[k] = null), r.event.triggered = p, e[p](), r.event.triggered = void 0, i && (e[k] = i)), b.result } }, simulate: function (a, b, c) { var d = r.extend(new r.Event, c, { type: a, isSimulated: !0 }); r.event.trigger(d, null, b) } }), r.fn.extend({ trigger: function (a, b) { return this.each(function () { r.event.trigger(a, b, this) }) }, triggerHandler: function (a, b) { var c = this[0]; if (c) return r.event.trigger(a, b, c, !0) } }), r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function (a, b) { r.fn[b] = function (a, c) { return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b) } }), r.fn.extend({ hover: function (a, b) { return this.mouseenter(a).mouseleave(b || a) } }), o.focusin = "onfocusin" in a, o.focusin || r.each({ focus: "focusin", blur: "focusout" }, function (a, b) { var c = function (a) { r.event.simulate(b, a.target, r.event.fix(a)) }; r.event.special[b] = { setup: function () { var d = this.ownerDocument || this, e = V.access(d, b); e || d.addEventListener(a, c, !0), V.access(d, b, (e || 0) + 1) }, teardown: function () { var d = this.ownerDocument || this, e = V.access(d, b) - 1; e ? V.access(d, b, e) : (d.removeEventListener(a, c, !0), V.remove(d, b)) } } }); var qb = a.location, rb = r.now(), sb = /\?/; r.parseXML = function (b) { var c; if (!b || "string" != typeof b) return null; try { c = (new a.DOMParser).parseFromString(b, "text/xml") } catch (d) { c = void 0 } return c && !c.getElementsByTagName("parsererror").length || r.error("Invalid XML: " + b), c }; var tb = /\[\]$/, ub = /\r?\n/g, vb = /^(?:submit|button|image|reset|file)$/i, wb = /^(?:input|select|textarea|keygen)/i; function xb(a, b, c, d) { var e; if (r.isArray(b)) r.each(b, function (b, e) { c || tb.test(a) ? d(a, e) : xb(a + "[" + ("object" == typeof e && null != e ? b : "") + "]", e, c, d) }); else if (c || "object" !== r.type(b)) d(a, b); else for (e in b) xb(a + "[" + e + "]", b[e], c, d) } r.param = function (a, b) { var c, d = [], e = function (a, b) { var c = r.isFunction(b) ? b() : b; d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(null == c ? "" : c) }; if (r.isArray(a) || a.jquery && !r.isPlainObject(a)) r.each(a, function () { e(this.name, this.value) }); else for (c in a) xb(c, a[c], b, e); return d.join("&") }, r.fn.extend({ serialize: function () { return r.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { var a = r.prop(this, "elements"); return a ? r.makeArray(a) : this }).filter(function () { var a = this.type; return this.name && !r(this).is(":disabled") && wb.test(this.nodeName) && !vb.test(a) && (this.checked || !ha.test(a)) }).map(function (a, b) { var c = r(this).val(); return null == c ? null : r.isArray(c) ? r.map(c, function (a) { return { name: b.name, value: a.replace(ub, "\r\n") } }) : { name: b.name, value: c.replace(ub, "\r\n") } }).get() } }); var yb = /%20/g, zb = /#.*$/, Ab = /([?&])_=[^&]*/, Bb = /^(.*?):[ \t]*([^\r\n]*)$/gm, Cb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Db = /^(?:GET|HEAD)$/, Eb = /^\/\//, Fb = {}, Gb = {}, Hb = "*/".concat("*"), Ib = d.createElement("a"); Ib.href = qb.href; function Jb(a) { return function (b, c) { "string" != typeof b && (c = b, b = "*"); var d, e = 0, f = b.toLowerCase().match(K) || []; if (r.isFunction(c)) while (d = f[e++]) "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c) } } function Kb(a, b, c, d) { var e = {}, f = a === Gb; function g(h) { var i; return e[h] = !0, r.each(a[h] || [], function (a, h) { var j = h(b, c, d); return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1) }), i } return g(b.dataTypes[0]) || !e["*"] && g("*") } function Lb(a, b) { var c, d, e = r.ajaxSettings.flatOptions || {}; for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]); return d && r.extend(!0, a, d), a } function Mb(a, b, c) { var d, e, f, g, h = a.contents, i = a.dataTypes; while ("*" === i[0]) i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type")); if (d) for (e in h) if (h[e] && h[e].test(d)) { i.unshift(e); break } if (i[0] in c) f = i[0]; else { for (e in c) { if (!i[0] || a.converters[e + " " + i[0]]) { f = e; break } g || (g = e) } f = f || g } if (f) return f !== i[0] && i.unshift(f), c[f] } function Nb(a, b, c, d) { var e, f, g, h, i, j = {}, k = a.dataTypes.slice(); if (k[1]) for (g in a.converters) j[g.toLowerCase()] = a.converters[g]; f = k.shift(); while (f) if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift()) if ("*" === f) f = i; else if ("*" !== i && i !== f) { if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) { g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1])); break } if (g !== !0) if (g && a["throws"]) b = g(b); else try { b = g(b) } catch (l) { return { state: "parsererror", error: g ? l : "No conversion from " + i + " to " + f } } } return { state: "success", data: b } } r.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: qb.href, type: "GET", isLocal: Cb.test(qb.protocol), global: !0, processData: !0, async: !0, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": Hb, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": !0, "text json": JSON.parse, "text xml": r.parseXML }, flatOptions: { url: !0, context: !0 } }, ajaxSetup: function (a, b) { return b ? Lb(Lb(a, r.ajaxSettings), b) : Lb(r.ajaxSettings, a) }, ajaxPrefilter: Jb(Fb), ajaxTransport: Jb(Gb), ajax: function (b, c) { "object" == typeof b && (c = b, b = void 0), c = c || {}; var e, f, g, h, i, j, k, l, m, n, o = r.ajaxSetup({}, c), p = o.context || o, q = o.context && (p.nodeType || p.jquery) ? r(p) : r.event, s = r.Deferred(), t = r.Callbacks("once memory"), u = o.statusCode || {}, v = {}, w = {}, x = "canceled", y = { readyState: 0, getResponseHeader: function (a) { var b; if (k) { if (!h) { h = {}; while (b = Bb.exec(g)) h[b[1].toLowerCase()] = b[2] } b = h[a.toLowerCase()] } return null == b ? null : b }, getAllResponseHeaders: function () { return k ? g : null }, setRequestHeader: function (a, b) { return null == k && (a = w[a.toLowerCase()] = w[a.toLowerCase()] || a, v[a] = b), this }, overrideMimeType: function (a) { return null == k && (o.mimeType = a), this }, statusCode: function (a) { var b; if (a) if (k) y.always(a[y.status]); else for (b in a) u[b] = [u[b], a[b]]; return this }, abort: function (a) { var b = a || x; return e && e.abort(b), A(0, b), this } }; if (s.promise(y), o.url = ((b || o.url || qb.href) + "").replace(Eb, qb.protocol + "//"), o.type = c.method || c.type || o.method || o.type, o.dataTypes = (o.dataType || "*").toLowerCase().match(K) || [""], null == o.crossDomain) { j = d.createElement("a"); try { j.href = o.url, j.href = j.href, o.crossDomain = Ib.protocol + "//" + Ib.host != j.protocol + "//" + j.host } catch (z) { o.crossDomain = !0 } } if (o.data && o.processData && "string" != typeof o.data && (o.data = r.param(o.data, o.traditional)), Kb(Fb, o, c, y), k) return y; l = r.event && o.global, l && 0 === r.active++ && r.event.trigger("ajaxStart"), o.type = o.type.toUpperCase(), o.hasContent = !Db.test(o.type), f = o.url.replace(zb, ""), o.hasContent ? o.data && o.processData && 0 === (o.contentType || "").indexOf("application/x-www-form-urlencoded") && (o.data = o.data.replace(yb, "+")) : (n = o.url.slice(f.length), o.data && (f += (sb.test(f) ? "&" : "?") + o.data, delete o.data), o.cache === !1 && (f = f.replace(Ab, ""), n = (sb.test(f) ? "&" : "?") + "_=" + rb++ + n), o.url = f + n), o.ifModified && (r.lastModified[f] && y.setRequestHeader("If-Modified-Since", r.lastModified[f]), r.etag[f] && y.setRequestHeader("If-None-Match", r.etag[f])), (o.data && o.hasContent && o.contentType !== !1 || c.contentType) && y.setRequestHeader("Content-Type", o.contentType), y.setRequestHeader("Accept", o.dataTypes[0] && o.accepts[o.dataTypes[0]] ? o.accepts[o.dataTypes[0]] + ("*" !== o.dataTypes[0] ? ", " + Hb + "; q=0.01" : "") : o.accepts["*"]); for (m in o.headers) y.setRequestHeader(m, o.headers[m]); if (o.beforeSend && (o.beforeSend.call(p, y, o) === !1 || k)) return y.abort(); if (x = "abort", t.add(o.complete), y.done(o.success), y.fail(o.error), e = Kb(Gb, o, c, y)) { if (y.readyState = 1, l && q.trigger("ajaxSend", [y, o]), k) return y; o.async && o.timeout > 0 && (i = a.setTimeout(function () { y.abort("timeout") }, o.timeout)); try { k = !1, e.send(v, A) } catch (z) { if (k) throw z; A(-1, z) } } else A(-1, "No Transport"); function A(b, c, d, h) { var j, m, n, v, w, x = c; k || (k = !0, i && a.clearTimeout(i), e = void 0, g = h || "", y.readyState = b > 0 ? 4 : 0, j = b >= 200 && b < 300 || 304 === b, d && (v = Mb(o, y, d)), v = Nb(o, v, y, j), j ? (o.ifModified && (w = y.getResponseHeader("Last-Modified"), w && (r.lastModified[f] = w), w = y.getResponseHeader("etag"), w && (r.etag[f] = w)), 204 === b || "HEAD" === o.type ? x = "nocontent" : 304 === b ? x = "notmodified" : (x = v.state, m = v.data, n = v.error, j = !n)) : (n = x, !b && x || (x = "error", b < 0 && (b = 0))), y.status = b, y.statusText = (c || x) + "", j ? s.resolveWith(p, [m, x, y]) : s.rejectWith(p, [y, x, n]), y.statusCode(u), u = void 0, l && q.trigger(j ? "ajaxSuccess" : "ajaxError", [y, o, j ? m : n]), t.fireWith(p, [y, x]), l && (q.trigger("ajaxComplete", [y, o]), --r.active || r.event.trigger("ajaxStop"))) } return y }, getJSON: function (a, b, c) { return r.get(a, b, c, "json") }, getScript: function (a, b) { return r.get(a, void 0, b, "script") } }), r.each(["get", "post"], function (a, b) { r[b] = function (a, c, d, e) { return r.isFunction(c) && (e = e || d, d = c, c = void 0), r.ajax(r.extend({ url: a, type: b, dataType: e, data: c, success: d }, r.isPlainObject(a) && a)) } }), r._evalUrl = function (a) { return r.ajax({ url: a, type: "GET", dataType: "script", cache: !0, async: !1, global: !1, "throws": !0 }) }, r.fn.extend({ wrapAll: function (a) { var b; return this[0] && (r.isFunction(a) && (a = a.call(this[0])), b = r(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function () { var a = this; while (a.firstElementChild) a = a.firstElementChild; return a }).append(this)), this }, wrapInner: function (a) { return r.isFunction(a) ? this.each(function (b) { r(this).wrapInner(a.call(this, b)) }) : this.each(function () { var b = r(this), c = b.contents(); c.length ? c.wrapAll(a) : b.append(a) }) }, wrap: function (a) { var b = r.isFunction(a); return this.each(function (c) { r(this).wrapAll(b ? a.call(this, c) : a) }) }, unwrap: function (a) { return this.parent(a).not("body").each(function () { r(this).replaceWith(this.childNodes) }), this } }), r.expr.pseudos.hidden = function (a) { return !r.expr.pseudos.visible(a) }, r.expr.pseudos.visible = function (a) { return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length) }, r.ajaxSettings.xhr = function () { try { return new a.XMLHttpRequest } catch (b) { } }; var Ob = { 0: 200, 1223: 204 }, Pb = r.ajaxSettings.xhr(); o.cors = !!Pb && "withCredentials" in Pb, o.ajax = Pb = !!Pb, r.ajaxTransport(function (b) { var c, d; if (o.cors || Pb && !b.crossDomain) return { send: function (e, f) { var g, h = b.xhr(); if (h.open(b.type, b.url, b.async, b.username, b.password), b.xhrFields) for (g in b.xhrFields) h[g] = b.xhrFields[g]; b.mimeType && h.overrideMimeType && h.overrideMimeType(b.mimeType), b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest"); for (g in e) h.setRequestHeader(g, e[g]); c = function (a) { return function () { c && (c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a ? h.abort() : "error" === a ? "number" != typeof h.status ? f(0, "error") : f(h.status, h.statusText) : f(Ob[h.status] || h.status, h.statusText, "text" !== (h.responseType || "text") || "string" != typeof h.responseText ? { binary: h.response } : { text: h.responseText }, h.getAllResponseHeaders())) } }, h.onload = c(), d = h.onerror = c("error"), void 0 !== h.onabort ? h.onabort = d : h.onreadystatechange = function () { 4 === h.readyState && a.setTimeout(function () { c && d() }) }, c = c("abort"); try { h.send(b.hasContent && b.data || null) } catch (i) { if (c) throw i } }, abort: function () { c && c() } } }), r.ajaxPrefilter(function (a) { a.crossDomain && (a.contents.script = !1) }), r.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function (a) { return r.globalEval(a), a } } }), r.ajaxPrefilter("script", function (a) { void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET") }), r.ajaxTransport("script", function (a) { if (a.crossDomain) { var b, c; return { send: function (e, f) { b = r("<script>").prop({ charset: a.scriptCharset, src: a.url }).on("load error", c = function (a) { b.remove(), c = null, a && f("error" === a.type ? 404 : 200, a.type) }), d.head.appendChild(b[0]) }, abort: function () { c && c() } } } }); var Qb = [], Rb = /(=)\?(?=&|$)|\?\?/; r.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { var a = Qb.pop() || r.expando + "_" + rb++; return this[a] = !0, a } }), r.ajaxPrefilter("json jsonp", function (b, c, d) { var e, f, g, h = b.jsonp !== !1 && (Rb.test(b.url) ? "url" : "string" == typeof b.data && 0 === (b.contentType || "").indexOf("application/x-www-form-urlencoded") && Rb.test(b.data) && "data"); if (h || "jsonp" === b.dataTypes[0]) return e = b.jsonpCallback = r.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Rb, "$1" + e) : b.jsonp !== !1 && (b.url += (sb.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function () { return g || r.error(e + " was not called"), g[0] }, b.dataTypes[0] = "json", f = a[e], a[e] = function () { g = arguments }, d.always(function () { void 0 === f ? r(a).removeProp(e) : a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Qb.push(e)), g && r.isFunction(f) && f(g[0]), g = f = void 0 }), "script" }), o.createHTMLDocument = function () { var a = d.implementation.createHTMLDocument("").body; return a.innerHTML = "<form></form><form></form>", 2 === a.childNodes.length }(), r.parseHTML = function (a, b, c) { if ("string" != typeof a) return []; "boolean" == typeof b && (c = b, b = !1); var e, f, g; return b || (o.createHTMLDocument ? (b = d.implementation.createHTMLDocument(""), e = b.createElement("base"), e.href = d.location.href, b.head.appendChild(e)) : b = d), f = B.exec(a), g = !c && [], f ? [b.createElement(f[1])] : (f = oa([a], b, g), g && g.length && r(g).remove(), r.merge([], f.childNodes)) }, r.fn.load = function (a, b, c) { var d, e, f, g = this, h = a.indexOf(" "); return h > -1 && (d = r.trim(a.slice(h)), a = a.slice(0, h)), r.isFunction(b) ? (c = b, b = void 0) : b && "object" == typeof b && (e = "POST"), g.length > 0 && r.ajax({ url: a, type: e || "GET", dataType: "html", data: b }).done(function (a) { f = arguments, g.html(d ? r("<div>").append(r.parseHTML(a)).find(d) : a) }).always(c && function (a, b) { g.each(function () { c.apply(this, f || [a.responseText, b, a]) }) }), this }, r.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (a, b) { r.fn[b] = function (a) { return this.on(b, a) } }), r.expr.pseudos.animated = function (a) { return r.grep(r.timers, function (b) { return a === b.elem }).length }; function Sb(a) { return r.isWindow(a) ? a : 9 === a.nodeType && a.defaultView } r.offset = { setOffset: function (a, b, c) { var d, e, f, g, h, i, j, k = r.css(a, "position"), l = r(a), m = {}; "static" === k && (a.style.position = "relative"), h = l.offset(), f = r.css(a, "top"), i = r.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), r.isFunction(b) && (b = b.call(a, c, r.extend({}, h))), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m) } }, r.fn.extend({ offset: function (a) { if (arguments.length) return void 0 === a ? this : this.each(function (b) { r.offset.setOffset(this, a, b) }); var b, c, d, e, f = this[0]; if (f) return f.getClientRects().length ? (d = f.getBoundingClientRect(), d.width || d.height ? (e = f.ownerDocument, c = Sb(e), b = e.documentElement, { top: d.top + c.pageYOffset - b.clientTop, left: d.left + c.pageXOffset - b.clientLeft }) : d) : { top: 0, left: 0 } }, position: function () { if (this[0]) { var a, b, c = this[0], d = { top: 0, left: 0 }; return "fixed" === r.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), r.nodeName(a[0], "html") || (d = a.offset()), d = { top: d.top + r.css(a[0], "borderTopWidth", !0), left: d.left + r.css(a[0], "borderLeftWidth", !0) }), { top: b.top - d.top - r.css(c, "marginTop", !0), left: b.left - d.left - r.css(c, "marginLeft", !0) } } }, offsetParent: function () { return this.map(function () { var a = this.offsetParent; while (a && "static" === r.css(a, "position")) a = a.offsetParent; return a || pa }) } }), r.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function (a, b) { var c = "pageYOffset" === b; r.fn[a] = function (d) { return S(this, function (a, d, e) { var f = Sb(a); return void 0 === e ? f ? f[b] : a[d] : void (f ? f.scrollTo(c ? f.pageXOffset : e, c ? e : f.pageYOffset) : a[d] = e) }, a, d, arguments.length) } }), r.each(["top", "left"], function (a, b) { r.cssHooks[b] = Na(o.pixelPosition, function (a, c) { if (c) return c = Ma(a, b), Ka.test(c) ? r(a).position()[b] + "px" : c }) }), r.each({ Height: "height", Width: "width" }, function (a, b) { r.each({ padding: "inner" + a, content: b, "": "outer" + a }, function (c, d) { r.fn[d] = function (e, f) { var g = arguments.length && (c || "boolean" != typeof e), h = c || (e === !0 || f === !0 ? "margin" : "border"); return S(this, function (b, c, e) { var f; return r.isWindow(b) ? 0 === d.indexOf("outer") ? b["inner" + a] : b.document.documentElement["client" + a] : 9 === b.nodeType ? (f = b.documentElement, Math.max(b.body["scroll" + a], f["scroll" + a], b.body["offset" + a], f["offset" + a], f["client" + a])) : void 0 === e ? r.css(b, c, h) : r.style(b, c, e, h) }, b, g ? e : void 0, g) } }) }), r.fn.extend({ bind: function (a, b, c) { return this.on(a, null, b, c) }, unbind: function (a, b) { return this.off(a, null, b) }, delegate: function (a, b, c, d) { return this.on(b, a, c, d) }, undelegate: function (a, b, c) { return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c) } }), r.parseJSON = JSON.parse, "function" == typeof define && define.amd && define("jquery", [], function () { return r }); var Tb = a.jQuery, Ub = a.$; return r.noConflict = function (b) { return a.$ === r && (a.$ = Ub), b && a.jQuery === r && (a.jQuery = Tb), r }, b || (a.jQuery = a.$ = r), r
});

var StringeePhone = StringeePhone || {};

function StringeePhone() {
    this.connected = false;

    this.isInCall = false;
    this.currentTab = 'dialpad'; //dialpad | calling | contact | activity

    this.stringeeClient = new StringeeClient();

    this.currentOutgoingCall = null;

    /**
     * Bien nay bao gom ca incoming call va outgoing call; chi set = null khi man hinh CALL an di
     */
    this.currentCall = null;
    this.currentCallAnswerTime = 0;

    this.remoteVideo = document.getElementById('remoteVideo');
    this.ringtonePlayer = document.getElementById('ringtonePlayer');
    this.ringtonePlayer.loop = true;

    this.timeoutEndCallUI = null;

    this.timeoutCountDuration = null;
}

StringeePhone.prototype.connect = function (access_token) {
    //trang thai
    $('.top-bar-status').html('Äang káº¿t ná»‘i...');
    $('.top-bar-status').addClass('color-red');
    $('.top-bar-status').removeClass('color-green');

    //neu cau hinh StringeeServer
    if (window.parent.StringeeSoftPhone._stringeeServerAddr) {
        this.stringeeClient._stringeeServerAddr = window.parent.StringeeSoftPhone._stringeeServerAddr;
    }

    this.stringeeClient.connect(access_token);
    this.settingClientEvents(this.stringeeClient);
};

StringeePhone.prototype.disconnect = function () {
    this.stringeeClient.disconnect();
};

StringeePhone.prototype.updateUiMinMode = function () {
    if (!this.currentCall || this.currentCall.ended) {
        //min mode: khong co cuoc goi nao
        $('#app-minimize .time').addClass('display-none');
        $('#app-minimize .line-vertical').addClass('display-none');
        $('#app-minimize .phone').addClass('display-none');
        $('#app-minimize .min-no-calls').removeClass('display-none');
    } else {
        //co cuoc goi dang dien ra
        $('#app-minimize .time').removeClass('display-none');
        $('#app-minimize .line-vertical').removeClass('display-none');
        $('#app-minimize .phone').removeClass('display-none');
        $('#app-minimize .min-no-calls').addClass('display-none');

        //
        if (this.currentCall.isIncomingCall) {
            $('#app-minimize .phone').html(this.currentCall.fromNumber);
        } else {
            $('#app-minimize .phone').html(this.currentCall.toNumber);
        }
        if (!this.currentCall.isIncomingCall.isAnswered) {
            $('#app-minimize .time').html('00:00');
        }
    }
};

StringeePhone.prototype.countDuration = function () {
    var thisPhone = this;

    thisPhone.updateUiMinMode();

    if (!thisPhone.currentCall || thisPhone.currentCall.ended) {
        return;
    }

    var time = (new Date()).getTime() - thisPhone.currentCallAnswerTime;
    var timeString = StringeePhone.formatDuration(time);

    //full mode
    $('.status-time').removeClass('display-none');
    $('.status-time').html(timeString);

    //min mode
    $('#app-minimize .time').html(timeString);

    this.timeoutCountDuration = setTimeout(function () {
        thisPhone.countDuration();
    }, 1000);
};

StringeePhone.prototype.settingClientEvents = function (client) {
    var thisPhone = this;

    client.on('connect', function () {
        console.log('connected to StringeeServer');
    });
    client.on('authen', function (res) {
        //		console.log('authen: ', res);
        $('#loggedUserId').html(res.userId);

        if (res.r === 0) {
            thisPhone.connected = true;
            window.parent.StringeeSoftPhone.connected = true;

            $('#btnToolCall').removeAttr('disabled');

            //trang thai
            $('.top-bar-status').html(res.userId);
            $('.top-bar-status').removeClass('color-red');
            $('.top-bar-status').addClass('color-green');
        } else {
            //trang thai
            $('.top-bar-status').html(res.message);
            $('.top-bar-status').addClass('color-red');
            $('.top-bar-status').removeClass('color-green');
        }

        window.parent.StringeeSoftPhone._callOnEvent('authen', res);
    });
    client.on('disconnect', function () {
        //		console.log('disconnected');
        thisPhone.connected = false;
        window.parent.StringeeSoftPhone.connected = false;

        window.parent.StringeeSoftPhone._callOnEvent('disconnect');

        //disable btn call
        $('#btnToolCall').attr('disabled', 'disabled');

        //trang thai
        $('.top-bar-status').html('Disconnected');
        $('.top-bar-status').addClass('color-red');
        $('.top-bar-status').removeClass('color-green');
    });
    client.on('incomingcall', function (incomingcall) {
        if (thisPhone.currentCall) {
            //neu hien tai dang co cuoc goi
            if (!thisPhone.currentCall.ended) {
                //reject cuoc goi den
                console.log('Im busy now, reject incoming call: ' + incomingcall.callId);
                incomingcall.reject();
                return;
            } else if (thisPhone.timeoutEndCallUI) {
                //cuoc goi hien tai da ngat, tuy nhien timeout hideCalling chua chay xong
                //				console.log('cuoc goi hien tai da ngat, tuy nhien timeout hideCalling chua chay xong');
                clearTimeout(thisPhone.timeoutEndCallUI);
                thisPhone.hideCallingUI();
                thisPhone.showIncomingCall(false);

                thisPhone.isInCall = false;
                thisPhone.currentCall = null;
                thisPhone.timeoutEndCallUI = null;
            }
        }

        thisPhone.isInCall = true;
        thisPhone.currentCall = incomingcall;

        thisPhone.settingCallEvents(incomingcall);

        //		console.log('incomingcall: ', incomingcall);
        thisPhone.showIncomingCall(true);

        //show full mode
        window.parent.StringeeSoftPhone.show('full');

        var promise = thisPhone.ringtonePlayer.play();

        window.parent.StringeeSoftPhone._callOnEvent('incomingCall', incomingcall);
    });
    client.on('requestnewtoken', function () {
        window.parent.StringeeSoftPhone._callOnEvent('requestNewToken');
    });
    client.on('otherdeviceauthen', function (data) {
        console.log('otherdeviceauthen: ', data);
    });

    client.on('custommessage', function (data) {
        window.parent.StringeeSoftPhone._callOnEvent('customMessage', data);
    });
    client.on('messagefromtopic', function (data) {
        window.parent.StringeeSoftPhone._callOnEvent('messageFromTopic', data);
    });

};

StringeePhone.prototype.settingCallEvents = function (call1) {
    var thisPhone = this;

    call1.on('addlocalstream', function (stream) {
        window.parent.StringeeSoftPhone._callOnEvent('addlocalstream', stream);
    });

    call1.on('addremotestream', function (stream) {
        var eventMethod = window.parent.StringeeSoftPhone._onMethods.get('addremotestream');
        if (!eventMethod) {
            // reset srcObject to work around minor bugs in Chrome and Edge.
            thisPhone.remoteVideo.srcObject = null;
            thisPhone.remoteVideo.srcObject = stream;
        } else {
            eventMethod.call(window.parent.StringeeSoftPhone, stream);
        }
    });

    call1.on('signalingstate', function (state) {
        console.log('signalingstate ', state);

        if (state.code === 6) { //Ended
            //neu la cuoc goi den chua tra loi
            if (call1.isIncomingCall && !call1.isAnswered) {
                //				thisPhone.showIncomingCall(false);
                thisPhone.hideIncomingCallUIWithTimeout('Call ended');

                thisPhone.stopRingtoneIncomingCall();
            } else {
                thisPhone.hideCallingUIWithTimeout();
            }

            //			thisPhone.hideCallingUIWithTimeout();//test nen de day
        } else if (state.code === 5) { //Busy
            thisPhone.hideCallingUIWithTimeout();
        } else if (state.code === 3) { //answer
            thisPhone.currentCallAnswerTime = (new Date()).getTime();
            thisPhone.countDuration();
        }


        if (state.reason == 'Calling') {
            thisPhone.callStatus('Äang gá»i...');
        } else if (state.reason == 'Ringing') {
            thisPhone.callStatus('Äang Ä‘á»• chuÃ´ng...');
        } else if (state.reason == 'Busy here') {
            thisPhone.callStatus('MÃ¡y báº­n');
        } else if (state.reason == 'Answered') {
            thisPhone.callStatus('ÄÃ£ tráº£ lá»i');
        } else if (state.reason == 'Ended') {
            thisPhone.callStatus('ÄÃ£ káº¿t thÃºc');
        } else {
            thisPhone.callStatus(state.reason);
        }

        var eventMethod = window.parent.StringeeSoftPhone._onMethods.get('signalingstate');
        if (eventMethod) {
            eventMethod.call(window.parent.StringeeSoftPhone, state);
        }
    });

    call1.on('mediastate', function (state) {
        console.log('mediastate ', state);
    });

    call1.on('info', function (info) {
        console.log('on info', info);
    });

    call1.on('otherdevice', function (data) {
        console.log('on otherdevice:' + JSON.stringify(data));

        //thiet bi khac tu choi nghe may, nghe may hoac ngat may sau khi da nghe may
        if ((data.type === 'CALL_STATE' && data.code >= 200) || data.type === 'CALL_END') {
            var status = '';
            thisPhone.hideIncomingCallUIWithTimeout(status);
        }

        //dung tieng chuong khi nghe hoac ngat may tu thiet bi khac
        if (data.type === 'CALL_STATE' && data.code >= 200) {
            thisPhone.stopRingtoneIncomingCall();
        }

        /*Tam thoi KHONG DUNG
        if (data.type === 'CALL_STATE' && data.code == 200) {
            //neu thiet bi khac nghe may
//			console.log('=========thiet bi khac nghe may===TODO');
            $('#btnToolCall').attr('disabled', 'disabled');
            thisPhone.incomingCallAcceptBtnClicked();
            thisPhone.callStatus('ÄÃ£ tráº£ lá»i trÃªn thiáº¿t bá»‹ khÃ¡c');
        }
        */

        if (data.type === 'CALL_END' && thisPhone.currentCall) { //thiet bi khac ngat may (sau khi da nghe may)
            console.log('thiet bi khac ngat may (sau khi da nghe may)');
            thisPhone.hideCallingUIWithTimeout();
        }
    });
};


StringeePhone.prototype.makeCall = function (fromNumber, toNumber, callType) {
    var thisPhone = this;

    var isVideoCall = callType === 'free-video-call';

    var call = new StringeeCall(this.stringeeClient, fromNumber, toNumber, isVideoCall);

    //Kiem tra xem Dev co thuc hien ham: onBeforeMakeCall
    var onBeforeMakeCall = window.parent.StringeeSoftPhone._onMethods.get('beforeMakeCall');
    if (onBeforeMakeCall) {
        //neu dev dinh nghia ham nay 'onBeforeMakeCall'
        var res = onBeforeMakeCall.call(this, call, callType);
        if (res === false) {
            console.log('onBeforeMakeCall return false');
            return false;
        }
    }

    this.settingCallEvents(call);
    call.makeCall(function (res) {
        console.log('+++make call callback: ' + JSON.stringify(res));
        localStorage.setItem('isCalled', true);
        localStorage.setItem('callInfo', JSON.stringify(res));
        //Kiem tra xem Dev co thuc hien ham: on(makeOutgoingCallResult)
        var onMakeCall = window.parent.StringeeSoftPhone._onMethods.get('makeOutgoingCallResult');
        //neu dev dinh nghia ham nay 'on(makeOutgoingCallResult_'
        if (onMakeCall) {
            onMakeCall.call(this, res);
        }

        if (res.r != 0) {
            $('#callStatus').html(res.message);
            thisPhone.hideCallingUIWithTimeout();
        }
    });

    this.currentOutgoingCall = call;
    this.currentCall = call;

    return true;
};
var StringeePhone = StringeePhone || {};

StringeePhone.prototype.baseUrl = 'https://static.stringee.com/web_phone/lastest/';

StringeePhone.prototype.showIncomingCall = function (show) {
    if (show) {
        this.callStatus('CÃ³ cuá»™c gá»i Ä‘áº¿n');

        //from, fromAlias
        $('.incomming-call-info .info-name').html(this.currentCall.fromNumber);
        $('.incomming-call-info .location-text').html(this.currentCall.toAlias);

        $('.page').addClass('display-none');
        $('#page-incomming-call').removeClass('display-none');
        $('.wrap-toolbar-bottom').addClass('display-none');

        $('.wrap-toolbar-bottom').removeClass('bg-transparent');
    } else {
        $('.wrap-toolbar-bottom').removeClass('display-none');

        this.showTab(this.currentTab);

        $('#btn-incomming-decline').removeAttr('disabled');
        $('#btn-incomming-accept').removeAttr('disabled');
    }
};

StringeePhone.prototype.hideCallingUI = function () {
    $('#btnToolCall').removeAttr('disabled');

    //chuyen btn END_CALL -> CALL
    $('#btnToolCall').removeClass('btn-red');
    $('#btnToolCall').addClass('btn-green');
    $('#btnToolCall .icon').removeAttr('style');
    // an ban phim dtmf + clear input dtmf
    $('#page-calling').removeClass('diapad-when-calling');
    $('#page-calling input').val('');

    var eventMethod = window.parent.StringeeSoftPhone._onMethods.get('callingScreenHide');
    if (eventMethod) {
        eventMethod.call(window.parent.StringeeSoftPhone);
    }

    this.showTab('dialpad');
};

StringeePhone.prototype.showTab = function (tabName) {
    if (tabName === 'activity' || tabName === 'contact') {
        alert('Coming soon!');
        return false;
    }

    this.currentTab = tabName;

    if (tabName === 'dialpad') { //dialpad =========================>
        $('.page').addClass('display-none');
        $('#page-diapad').removeClass('display-none');

        $('#app').removeClass('bg-light-gray');
        $('#btnToolPad').addClass('display-none');
        $('#btnToolCall').removeClass('display-none');

        $('.wrap-toolbar-bottom').removeClass('bg-transparent');

        $('#page-diapad input').focus();
        let phoneNumber = localStorage.getItem('customer-phone-number');
        if (phoneNumber) {
            $("#page-diapad input").val('+84 ' + phoneNumber); //auto binding phone number
        }
        else $("#page-diapad input").val('+84 ');

        $('.top-bar-title').html('');
    } else if (tabName === 'calling') { //calling =========================>
        $('.page').addClass('display-none');
        $('#page-calling').removeClass('display-none');
        $('.wrap-toolbar-bottom').addClass('bg-transparent');

        $('.top-bar-title').html('');
    } else if (tabName === 'contact') { //contact =========================>
        $('.page').addClass('display-none');
        $('#page-contact').removeClass('display-none');

        $('#btnToolPad').removeClass('display-none');
        $('#btnToolCall').addClass('display-none');

        $('.wrap-toolbar-bottom').removeClass('bg-transparent');

        $('.top-bar-title').html('Contacts');
    } else if (tabName === 'activity') { //activity =========================>
        $('.page').addClass('display-none');
        $('#page-activity').removeClass('display-none');

        $('.wrap-toolbar-bottom .icon').addClass('display-none');
        $('.wrap-toolbar-bottom .icon-gray').removeClass('display-none');
        $('.wrap-toolbar-bottom').removeClass('bg-transparent');

        $('#btnToolPad').removeClass('display-none');
        $('#btnToolCall').addClass('display-none');

        $('.top-bar-title').html('Recents');
    }
};

StringeePhone.prototype.callStatus = function (status) {
    $('.status-text').html(status);

    this.updateUiMinMode();
};

StringeePhone.prototype.setLabelHtml = function (selector, html) {
    $(selector).html(html);
};

StringeePhone.prototype.hideCallingUIWithTimeout = function () { //tao timeout an man hinh Calling
    var thisPhone = this;

    $('#btnToolCall').attr('disabled', 'disabled');

    this.callStatus('ÄÃ£ káº¿t thÃºc');

    thisPhone.timeoutEndCallUI = setTimeout(function () {
        thisPhone.hideCallingUI();

        thisPhone.isInCall = false;
        thisPhone.currentCall = null;
        thisPhone.timeoutEndCallUI = null;
    }, 2000);
};

StringeePhone.prototype.hideIncomingCallUIWithTimeout = function (status) { //tao timeout an man hinh IncomingCall
    var thisPhone = this;

    this.callStatus(status);

    $('#btn-incomming-decline').attr('disabled', 'disabled');
    $('#btn-incomming-accept').attr('disabled', 'disabled');

    thisPhone.timeoutEndCallUI = setTimeout(function () {
        thisPhone.showIncomingCall(false);

        thisPhone.isInCall = false;
        thisPhone.currentCall = null;
        thisPhone.timeoutEndCallUI = null;

        var eventMethod = window.parent.StringeeSoftPhone._onMethods.get('incomingScreenHide');
        if (eventMethod) {
            eventMethod.call(window.parent.StringeeSoftPhone);
        }

    }, 2000);
};

StringeePhone.prototype.makeCallWithUI = function (fromNumber, toNumber, callback, callType) {
    if (this.isInCall || this.currentCall) {
        callback.call(this, {
            r: 2,
            msg: 'StringeeSoftphone is busy'
        });
        return false;
    }

    $("#page-diapad input").val(toNumber);
    $('#from-number-callout').html(fromNumber);

    this.callBtnClicked(callType, false);

    callback.call(this, {
        r: 0,
        msg: 'Success'
    });
};

StringeePhone.prototype.callBtnClicked = function (callType, isBtnClicked) {
    //toNumber
    var toNumber = $("#page-diapad input").val();
    toNumber = toNumber.replace("%2B", '');
    toNumber = toNumber.replace("+", '');
    toNumber = toNumber.replace(' ', '');
    toNumber = toNumber.trim();
    if (toNumber.substr(0, 2) == "84" && toNumber.substr(2, 1) == "0") {
        toNumber = toNumber.slice(0, 2) + toNumber.slice(3)
    }

    //fromNumber
    var fromNumber = $('#from-number-callout').html();
    fromNumber = fromNumber.replace("%2B", '');
    fromNumber = fromNumber.replace("+", '');
    fromNumber = fromNumber.replace(' ', '');

    this.isInCall = !this.isInCall;

    if (this.isInCall) {
        //neu cau hinh hoi xem kieu Call (voice call, video call, call out); neu setting la hoi va chua truyen vao callType
        if (window.parent.StringeeSoftPhone.askCallTypeWhenMakeCall && !callType) {
            //hien thi man hinh hoi
            $('.wrap-option-call').removeClass('display-none');

            this.isInCall = !this.isInCall;
            return;
        }

        //set callType
        if (!callType) {
            callType = 'callout';
        }

        if (isBtnClicked) {
            var eventMethod = window.parent.StringeeSoftPhone._onMethods.get('makeOutgoingCallBtnClick');
            if (eventMethod) {
                eventMethod.call(window.parent.StringeeSoftPhone, fromNumber, toNumber, callType);
            }
        }

        //neu mo popup moi luc makecall
        if (window.parent.StringeeSoftPhone.makeAndReceiveCallInNewPopupWindow) {
            this.isInCall = !this.isInCall;
            return;
        }

        $('.info-name').html(toNumber);
        this.callStatus('Äang gá»i...');

        this.showTab('calling');

        $('.status-time').addClass('display-none');

        var makeCallOk = this.makeCall(fromNumber, toNumber, callType);

        //chuyen btn CALL -> END_CALL
        $('#btnToolCall').addClass('btn-red');
        $('#btnToolCall').removeClass('btn-green');
        $('#btnToolCall .icon').attr('style', 'transform: rotate(135deg);');

        if (makeCallOk) {
            $('#page-calling .location-text').html(fromNumber);
        } else {
            this.isInCall = !this.isInCall;
            this.hideCallingUIWithTimeout();
        }
    } else {
        var eventMethod = window.parent.StringeeSoftPhone._onMethods.get('endCallBtnClick');
        if (eventMethod) {
            eventMethod.call(window.parent.StringeeSoftPhone);
        }

        if (this.currentCall) {
            this.currentCall.hangup();
            this.hideCallingUIWithTimeout();
        }
    }
};

StringeePhone.prototype.hangupCall = function () {
    if (this.currentCall) {
        this.currentCall.hangup();
        this.hideCallingUIWithTimeout();

        return true;
    }
    return false;
};

StringeePhone.prototype.answerCall = function () {
    if (this.currentCall && this.currentCall.isIncomingCall && !this.currentCall.isAnswered) {
        this.incomingCallAcceptBtnClicked();

        return true;
    }

    return false;
};

StringeePhone.prototype.stopRingtoneIncomingCall = function () {
    this.ringtonePlayer.pause();
    this.ringtonePlayer.currentTime = 0;
};

StringeePhone.prototype.incomingCallAcceptBtnClicked = function () {
    var thisPhone = this;
    if (thisPhone.currentCall && !thisPhone.currentCall.isAnswered) {
        if (!thisPhone.currentCall.answeredOnAnotherDevice) {
            thisPhone.currentCall.answer();
        }

        thisPhone.currentCallAnswerTime = (new Date()).getTime();
        thisPhone.countDuration();

        //toAlias
        $('#page-calling .location-text').html(this.currentCall.toAlias);
    }

    //dung tieng play ringtone
    thisPhone.stopRingtoneIncomingCall();

    thisPhone.showIncomingCall(false);

    this.isInCall = true;

    $('.info-name').html(thisPhone.currentCall.fromNumber);
    this.callStatus('ÄÃ£ tráº£ lá»i');

    this.showTab('calling');

    //show tab calling thi phai chuyen btn o giua thanh call
    $('#btnToolPad').addClass('display-none');
    $('#btnToolCall').removeClass('display-none');

    //chuyen btn CALL -> END_CALL
    $('#btnToolCall').addClass('btn-red');
    $('#btnToolCall').removeClass('btn-green');
    $('#btnToolCall .icon').attr('style', 'transform: rotate(135deg);');
};

StringeePhone.prototype.incomingCallDeclineBtnClicked = function () {
    var eventMethod = window.parent.StringeeSoftPhone._onMethods.get('declineIncomingCallBtnClick');
    if (eventMethod) {
        eventMethod.call(window.parent.StringeeSoftPhone);
    }

    var thisPhone = this;
    if (this.currentCall) {
        this.currentCall.reject();
    }

    thisPhone.stopRingtoneIncomingCall();

    thisPhone.hideIncomingCallUIWithTimeout('Call declined');
};

StringeePhone.prototype.keypadKeyPress = function (key) {
    var current = $('#page-diapad input').val();
    $('#page-diapad input').val(current + key);
    $('#page-diapad input').focus();
};

StringeePhone.prototype.keypadKeyDtmfPress = function (key) {
    var current = $('#page-calling input').val();
    $('#page-calling input').val(current + key);
    $('#page-calling input').focus();

    if (this.currentCall) {
        this.currentCall.sendDtmf(key, function (res) {
            console.log('++++ sendDtmf key ' + key)
        });
    }

};

StringeePhone.formatDuration = function (duration) {
    var time = Math.floor(duration / 1000);

    var second = time % 60;
    var minute = Math.floor(time / 60);
    var hour;
    if (minute < 60) {
        hour = 0;
    } else {
        hour = Math.floor(minute / 60);
        minute = minute % 60;
    }

    //them so 0
    if (hour < 10) {
        hour = '0' + hour;
    }
    if (minute < 10) {
        minute = '0' + minute;
    }
    if (second < 10) {
        second = '0' + second;
    }

    var timeString;
    if (hour === '00') {
        timeString = minute + ':' + second;
    } else {
        timeString = hour + ':' + minute + ':' + second;
    }

    return timeString;
};

StringeePhone.prototype.muteBtnClicked = function () {
    if (this.currentCall && !this.currentCall.ended) {
        var active = $('#btnMic').hasClass('active');
        if (active) {
            $('#btnMic').removeClass('active');
        } else {
            $('#btnMic').addClass('active');
        }

        var muted = !active;
        this.currentCall.mute(muted);
    }
};

StringeePhone.prototype.transferBtnClicked = function () {
    if (this.currentCall && !this.currentCall.ended) {
        //		console.log('StringeePhone.prototype.transferBtnClicked');
        window.parent.StringeeSoftPhone._callOnEvent('transferCallBtnClick', this.currentCall);
    }
};

StringeePhone.prototype.addParticipantBtnClicked = function () {
    if (this.currentCall && !this.currentCall.ended) {
        //		console.log('StringeePhone.prototype.transferBtnClicked');
        window.parent.StringeeSoftPhone._callOnEvent('addParticipantBtnClick', this.currentCall);
    }
};



StringeePhone.prototype.holdBtnClicked = function () {
    if (this.currentCall && !this.currentCall.ended) {
        var active = $('#btnHold').hasClass('active');
        if (active) {
            //hien tai dang hold
            //goi lenh de unhold
            var unholdOk = this.currentCall.unhold();
            if (unholdOk) {
                $('#btnHold').removeClass('active');
            }
        } else {
            //hien tai dang chua hold
            //goi lenh de hold
            var holdOk = this.currentCall.hold();
            if (holdOk) {
                $('#btnHold').addClass('active');
            }
        }
    }
};

StringeePhone.prototype.showMode = function (mode) {
    if (mode === 'min') {
        $('#stringee_clound').addClass('mode-minimize');
    } else if (mode === 'full') {
        $('#stringee_clound').removeClass('mode-minimize');
    }
};

StringeePhone.prototype.setFromNumbers = function (numbers) {
    var itemHtml = '<div class="call-using-dropdown-item cursor-pointer p-15 pt-10 pb-10"><div><span class="call-using-text-name display-block">Number 1</span><span class="call-using-text-phone display-block">+84899199586</span></div></div>';

    $('#list-from-numbers').html('');

    for (var i = 0; i < numbers.length; i++) {
        var number = numbers[i]; //{number: '84900000', alias: ''}

        var $item = $(itemHtml);
        $item.find('.call-using-text-name').html(number.alias);
        $item.find('.call-using-text-phone').html(number.number);

        $('#list-from-numbers').append($item);
    }

    //selected
    var selectedNumber = '';
    var selectedAlias = '';
    if (numbers.length > 0) {
        selectedNumber = numbers[0].number;
        selectedAlias = numbers[0].alias;
    }
    $('#from-number-callout-alias').html(selectedAlias);
    $('#from-number-callout').html(selectedNumber);
};

StringeePhone.prototype.showButtonClose = function (show) {
    if (show === 'show') {
        $('#btnCloseIframe').removeClass('display-none');
    } else {
        $('#btnCloseIframe').addClass('display-none');
    }
};

StringeePhone.prototype.showIconRoutingType = function (routingType) {
    // var routingType = window.parent.StringeeSoftPhone.routingType;
    var routingTypeLabelActived = '';
    if (routingType == 1) {
        routingTypeLabelActived = "<img src='" + stringeePhone.baseUrl + "images/icon-browser.png' class='icon-option-active' title='Äá»• cuá»™c gá»i Ä‘áº¿n app vÃ  sipphone'>"
    } else if (routingType == 2) {
        routingTypeLabelActived = "<img src='" + stringeePhone.baseUrl + "images/icon-phone.png' class='icon-option icon-option-active' title='Äá»• cuá»™c gá»i Ä‘áº¿n sá»‘ Ä‘iá»‡n thoáº¡i'>";
    } else if (routingType == 3) {
        routingTypeLabelActived = "<img src='" + stringeePhone.baseUrl + "images/icon-app.png' class='icon-option icon-option-active' title='Äá»• cuá»™c gá»i Ä‘áº¿n app'>";
    } else if (routingType == 4) {
        routingTypeLabelActived = "<img src='" + stringeePhone.baseUrl + "images/icon-ipphone.png' class='icon-option icon-option-active' title='Äá»• cuá»™c gá»i Ä‘áº¿n ipphone'>";
    }
    $('#routingTypeLabelActived').html(routingTypeLabelActived);
}

StringeePhone.prototype.setRoutingType = function (routingType) {
    window.parent.StringeeSoftPhone._callOnEvent('setRoutingType', routingType);
};

StringeePhone.prototype.toggleKeypadInCall = function () {
    if ($('#page-calling').hasClass('diapad-when-calling')) {
        $('#page-calling').removeClass('diapad-when-calling')
        $('.wrap-toolbar-bottom').addClass('bg-transparent');
    } else {
        $('#page-calling').addClass('diapad-when-calling')
        $('.wrap-toolbar-bottom').removeClass('bg-transparent');
    }

}


function DropDown(el) {
    this.dd = el;
    this.placeholder = this.dd.children('span');
    this.opts = this.dd.find('ul.dropdown > li');
    this.val = '';
    this.index = -1;
    this.initEvents();
}
DropDown.prototype = {
    initEvents: function () {
        var obj = this;

        obj.dd.on('click', function (event) {
            $(this).toggleClass('active');
            return false;
        });

        obj.opts.on('click', function () {
            var opt = $(this);
            obj.val = opt.attr('data-value');
            obj.icon = opt.find('.icon-option')
            obj.index = opt.index();
            var iconActive = obj.icon.clone().addClass('icon-option-active');
            obj.placeholder.html(iconActive);
        });
    },
    getValue: function () {
        return this.val;
    },
    getIndex: function () {
        return this.index;
    }
}




$(document).ready(function () {
    //khoi tao 1 StringeePhone
    var stringeePhone = new StringeePhone();

    //khoi tao dropdown routing-type
    var dd = new DropDown($('#dropdown-option-call'));

    //disable btn call
    $('#btnToolCall').attr('disabled', 'disabled');

    stringeePhone.showTab('dialpad');
    if (window.parent.StringeeSoftPhone._access_token) {
        stringeePhone.connect(window.parent.StringeeSoftPhone._access_token);
    }

    //gan vao window
    window.stringeePhone = stringeePhone;

    //window.parent
    window.parent.StringeeSoftPhone._ready = true;
    window.parent.StringeeSoftPhone.config(window.parent.StringeeSoftPhone);

    //tabbar activity click
    $('#btnToolActivity').on('click', function () {
        stringeePhone.showTab('activity');
    });

    //tabbar contact click
    $('#btnToolContact').on('click', function () {
        stringeePhone.showTab('contact');
    });

    $('#btnToolPad').on('click', function () {
        console.log('click to dialpad');
        stringeePhone.showTab('dialpad');
    });

    //call
    $('#btnToolCall').on('click', function () {
        stringeePhone.callBtnClicked(null, true);
    });

    $('#btnIncommingCall').on('click', function () {
        $('.page').addClass('display-none');
        $('#page-incomming-call').removeClass('display-none');
        $('.wrap-toolbar-bottom').addClass('display-none');

        $('.wrap-toolbar-bottom').removeClass('bg-transparent');
    });


    $('#btnSearchContact').on('click', function () {
        $('#inputSearchContact').removeClass('display-none');
    });

    $("body").on('click', function (e) {
        console.log(e.target.id);
        if (e.target.id !== "btnSearchContact" && e.target.id !== "inputSearchContact") {
            $("#inputSearchContact").addClass('display-none');
        } else {
            $("#inputSearchContact").removeClass('display-none');
            $("#inputSearchContact").focus();
        }
    });



    // call action ========= ==>
    $('#btnMic').on('click', function () {
        stringeePhone.muteBtnClicked();
    });
    //btnHold
    $('#btnHold').on('click', function () {
        stringeePhone.holdBtnClicked();
    });
    //btnTransfer
    $('#btnTransfer').on('click', function () {
        stringeePhone.transferBtnClicked();
    });
    $('#btnAddToCall').on('click', function () {
        stringeePhone.addParticipantBtnClicked();
    });

    //
    $('#btnKeypadInCall').on('click', function () {
        console.log("++++ toggleKeypadInCall")
        stringeePhone.toggleKeypadInCall()
    });
    // call action ========= <==

    //accept incoming call
    $('#btn-incomming-accept').on('click', function () {
        if (!window.parent.StringeeSoftPhone.makeAndReceiveCallInNewPopupWindow) {
            stringeePhone.incomingCallAcceptBtnClicked();
        }
        window.parent.StringeeSoftPhone._callOnEvent('answerIncomingCallBtnClick');
    });

    //decline incoming call
    $('#btn-incomming-decline').on('click', function () {
        stringeePhone.incomingCallDeclineBtnClicked();
    });

    // CLICK SHOW DROPDOWN
    $('.call-using-select').on('click', function () {
        var hasClass = $('.wrap-call-using-dropdown').hasClass('display-none');
        if (hasClass) {
            $('.wrap-call-using-dropdown').removeClass('display-none');
        } else {
            $('.wrap-call-using-dropdown').addClass('display-none');
        }
    });

    // CLICK SELECT NUMBER
    $(document).on('click', '.call-using-dropdown-item', function () {
        var thisItem = $(this);
        var text = thisItem.find('.call-using-text-name').html();
        var phone = thisItem.find('.call-using-text-phone').html();

        $('#from-number-callout-alias').html(text);
        $('#from-number-callout').html(phone);

        $('.wrap-call-using-dropdown').addClass('display-none');
    });

    //dialpad clear
    $('#page-diapad .btn-close').on('click', function () {
        $('#page-diapad input').val('+84 ');
        $('#page-diapad input').focus();
    });

    //keypadKeyPress
    $('#diapad-key-1').on('click', function () {
        stringeePhone.keypadKeyPress('1');
    });
    $('#diapad-key-2').on('click', function () {
        stringeePhone.keypadKeyPress('2');
    });
    $('#diapad-key-3').on('click', function () {
        stringeePhone.keypadKeyPress('3');
    });
    $('#diapad-key-4').on('click', function () {
        stringeePhone.keypadKeyPress('4');
    });
    $('#diapad-key-5').on('click', function () {
        stringeePhone.keypadKeyPress('5');
    });
    $('#diapad-key-6').on('click', function () {
        stringeePhone.keypadKeyPress('6');
    });
    $('#diapad-key-7').on('click', function () {
        stringeePhone.keypadKeyPress('7');
    });
    $('#diapad-key-8').on('click', function () {
        stringeePhone.keypadKeyPress('8');
    });
    $('#diapad-key-9').on('click', function () {
        stringeePhone.keypadKeyPress('9');
    });
    $('#diapad-key-star').on('click', function () {
        stringeePhone.keypadKeyPress('*');
    });
    $('#diapad-key-sharp').on('click', function () {
        stringeePhone.keypadKeyPress('#');
    });
    //+
    var mousedown0;
    $('#diapad-key-0').mouseup(function () {
        // Clear timeout
        if (mousedown0) {
            clearTimeout(mousedown0);
            stringeePhone.keypadKeyPress('0');
        }
        return false;
    }).mousedown(function () {
        // Set timeout
        mousedown0 = setTimeout(function () {
            stringeePhone.keypadKeyPress('+');
            mousedown0 = null;
        }, 1000);
        return false;
    });


    //DTMF dialpad clear
    $('#page-calling .btn-close').on('click', function () {
        $('#page-calling input').val('');
        $('#page-calling input').focus();
    });

    //keypadKeyPress
    $('#diapad-key-dtmf-1').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('1');
    });
    $('#diapad-key-dtmf-2').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('2');
    });
    $('#diapad-key-dtmf-3').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('3');
    });
    $('#diapad-key-dtmf-4').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('4');
    });
    $('#diapad-key-dtmf-5').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('5');
    });
    $('#diapad-key-dtmf-6').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('6');
    });
    $('#diapad-key-dtmf-7').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('7');
    });
    $('#diapad-key-dtmf-8').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('8');
    });
    $('#diapad-key-dtmf-9').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('9');
    });
    $('#diapad-key-dtmf-0').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('0');
    });
    $('#diapad-key-dtmf-star').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('*');
    });
    $('#diapad-key-dtmf-sharp').on('click', function () {
        stringeePhone.keypadKeyDtmfPress('#');
    });







    //thu nho / phong to
    $('#btnMinimize').on('click', function () {
        //goi len parent de thu nho iframe
        window.parent.StringeeSoftPhone.show('min');
    });

    $('#app-minimize').on('click', function () {
        //goi len parent de phong to iframe
        window.parent.StringeeSoftPhone.show('full');
    });

    //an man hinh chon call type
    $('.btn-close-option-call').on('click', function () {
        $('.wrap-option-call').addClass('display-none');
    });

    //chon call type
    $('.btn-free-voice-call').on('click', function () {
        stringeePhone.callBtnClicked('free-voice-call', true);
        $('.wrap-option-call').addClass('display-none');
    });
    $('.btn-free-video-call').on('click', function () {
        stringeePhone.callBtnClicked('free-video-call', true);
        $('.wrap-option-call').addClass('display-none');
    });
    $('.btn-free-callout').on('click', function () {
        stringeePhone.callBtnClicked('callout', true);
        $('.wrap-option-call').addClass('display-none');
    });

    // click close iframe
    $('#btnCloseIframe').on('click', function () {
        if (!stringeePhone.currentCall || stringeePhone.currentCall.ended) {
            window.parent.StringeeSoftPhone.show('none');
        } else {
            alert('Please end call before close phone');
        }
    });

    $('#dropdown-option-call').find('li').on('click', function () {
        // console.log('setRoutingType', this.attr('data-value'))
        var routingType = $(this).attr('data-value');
        stringeePhone.setRoutingType(routingType)
    })

    $('#page-diapad input').keypress(function (e) {
        if (e.which == 13) {
            $('#btnToolCall').click();
        }
    })
});